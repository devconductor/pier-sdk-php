<?php
/**
 * ConsultarCartaoResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.caas.api.v1.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.caas.api.v1.model;

use \ArrayAccess;
/**
 * ConsultarCartaoResponse Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     br.com.conductor.caas.api.v1.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ConsultarCartaoResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'codigo_retorno' => 'int',
        'cvv2' => 'string',
        'data_validade' => 'string',
        'descricao_retorno' => 'string',
        'id_cartao' => 'int',
        'id_conta' => 'int',
        'nome_portador' => 'string',
        'num_cartao' => 'string',
        'saldo_disponivel' => 'double',
        'status_cartao' => 'int',
        'status_conta' => 'int'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'codigo_retorno' => 'codigoRetorno',
        'cvv2' => 'cvv2',
        'data_validade' => 'dataValidade',
        'descricao_retorno' => 'descricaoRetorno',
        'id_cartao' => 'idCartao',
        'id_conta' => 'idConta',
        'nome_portador' => 'nomePortador',
        'num_cartao' => 'numCartao',
        'saldo_disponivel' => 'saldoDisponivel',
        'status_cartao' => 'statusCartao',
        'status_conta' => 'statusConta'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'codigo_retorno' => 'setCodigoRetorno',
        'cvv2' => 'setCvv2',
        'data_validade' => 'setDataValidade',
        'descricao_retorno' => 'setDescricaoRetorno',
        'id_cartao' => 'setIdCartao',
        'id_conta' => 'setIdConta',
        'nome_portador' => 'setNomePortador',
        'num_cartao' => 'setNumCartao',
        'saldo_disponivel' => 'setSaldoDisponivel',
        'status_cartao' => 'setStatusCartao',
        'status_conta' => 'setStatusConta'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'codigo_retorno' => 'getCodigoRetorno',
        'cvv2' => 'getCvv2',
        'data_validade' => 'getDataValidade',
        'descricao_retorno' => 'getDescricaoRetorno',
        'id_cartao' => 'getIdCartao',
        'id_conta' => 'getIdConta',
        'nome_portador' => 'getNomePortador',
        'num_cartao' => 'getNumCartao',
        'saldo_disponivel' => 'getSaldoDisponivel',
        'status_cartao' => 'getStatusCartao',
        'status_conta' => 'getStatusConta'
    );
  
    
    /**
      * $codigo_retorno 
      * @var int
      */
    protected $codigo_retorno;
    
    /**
      * $cvv2 
      * @var string
      */
    protected $cvv2;
    
    /**
      * $data_validade 
      * @var string
      */
    protected $data_validade;
    
    /**
      * $descricao_retorno 
      * @var string
      */
    protected $descricao_retorno;
    
    /**
      * $id_cartao 
      * @var int
      */
    protected $id_cartao;
    
    /**
      * $id_conta 
      * @var int
      */
    protected $id_conta;
    
    /**
      * $nome_portador 
      * @var string
      */
    protected $nome_portador;
    
    /**
      * $num_cartao 
      * @var string
      */
    protected $num_cartao;
    
    /**
      * $saldo_disponivel 
      * @var double
      */
    protected $saldo_disponivel;
    
    /**
      * $status_cartao 
      * @var int
      */
    protected $status_cartao;
    
    /**
      * $status_conta 
      * @var int
      */
    protected $status_conta;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->codigo_retorno = $data["codigo_retorno"];
            $this->cvv2 = $data["cvv2"];
            $this->data_validade = $data["data_validade"];
            $this->descricao_retorno = $data["descricao_retorno"];
            $this->id_cartao = $data["id_cartao"];
            $this->id_conta = $data["id_conta"];
            $this->nome_portador = $data["nome_portador"];
            $this->num_cartao = $data["num_cartao"];
            $this->saldo_disponivel = $data["saldo_disponivel"];
            $this->status_cartao = $data["status_cartao"];
            $this->status_conta = $data["status_conta"];
        }
    }
    
    /**
     * Gets codigo_retorno
     * @return int
     */
    public function getCodigoRetorno()
    {
        return $this->codigo_retorno;
    }
  
    /**
     * Sets codigo_retorno
     * @param int $codigo_retorno 
     * @return $this
     */
    public function setCodigoRetorno($codigo_retorno)
    {
        
        $this->codigo_retorno = $codigo_retorno;
        return $this;
    }
    
    /**
     * Gets cvv2
     * @return string
     */
    public function getCvv2()
    {
        return $this->cvv2;
    }
  
    /**
     * Sets cvv2
     * @param string $cvv2 
     * @return $this
     */
    public function setCvv2($cvv2)
    {
        
        $this->cvv2 = $cvv2;
        return $this;
    }
    
    /**
     * Gets data_validade
     * @return string
     */
    public function getDataValidade()
    {
        return $this->data_validade;
    }
  
    /**
     * Sets data_validade
     * @param string $data_validade 
     * @return $this
     */
    public function setDataValidade($data_validade)
    {
        
        $this->data_validade = $data_validade;
        return $this;
    }
    
    /**
     * Gets descricao_retorno
     * @return string
     */
    public function getDescricaoRetorno()
    {
        return $this->descricao_retorno;
    }
  
    /**
     * Sets descricao_retorno
     * @param string $descricao_retorno 
     * @return $this
     */
    public function setDescricaoRetorno($descricao_retorno)
    {
        
        $this->descricao_retorno = $descricao_retorno;
        return $this;
    }
    
    /**
     * Gets id_cartao
     * @return int
     */
    public function getIdCartao()
    {
        return $this->id_cartao;
    }
  
    /**
     * Sets id_cartao
     * @param int $id_cartao 
     * @return $this
     */
    public function setIdCartao($id_cartao)
    {
        
        $this->id_cartao = $id_cartao;
        return $this;
    }
    
    /**
     * Gets id_conta
     * @return int
     */
    public function getIdConta()
    {
        return $this->id_conta;
    }
  
    /**
     * Sets id_conta
     * @param int $id_conta 
     * @return $this
     */
    public function setIdConta($id_conta)
    {
        
        $this->id_conta = $id_conta;
        return $this;
    }
    
    /**
     * Gets nome_portador
     * @return string
     */
    public function getNomePortador()
    {
        return $this->nome_portador;
    }
  
    /**
     * Sets nome_portador
     * @param string $nome_portador 
     * @return $this
     */
    public function setNomePortador($nome_portador)
    {
        
        $this->nome_portador = $nome_portador;
        return $this;
    }
    
    /**
     * Gets num_cartao
     * @return string
     */
    public function getNumCartao()
    {
        return $this->num_cartao;
    }
  
    /**
     * Sets num_cartao
     * @param string $num_cartao 
     * @return $this
     */
    public function setNumCartao($num_cartao)
    {
        
        $this->num_cartao = $num_cartao;
        return $this;
    }
    
    /**
     * Gets saldo_disponivel
     * @return double
     */
    public function getSaldoDisponivel()
    {
        return $this->saldo_disponivel;
    }
  
    /**
     * Sets saldo_disponivel
     * @param double $saldo_disponivel 
     * @return $this
     */
    public function setSaldoDisponivel($saldo_disponivel)
    {
        
        $this->saldo_disponivel = $saldo_disponivel;
        return $this;
    }
    
    /**
     * Gets status_cartao
     * @return int
     */
    public function getStatusCartao()
    {
        return $this->status_cartao;
    }
  
    /**
     * Sets status_cartao
     * @param int $status_cartao 
     * @return $this
     */
    public function setStatusCartao($status_cartao)
    {
        
        $this->status_cartao = $status_cartao;
        return $this;
    }
    
    /**
     * Gets status_conta
     * @return int
     */
    public function getStatusConta()
    {
        return $this->status_conta;
    }
  
    /**
     * Sets status_conta
     * @param int $status_conta 
     * @return $this
     */
    public function setStatusConta($status_conta)
    {
        
        $this->status_conta = $status_conta;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
