<?php
/**
 * PessoaFisicaResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v1_1.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v1_1.model;

use \ArrayAccess;
/**
 * PessoaFisicaResponse Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     br.com.conductor.pier.api.v1_1.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PessoaFisicaResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'bairro' => 'string',
        'cep' => 'string',
        'cidade' => 'string',
        'complemento_logradouro' => 'string',
        'cpf' => 'string',
        'data_emissao_identidade' => 'string',
        'data_nascimento' => 'string',
        'dddcelular' => 'string',
        'dddtelefone' => 'string',
        'endereco' => 'string',
        'id_pessoa_fisica' => 'int',
        'identidade' => 'string',
        'nome' => 'string',
        'numero_celular' => 'string',
        'numero_logradouro' => 'int',
        'numero_telefone' => 'string',
        'orgao_emissor' => 'string',
        'sexo' => 'string',
        'uf' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'bairro' => 'bairro',
        'cep' => 'cep',
        'cidade' => 'cidade',
        'complemento_logradouro' => 'complementoLogradouro',
        'cpf' => 'cpf',
        'data_emissao_identidade' => 'dataEmissaoIdentidade',
        'data_nascimento' => 'dataNascimento',
        'dddcelular' => 'dddcelular',
        'dddtelefone' => 'dddtelefone',
        'endereco' => 'endereco',
        'id_pessoa_fisica' => 'idPessoaFisica',
        'identidade' => 'identidade',
        'nome' => 'nome',
        'numero_celular' => 'numeroCelular',
        'numero_logradouro' => 'numeroLogradouro',
        'numero_telefone' => 'numeroTelefone',
        'orgao_emissor' => 'orgaoEmissor',
        'sexo' => 'sexo',
        'uf' => 'uf'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'bairro' => 'setBairro',
        'cep' => 'setCep',
        'cidade' => 'setCidade',
        'complemento_logradouro' => 'setComplementoLogradouro',
        'cpf' => 'setCpf',
        'data_emissao_identidade' => 'setDataEmissaoIdentidade',
        'data_nascimento' => 'setDataNascimento',
        'dddcelular' => 'setDddcelular',
        'dddtelefone' => 'setDddtelefone',
        'endereco' => 'setEndereco',
        'id_pessoa_fisica' => 'setIdPessoaFisica',
        'identidade' => 'setIdentidade',
        'nome' => 'setNome',
        'numero_celular' => 'setNumeroCelular',
        'numero_logradouro' => 'setNumeroLogradouro',
        'numero_telefone' => 'setNumeroTelefone',
        'orgao_emissor' => 'setOrgaoEmissor',
        'sexo' => 'setSexo',
        'uf' => 'setUf'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'bairro' => 'getBairro',
        'cep' => 'getCep',
        'cidade' => 'getCidade',
        'complemento_logradouro' => 'getComplementoLogradouro',
        'cpf' => 'getCpf',
        'data_emissao_identidade' => 'getDataEmissaoIdentidade',
        'data_nascimento' => 'getDataNascimento',
        'dddcelular' => 'getDddcelular',
        'dddtelefone' => 'getDddtelefone',
        'endereco' => 'getEndereco',
        'id_pessoa_fisica' => 'getIdPessoaFisica',
        'identidade' => 'getIdentidade',
        'nome' => 'getNome',
        'numero_celular' => 'getNumeroCelular',
        'numero_logradouro' => 'getNumeroLogradouro',
        'numero_telefone' => 'getNumeroTelefone',
        'orgao_emissor' => 'getOrgaoEmissor',
        'sexo' => 'getSexo',
        'uf' => 'getUf'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $bairro 
      * @var string
      */
    protected $bairro;
    
    /**
      * $cep 
      * @var string
      */
    protected $cep;
    
    /**
      * $cidade 
      * @var string
      */
    protected $cidade;
    
    /**
      * $complemento_logradouro 
      * @var string
      */
    protected $complemento_logradouro;
    
    /**
      * $cpf 
      * @var string
      */
    protected $cpf;
    
    /**
      * $data_emissao_identidade 
      * @var string
      */
    protected $data_emissao_identidade;
    
    /**
      * $data_nascimento 
      * @var string
      */
    protected $data_nascimento;
    
    /**
      * $dddcelular 
      * @var string
      */
    protected $dddcelular;
    
    /**
      * $dddtelefone 
      * @var string
      */
    protected $dddtelefone;
    
    /**
      * $endereco 
      * @var string
      */
    protected $endereco;
    
    /**
      * $id_pessoa_fisica 
      * @var int
      */
    protected $id_pessoa_fisica;
    
    /**
      * $identidade 
      * @var string
      */
    protected $identidade;
    
    /**
      * $nome 
      * @var string
      */
    protected $nome;
    
    /**
      * $numero_celular 
      * @var string
      */
    protected $numero_celular;
    
    /**
      * $numero_logradouro 
      * @var int
      */
    protected $numero_logradouro;
    
    /**
      * $numero_telefone 
      * @var string
      */
    protected $numero_telefone;
    
    /**
      * $orgao_emissor 
      * @var string
      */
    protected $orgao_emissor;
    
    /**
      * $sexo 
      * @var string
      */
    protected $sexo;
    
    /**
      * $uf 
      * @var string
      */
    protected $uf;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->bairro = $data["bairro"];
            $this->cep = $data["cep"];
            $this->cidade = $data["cidade"];
            $this->complemento_logradouro = $data["complemento_logradouro"];
            $this->cpf = $data["cpf"];
            $this->data_emissao_identidade = $data["data_emissao_identidade"];
            $this->data_nascimento = $data["data_nascimento"];
            $this->dddcelular = $data["dddcelular"];
            $this->dddtelefone = $data["dddtelefone"];
            $this->endereco = $data["endereco"];
            $this->id_pessoa_fisica = $data["id_pessoa_fisica"];
            $this->identidade = $data["identidade"];
            $this->nome = $data["nome"];
            $this->numero_celular = $data["numero_celular"];
            $this->numero_logradouro = $data["numero_logradouro"];
            $this->numero_telefone = $data["numero_telefone"];
            $this->orgao_emissor = $data["orgao_emissor"];
            $this->sexo = $data["sexo"];
            $this->uf = $data["uf"];
        }
    }
    
    /**
     * Gets bairro
     * @return string
     */
    public function getBairro()
    {
        return $this->bairro;
    }
  
    /**
     * Sets bairro
     * @param string $bairro 
     * @return $this
     */
    public function setBairro($bairro)
    {
        
        $this->bairro = $bairro;
        return $this;
    }
    
    /**
     * Gets cep
     * @return string
     */
    public function getCep()
    {
        return $this->cep;
    }
  
    /**
     * Sets cep
     * @param string $cep 
     * @return $this
     */
    public function setCep($cep)
    {
        
        $this->cep = $cep;
        return $this;
    }
    
    /**
     * Gets cidade
     * @return string
     */
    public function getCidade()
    {
        return $this->cidade;
    }
  
    /**
     * Sets cidade
     * @param string $cidade 
     * @return $this
     */
    public function setCidade($cidade)
    {
        
        $this->cidade = $cidade;
        return $this;
    }
    
    /**
     * Gets complemento_logradouro
     * @return string
     */
    public function getComplementoLogradouro()
    {
        return $this->complemento_logradouro;
    }
  
    /**
     * Sets complemento_logradouro
     * @param string $complemento_logradouro 
     * @return $this
     */
    public function setComplementoLogradouro($complemento_logradouro)
    {
        
        $this->complemento_logradouro = $complemento_logradouro;
        return $this;
    }
    
    /**
     * Gets cpf
     * @return string
     */
    public function getCpf()
    {
        return $this->cpf;
    }
  
    /**
     * Sets cpf
     * @param string $cpf 
     * @return $this
     */
    public function setCpf($cpf)
    {
        
        $this->cpf = $cpf;
        return $this;
    }
    
    /**
     * Gets data_emissao_identidade
     * @return string
     */
    public function getDataEmissaoIdentidade()
    {
        return $this->data_emissao_identidade;
    }
  
    /**
     * Sets data_emissao_identidade
     * @param string $data_emissao_identidade 
     * @return $this
     */
    public function setDataEmissaoIdentidade($data_emissao_identidade)
    {
        
        $this->data_emissao_identidade = $data_emissao_identidade;
        return $this;
    }
    
    /**
     * Gets data_nascimento
     * @return string
     */
    public function getDataNascimento()
    {
        return $this->data_nascimento;
    }
  
    /**
     * Sets data_nascimento
     * @param string $data_nascimento 
     * @return $this
     */
    public function setDataNascimento($data_nascimento)
    {
        
        $this->data_nascimento = $data_nascimento;
        return $this;
    }
    
    /**
     * Gets dddcelular
     * @return string
     */
    public function getDddcelular()
    {
        return $this->dddcelular;
    }
  
    /**
     * Sets dddcelular
     * @param string $dddcelular 
     * @return $this
     */
    public function setDddcelular($dddcelular)
    {
        
        $this->dddcelular = $dddcelular;
        return $this;
    }
    
    /**
     * Gets dddtelefone
     * @return string
     */
    public function getDddtelefone()
    {
        return $this->dddtelefone;
    }
  
    /**
     * Sets dddtelefone
     * @param string $dddtelefone 
     * @return $this
     */
    public function setDddtelefone($dddtelefone)
    {
        
        $this->dddtelefone = $dddtelefone;
        return $this;
    }
    
    /**
     * Gets endereco
     * @return string
     */
    public function getEndereco()
    {
        return $this->endereco;
    }
  
    /**
     * Sets endereco
     * @param string $endereco 
     * @return $this
     */
    public function setEndereco($endereco)
    {
        
        $this->endereco = $endereco;
        return $this;
    }
    
    /**
     * Gets id_pessoa_fisica
     * @return int
     */
    public function getIdPessoaFisica()
    {
        return $this->id_pessoa_fisica;
    }
  
    /**
     * Sets id_pessoa_fisica
     * @param int $id_pessoa_fisica 
     * @return $this
     */
    public function setIdPessoaFisica($id_pessoa_fisica)
    {
        
        $this->id_pessoa_fisica = $id_pessoa_fisica;
        return $this;
    }
    
    /**
     * Gets identidade
     * @return string
     */
    public function getIdentidade()
    {
        return $this->identidade;
    }
  
    /**
     * Sets identidade
     * @param string $identidade 
     * @return $this
     */
    public function setIdentidade($identidade)
    {
        
        $this->identidade = $identidade;
        return $this;
    }
    
    /**
     * Gets nome
     * @return string
     */
    public function getNome()
    {
        return $this->nome;
    }
  
    /**
     * Sets nome
     * @param string $nome 
     * @return $this
     */
    public function setNome($nome)
    {
        
        $this->nome = $nome;
        return $this;
    }
    
    /**
     * Gets numero_celular
     * @return string
     */
    public function getNumeroCelular()
    {
        return $this->numero_celular;
    }
  
    /**
     * Sets numero_celular
     * @param string $numero_celular 
     * @return $this
     */
    public function setNumeroCelular($numero_celular)
    {
        
        $this->numero_celular = $numero_celular;
        return $this;
    }
    
    /**
     * Gets numero_logradouro
     * @return int
     */
    public function getNumeroLogradouro()
    {
        return $this->numero_logradouro;
    }
  
    /**
     * Sets numero_logradouro
     * @param int $numero_logradouro 
     * @return $this
     */
    public function setNumeroLogradouro($numero_logradouro)
    {
        
        $this->numero_logradouro = $numero_logradouro;
        return $this;
    }
    
    /**
     * Gets numero_telefone
     * @return string
     */
    public function getNumeroTelefone()
    {
        return $this->numero_telefone;
    }
  
    /**
     * Sets numero_telefone
     * @param string $numero_telefone 
     * @return $this
     */
    public function setNumeroTelefone($numero_telefone)
    {
        
        $this->numero_telefone = $numero_telefone;
        return $this;
    }
    
    /**
     * Gets orgao_emissor
     * @return string
     */
    public function getOrgaoEmissor()
    {
        return $this->orgao_emissor;
    }
  
    /**
     * Sets orgao_emissor
     * @param string $orgao_emissor 
     * @return $this
     */
    public function setOrgaoEmissor($orgao_emissor)
    {
        
        $this->orgao_emissor = $orgao_emissor;
        return $this;
    }
    
    /**
     * Gets sexo
     * @return string
     */
    public function getSexo()
    {
        return $this->sexo;
    }
  
    /**
     * Sets sexo
     * @param string $sexo 
     * @return $this
     */
    public function setSexo($sexo)
    {
        
        $this->sexo = $sexo;
        return $this;
    }
    
    /**
     * Gets uf
     * @return string
     */
    public function getUf()
    {
        return $this->uf;
    }
  
    /**
     * Sets uf
     * @param string $uf 
     * @return $this
     */
    public function setUf($uf)
    {
        
        $this->uf = $uf;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v1_1.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v1_1.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
