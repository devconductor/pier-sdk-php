<?php
/**
 * PortadorResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * PortadorResponse Class Doc Comment
 *
 * @category    Class
 * @description {{{portador_response_description}}}
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PortadorResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id_conta' => 'int',
        'id_produto' => 'int',
        'id_pessoa' => 'int',
        'id_parentesco' => 'int',
        'tipo_portador' => 'string',
        'nome_impresso' => 'string',
        'id_tipo_cartao' => 'int',
        'flag_ativo' => 'int',
        'data_cadastro_portador' => 'string',
        'data_cancelamento_portador' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id_conta' => 'idConta',
        'id_produto' => 'idProduto',
        'id_pessoa' => 'idPessoa',
        'id_parentesco' => 'idParentesco',
        'tipo_portador' => 'tipoPortador',
        'nome_impresso' => 'nomeImpresso',
        'id_tipo_cartao' => 'idTipoCartao',
        'flag_ativo' => 'flagAtivo',
        'data_cadastro_portador' => 'dataCadastroPortador',
        'data_cancelamento_portador' => 'dataCancelamentoPortador'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id_conta' => 'setIdConta',
        'id_produto' => 'setIdProduto',
        'id_pessoa' => 'setIdPessoa',
        'id_parentesco' => 'setIdParentesco',
        'tipo_portador' => 'setTipoPortador',
        'nome_impresso' => 'setNomeImpresso',
        'id_tipo_cartao' => 'setIdTipoCartao',
        'flag_ativo' => 'setFlagAtivo',
        'data_cadastro_portador' => 'setDataCadastroPortador',
        'data_cancelamento_portador' => 'setDataCancelamentoPortador'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id_conta' => 'getIdConta',
        'id_produto' => 'getIdProduto',
        'id_pessoa' => 'getIdPessoa',
        'id_parentesco' => 'getIdParentesco',
        'tipo_portador' => 'getTipoPortador',
        'nome_impresso' => 'getNomeImpresso',
        'id_tipo_cartao' => 'getIdTipoCartao',
        'flag_ativo' => 'getFlagAtivo',
        'data_cadastro_portador' => 'getDataCadastroPortador',
        'data_cancelamento_portador' => 'getDataCancelamentoPortador'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id_conta {{{portador_response_id_conta_value}}}
      * @var int
      */
    protected $id_conta;
    
    /**
      * $id_produto {{{portador_response_id_produto_value}}}
      * @var int
      */
    protected $id_produto;
    
    /**
      * $id_pessoa {{{portador_response_id_pessoa_value}}}
      * @var int
      */
    protected $id_pessoa;
    
    /**
      * $id_parentesco {{{portador_response_id_parentesco_value}}}
      * @var int
      */
    protected $id_parentesco;
    
    /**
      * $tipo_portador {{{portador_response_tipo_portador_value}}}
      * @var string
      */
    protected $tipo_portador;
    
    /**
      * $nome_impresso {{{portador_response_nome_impresso_value}}}
      * @var string
      */
    protected $nome_impresso;
    
    /**
      * $id_tipo_cartao {{{portador_response_id_tipo_cartao_value}}}
      * @var int
      */
    protected $id_tipo_cartao;
    
    /**
      * $flag_ativo {{{portador_response_flag_ativo_value}}}
      * @var int
      */
    protected $flag_ativo;
    
    /**
      * $data_cadastro_portador {{{portador_response_data_cadastro_portador_value}}}
      * @var string
      */
    protected $data_cadastro_portador;
    
    /**
      * $data_cancelamento_portador {{{portador_response_data_cancelamento_portador_value}}}
      * @var string
      */
    protected $data_cancelamento_portador;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id_conta = $data["id_conta"];
            $this->id_produto = $data["id_produto"];
            $this->id_pessoa = $data["id_pessoa"];
            $this->id_parentesco = $data["id_parentesco"];
            $this->tipo_portador = $data["tipo_portador"];
            $this->nome_impresso = $data["nome_impresso"];
            $this->id_tipo_cartao = $data["id_tipo_cartao"];
            $this->flag_ativo = $data["flag_ativo"];
            $this->data_cadastro_portador = $data["data_cadastro_portador"];
            $this->data_cancelamento_portador = $data["data_cancelamento_portador"];
        }
    }
    
    /**
     * Gets id_conta
     * @return int
     */
    public function getIdConta()
    {
        return $this->id_conta;
    }
  
    /**
     * Sets id_conta
     * @param int $id_conta {{{portador_response_id_conta_value}}}
     * @return $this
     */
    public function setIdConta($id_conta)
    {
        
        $this->id_conta = $id_conta;
        return $this;
    }
    
    /**
     * Gets id_produto
     * @return int
     */
    public function getIdProduto()
    {
        return $this->id_produto;
    }
  
    /**
     * Sets id_produto
     * @param int $id_produto {{{portador_response_id_produto_value}}}
     * @return $this
     */
    public function setIdProduto($id_produto)
    {
        
        $this->id_produto = $id_produto;
        return $this;
    }
    
    /**
     * Gets id_pessoa
     * @return int
     */
    public function getIdPessoa()
    {
        return $this->id_pessoa;
    }
  
    /**
     * Sets id_pessoa
     * @param int $id_pessoa {{{portador_response_id_pessoa_value}}}
     * @return $this
     */
    public function setIdPessoa($id_pessoa)
    {
        
        $this->id_pessoa = $id_pessoa;
        return $this;
    }
    
    /**
     * Gets id_parentesco
     * @return int
     */
    public function getIdParentesco()
    {
        return $this->id_parentesco;
    }
  
    /**
     * Sets id_parentesco
     * @param int $id_parentesco {{{portador_response_id_parentesco_value}}}
     * @return $this
     */
    public function setIdParentesco($id_parentesco)
    {
        
        $this->id_parentesco = $id_parentesco;
        return $this;
    }
    
    /**
     * Gets tipo_portador
     * @return string
     */
    public function getTipoPortador()
    {
        return $this->tipo_portador;
    }
  
    /**
     * Sets tipo_portador
     * @param string $tipo_portador {{{portador_response_tipo_portador_value}}}
     * @return $this
     */
    public function setTipoPortador($tipo_portador)
    {
        
        $this->tipo_portador = $tipo_portador;
        return $this;
    }
    
    /**
     * Gets nome_impresso
     * @return string
     */
    public function getNomeImpresso()
    {
        return $this->nome_impresso;
    }
  
    /**
     * Sets nome_impresso
     * @param string $nome_impresso {{{portador_response_nome_impresso_value}}}
     * @return $this
     */
    public function setNomeImpresso($nome_impresso)
    {
        
        $this->nome_impresso = $nome_impresso;
        return $this;
    }
    
    /**
     * Gets id_tipo_cartao
     * @return int
     */
    public function getIdTipoCartao()
    {
        return $this->id_tipo_cartao;
    }
  
    /**
     * Sets id_tipo_cartao
     * @param int $id_tipo_cartao {{{portador_response_id_tipo_cartao_value}}}
     * @return $this
     */
    public function setIdTipoCartao($id_tipo_cartao)
    {
        
        $this->id_tipo_cartao = $id_tipo_cartao;
        return $this;
    }
    
    /**
     * Gets flag_ativo
     * @return int
     */
    public function getFlagAtivo()
    {
        return $this->flag_ativo;
    }
  
    /**
     * Sets flag_ativo
     * @param int $flag_ativo {{{portador_response_flag_ativo_value}}}
     * @return $this
     */
    public function setFlagAtivo($flag_ativo)
    {
        
        $this->flag_ativo = $flag_ativo;
        return $this;
    }
    
    /**
     * Gets data_cadastro_portador
     * @return string
     */
    public function getDataCadastroPortador()
    {
        return $this->data_cadastro_portador;
    }
  
    /**
     * Sets data_cadastro_portador
     * @param string $data_cadastro_portador {{{portador_response_data_cadastro_portador_value}}}
     * @return $this
     */
    public function setDataCadastroPortador($data_cadastro_portador)
    {
        
        $this->data_cadastro_portador = $data_cadastro_portador;
        return $this;
    }
    
    /**
     * Gets data_cancelamento_portador
     * @return string
     */
    public function getDataCancelamentoPortador()
    {
        return $this->data_cancelamento_portador;
    }
  
    /**
     * Sets data_cancelamento_portador
     * @param string $data_cancelamento_portador {{{portador_response_data_cancelamento_portador_value}}}
     * @return $this
     */
    public function setDataCancelamentoPortador($data_cancelamento_portador)
    {
        
        $this->data_cancelamento_portador = $data_cancelamento_portador;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
