<?php
/**
 * ArquivoResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * ArquivoResponse Class Doc Comment
 *
 * @category    Class
 * @description Objeto Response do arquivo.
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ArquivoResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'id_tipo_arquivo' => 'int',
        'nome_tipo_arquivo' => 'string',
        'arquivo' => 'string',
        'id_status_arquivo' => 'int',
        'nome_status_arquivo' => 'string',
        'nome' => 'string',
        'extensao' => 'string',
        'data_inclusao' => 'string',
        'data_alteracao' => 'string',
        'detalhes' => '\br.com.conductor.pier.api.v2.model\ArquivoParametroResponse[]'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'id_tipo_arquivo' => 'idTipoArquivo',
        'nome_tipo_arquivo' => 'nomeTipoArquivo',
        'arquivo' => 'arquivo',
        'id_status_arquivo' => 'idStatusArquivo',
        'nome_status_arquivo' => 'nomeStatusArquivo',
        'nome' => 'nome',
        'extensao' => 'extensao',
        'data_inclusao' => 'dataInclusao',
        'data_alteracao' => 'dataAlteracao',
        'detalhes' => 'detalhes'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'id_tipo_arquivo' => 'setIdTipoArquivo',
        'nome_tipo_arquivo' => 'setNomeTipoArquivo',
        'arquivo' => 'setArquivo',
        'id_status_arquivo' => 'setIdStatusArquivo',
        'nome_status_arquivo' => 'setNomeStatusArquivo',
        'nome' => 'setNome',
        'extensao' => 'setExtensao',
        'data_inclusao' => 'setDataInclusao',
        'data_alteracao' => 'setDataAlteracao',
        'detalhes' => 'setDetalhes'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'id_tipo_arquivo' => 'getIdTipoArquivo',
        'nome_tipo_arquivo' => 'getNomeTipoArquivo',
        'arquivo' => 'getArquivo',
        'id_status_arquivo' => 'getIdStatusArquivo',
        'nome_status_arquivo' => 'getNomeStatusArquivo',
        'nome' => 'getNome',
        'extensao' => 'getExtensao',
        'data_inclusao' => 'getDataInclusao',
        'data_alteracao' => 'getDataAlteracao',
        'detalhes' => 'getDetalhes'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do arquivo
      * @var int
      */
    protected $id;
    
    /**
      * $id_tipo_arquivo Tipo do arquivo
      * @var int
      */
    protected $id_tipo_arquivo;
    
    /**
      * $nome_tipo_arquivo Descri\u00C3\u00A7\u00C3\u00A3o do tipo do arquivo
      * @var string
      */
    protected $nome_tipo_arquivo;
    
    /**
      * $arquivo Conte\u00C3\u00BAdo do arquivo convertido em Base 64
      * @var string
      */
    protected $arquivo;
    
    /**
      * $id_status_arquivo C\u00C3\u00B3digo de status do arquivo
      * @var int
      */
    protected $id_status_arquivo;
    
    /**
      * $nome_status_arquivo Desci\u00C3\u00A7\u00C3\u00A3o do status do arquivo
      * @var string
      */
    protected $nome_status_arquivo;
    
    /**
      * $nome Nome do arquivo
      * @var string
      */
    protected $nome;
    
    /**
      * $extensao Formato/extens\u00C3\u00A3o do arquivo
      * @var string
      */
    protected $extensao;
    
    /**
      * $data_inclusao Data de inclus\u00C3\u00A3o do arquivo.
      * @var string
      */
    protected $data_inclusao;
    
    /**
      * $data_alteracao Data da \u00C3\u00BAltima altera\u00C3\u00A7\u00C3\u00A3o do aquivo.
      * @var string
      */
    protected $data_alteracao;
    
    /**
      * $detalhes Detalhes contendo informa\u00C3\u00A7\u00C3\u00B5es adicionais, relacionadas ao arquivo.
      * @var \br.com.conductor.pier.api.v2.model\ArquivoParametroResponse[]
      */
    protected $detalhes;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->id_tipo_arquivo = $data["id_tipo_arquivo"];
            $this->nome_tipo_arquivo = $data["nome_tipo_arquivo"];
            $this->arquivo = $data["arquivo"];
            $this->id_status_arquivo = $data["id_status_arquivo"];
            $this->nome_status_arquivo = $data["nome_status_arquivo"];
            $this->nome = $data["nome"];
            $this->extensao = $data["extensao"];
            $this->data_inclusao = $data["data_inclusao"];
            $this->data_alteracao = $data["data_alteracao"];
            $this->detalhes = $data["detalhes"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do arquivo
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets id_tipo_arquivo
     * @return int
     */
    public function getIdTipoArquivo()
    {
        return $this->id_tipo_arquivo;
    }
  
    /**
     * Sets id_tipo_arquivo
     * @param int $id_tipo_arquivo Tipo do arquivo
     * @return $this
     */
    public function setIdTipoArquivo($id_tipo_arquivo)
    {
        
        $this->id_tipo_arquivo = $id_tipo_arquivo;
        return $this;
    }
    
    /**
     * Gets nome_tipo_arquivo
     * @return string
     */
    public function getNomeTipoArquivo()
    {
        return $this->nome_tipo_arquivo;
    }
  
    /**
     * Sets nome_tipo_arquivo
     * @param string $nome_tipo_arquivo Descri\u00C3\u00A7\u00C3\u00A3o do tipo do arquivo
     * @return $this
     */
    public function setNomeTipoArquivo($nome_tipo_arquivo)
    {
        
        $this->nome_tipo_arquivo = $nome_tipo_arquivo;
        return $this;
    }
    
    /**
     * Gets arquivo
     * @return string
     */
    public function getArquivo()
    {
        return $this->arquivo;
    }
  
    /**
     * Sets arquivo
     * @param string $arquivo Conte\u00C3\u00BAdo do arquivo convertido em Base 64
     * @return $this
     */
    public function setArquivo($arquivo)
    {
        
        $this->arquivo = $arquivo;
        return $this;
    }
    
    /**
     * Gets id_status_arquivo
     * @return int
     */
    public function getIdStatusArquivo()
    {
        return $this->id_status_arquivo;
    }
  
    /**
     * Sets id_status_arquivo
     * @param int $id_status_arquivo C\u00C3\u00B3digo de status do arquivo
     * @return $this
     */
    public function setIdStatusArquivo($id_status_arquivo)
    {
        
        $this->id_status_arquivo = $id_status_arquivo;
        return $this;
    }
    
    /**
     * Gets nome_status_arquivo
     * @return string
     */
    public function getNomeStatusArquivo()
    {
        return $this->nome_status_arquivo;
    }
  
    /**
     * Sets nome_status_arquivo
     * @param string $nome_status_arquivo Desci\u00C3\u00A7\u00C3\u00A3o do status do arquivo
     * @return $this
     */
    public function setNomeStatusArquivo($nome_status_arquivo)
    {
        
        $this->nome_status_arquivo = $nome_status_arquivo;
        return $this;
    }
    
    /**
     * Gets nome
     * @return string
     */
    public function getNome()
    {
        return $this->nome;
    }
  
    /**
     * Sets nome
     * @param string $nome Nome do arquivo
     * @return $this
     */
    public function setNome($nome)
    {
        
        $this->nome = $nome;
        return $this;
    }
    
    /**
     * Gets extensao
     * @return string
     */
    public function getExtensao()
    {
        return $this->extensao;
    }
  
    /**
     * Sets extensao
     * @param string $extensao Formato/extens\u00C3\u00A3o do arquivo
     * @return $this
     */
    public function setExtensao($extensao)
    {
        
        $this->extensao = $extensao;
        return $this;
    }
    
    /**
     * Gets data_inclusao
     * @return string
     */
    public function getDataInclusao()
    {
        return $this->data_inclusao;
    }
  
    /**
     * Sets data_inclusao
     * @param string $data_inclusao Data de inclus\u00C3\u00A3o do arquivo.
     * @return $this
     */
    public function setDataInclusao($data_inclusao)
    {
        
        $this->data_inclusao = $data_inclusao;
        return $this;
    }
    
    /**
     * Gets data_alteracao
     * @return string
     */
    public function getDataAlteracao()
    {
        return $this->data_alteracao;
    }
  
    /**
     * Sets data_alteracao
     * @param string $data_alteracao Data da \u00C3\u00BAltima altera\u00C3\u00A7\u00C3\u00A3o do aquivo.
     * @return $this
     */
    public function setDataAlteracao($data_alteracao)
    {
        
        $this->data_alteracao = $data_alteracao;
        return $this;
    }
    
    /**
     * Gets detalhes
     * @return \br.com.conductor.pier.api.v2.model\ArquivoParametroResponse[]
     */
    public function getDetalhes()
    {
        return $this->detalhes;
    }
  
    /**
     * Sets detalhes
     * @param \br.com.conductor.pier.api.v2.model\ArquivoParametroResponse[] $detalhes Detalhes contendo informa\u00C3\u00A7\u00C3\u00B5es adicionais, relacionadas ao arquivo.
     * @return $this
     */
    public function setDetalhes($detalhes)
    {
        
        $this->detalhes = $detalhes;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
