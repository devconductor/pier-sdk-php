<?php
/**
 * TemplateNotificacaoResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * TemplateNotificacaoResponse Class Doc Comment
 *
 * @category    Class
 * @description Objeto de Notifica\u00C3\u00A7\u00C3\u00A3o EMAIL
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class TemplateNotificacaoResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'id_configuracao_email' => 'int',
        'tipo_layout' => 'string',
        'tipo_notificacao' => 'string',
        'assunto' => 'string',
        'conteudo' => 'string',
        'data_inclusao' => 'string',
        'data_alteracao' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'id_configuracao_email' => 'idConfiguracaoEmail',
        'tipo_layout' => 'tipoLayout',
        'tipo_notificacao' => 'tipoNotificacao',
        'assunto' => 'assunto',
        'conteudo' => 'conteudo',
        'data_inclusao' => 'dataInclusao',
        'data_alteracao' => 'dataAlteracao'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'id_configuracao_email' => 'setIdConfiguracaoEmail',
        'tipo_layout' => 'setTipoLayout',
        'tipo_notificacao' => 'setTipoNotificacao',
        'assunto' => 'setAssunto',
        'conteudo' => 'setConteudo',
        'data_inclusao' => 'setDataInclusao',
        'data_alteracao' => 'setDataAlteracao'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'id_configuracao_email' => 'getIdConfiguracaoEmail',
        'tipo_layout' => 'getTipoLayout',
        'tipo_notificacao' => 'getTipoNotificacao',
        'assunto' => 'getAssunto',
        'conteudo' => 'getConteudo',
        'data_inclusao' => 'getDataInclusao',
        'data_alteracao' => 'getDataAlteracao'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id C\u00C3\u00B3digo Identificador.
      * @var int
      */
    protected $id;
    
    /**
      * $id_configuracao_email C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da configra\u00C3\u00A7\u00C3\u00A3o de e-mail.
      * @var int
      */
    protected $id_configuracao_email;
    
    /**
      * $tipo_layout Tipo do layout de e-mail.
      * @var string
      */
    protected $tipo_layout;
    
    /**
      * $tipo_notificacao Tipo da notifica\u00C3\u00A7\u00C3\u00A3o.
      * @var string
      */
    protected $tipo_notificacao;
    
    /**
      * $assunto Assunto do e-mail.
      * @var string
      */
    protected $assunto;
    
    /**
      * $conteudo Conteudo do e-mail.
      * @var string
      */
    protected $conteudo;
    
    /**
      * $data_inclusao Data da inclus\u00C3\u00A3o.
      * @var string
      */
    protected $data_inclusao;
    
    /**
      * $data_alteracao Data altera\u00C3\u00A7\u00C3\u00A3o.
      * @var string
      */
    protected $data_alteracao;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->id_configuracao_email = $data["id_configuracao_email"];
            $this->tipo_layout = $data["tipo_layout"];
            $this->tipo_notificacao = $data["tipo_notificacao"];
            $this->assunto = $data["assunto"];
            $this->conteudo = $data["conteudo"];
            $this->data_inclusao = $data["data_inclusao"];
            $this->data_alteracao = $data["data_alteracao"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id C\u00C3\u00B3digo Identificador.
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets id_configuracao_email
     * @return int
     */
    public function getIdConfiguracaoEmail()
    {
        return $this->id_configuracao_email;
    }
  
    /**
     * Sets id_configuracao_email
     * @param int $id_configuracao_email C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da configra\u00C3\u00A7\u00C3\u00A3o de e-mail.
     * @return $this
     */
    public function setIdConfiguracaoEmail($id_configuracao_email)
    {
        
        $this->id_configuracao_email = $id_configuracao_email;
        return $this;
    }
    
    /**
     * Gets tipo_layout
     * @return string
     */
    public function getTipoLayout()
    {
        return $this->tipo_layout;
    }
  
    /**
     * Sets tipo_layout
     * @param string $tipo_layout Tipo do layout de e-mail.
     * @return $this
     */
    public function setTipoLayout($tipo_layout)
    {
        $allowed_values = array("RECUPERAR_SENHA", "FATURA_POR_EMAIL", "VALIDAR_DISPOSITIVO");
        if (!in_array($tipo_layout, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'tipo_layout', must be one of 'RECUPERAR_SENHA', 'FATURA_POR_EMAIL', 'VALIDAR_DISPOSITIVO'");
        }
        $this->tipo_layout = $tipo_layout;
        return $this;
    }
    
    /**
     * Gets tipo_notificacao
     * @return string
     */
    public function getTipoNotificacao()
    {
        return $this->tipo_notificacao;
    }
  
    /**
     * Sets tipo_notificacao
     * @param string $tipo_notificacao Tipo da notifica\u00C3\u00A7\u00C3\u00A3o.
     * @return $this
     */
    public function setTipoNotificacao($tipo_notificacao)
    {
        $allowed_values = array("SMS", "PUSH_APNS", "PUSH_FCM", "PUSH_GCM", "EMAIL");
        if (!in_array($tipo_notificacao, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'tipo_notificacao', must be one of 'SMS', 'PUSH_APNS', 'PUSH_FCM', 'PUSH_GCM', 'EMAIL'");
        }
        $this->tipo_notificacao = $tipo_notificacao;
        return $this;
    }
    
    /**
     * Gets assunto
     * @return string
     */
    public function getAssunto()
    {
        return $this->assunto;
    }
  
    /**
     * Sets assunto
     * @param string $assunto Assunto do e-mail.
     * @return $this
     */
    public function setAssunto($assunto)
    {
        
        $this->assunto = $assunto;
        return $this;
    }
    
    /**
     * Gets conteudo
     * @return string
     */
    public function getConteudo()
    {
        return $this->conteudo;
    }
  
    /**
     * Sets conteudo
     * @param string $conteudo Conteudo do e-mail.
     * @return $this
     */
    public function setConteudo($conteudo)
    {
        
        $this->conteudo = $conteudo;
        return $this;
    }
    
    /**
     * Gets data_inclusao
     * @return string
     */
    public function getDataInclusao()
    {
        return $this->data_inclusao;
    }
  
    /**
     * Sets data_inclusao
     * @param string $data_inclusao Data da inclus\u00C3\u00A3o.
     * @return $this
     */
    public function setDataInclusao($data_inclusao)
    {
        
        $this->data_inclusao = $data_inclusao;
        return $this;
    }
    
    /**
     * Gets data_alteracao
     * @return string
     */
    public function getDataAlteracao()
    {
        return $this->data_alteracao;
    }
  
    /**
     * Sets data_alteracao
     * @param string $data_alteracao Data altera\u00C3\u00A7\u00C3\u00A3o.
     * @return $this
     */
    public function setDataAlteracao($data_alteracao)
    {
        
        $this->data_alteracao = $data_alteracao;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
