<?php
/**
 * AtendimentoCliente
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * AtendimentoCliente Class Doc Comment
 *
 * @category    Class
 * @description Objeto AtendimentoCliente
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class AtendimentoCliente implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id_atendimento' => 'int',
        'id_conta' => 'int',
        'id_tipo_atendimento' => 'int',
        'descricao_tipo_atendimento' => 'string',
        'conteudo_atendimento' => 'string',
        'detalhes_atendimento' => 'string',
        'nome_atendente' => 'string',
        'nome_sistema' => 'string',
        'data_hora_inicio_atendimento' => 'string',
        'data_hora_fim_atendimento' => 'string',
        'data_atendimento' => 'string',
        'data_agendamento' => 'string',
        'data_processamento' => 'string',
        'flag_processamento' => 'int'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id_atendimento' => 'idAtendimento',
        'id_conta' => 'idConta',
        'id_tipo_atendimento' => 'idTipoAtendimento',
        'descricao_tipo_atendimento' => 'descricaoTipoAtendimento',
        'conteudo_atendimento' => 'conteudoAtendimento',
        'detalhes_atendimento' => 'detalhesAtendimento',
        'nome_atendente' => 'nomeAtendente',
        'nome_sistema' => 'nomeSistema',
        'data_hora_inicio_atendimento' => 'dataHoraInicioAtendimento',
        'data_hora_fim_atendimento' => 'dataHoraFimAtendimento',
        'data_atendimento' => 'dataAtendimento',
        'data_agendamento' => 'dataAgendamento',
        'data_processamento' => 'dataProcessamento',
        'flag_processamento' => 'flagProcessamento'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id_atendimento' => 'setIdAtendimento',
        'id_conta' => 'setIdConta',
        'id_tipo_atendimento' => 'setIdTipoAtendimento',
        'descricao_tipo_atendimento' => 'setDescricaoTipoAtendimento',
        'conteudo_atendimento' => 'setConteudoAtendimento',
        'detalhes_atendimento' => 'setDetalhesAtendimento',
        'nome_atendente' => 'setNomeAtendente',
        'nome_sistema' => 'setNomeSistema',
        'data_hora_inicio_atendimento' => 'setDataHoraInicioAtendimento',
        'data_hora_fim_atendimento' => 'setDataHoraFimAtendimento',
        'data_atendimento' => 'setDataAtendimento',
        'data_agendamento' => 'setDataAgendamento',
        'data_processamento' => 'setDataProcessamento',
        'flag_processamento' => 'setFlagProcessamento'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id_atendimento' => 'getIdAtendimento',
        'id_conta' => 'getIdConta',
        'id_tipo_atendimento' => 'getIdTipoAtendimento',
        'descricao_tipo_atendimento' => 'getDescricaoTipoAtendimento',
        'conteudo_atendimento' => 'getConteudoAtendimento',
        'detalhes_atendimento' => 'getDetalhesAtendimento',
        'nome_atendente' => 'getNomeAtendente',
        'nome_sistema' => 'getNomeSistema',
        'data_hora_inicio_atendimento' => 'getDataHoraInicioAtendimento',
        'data_hora_fim_atendimento' => 'getDataHoraFimAtendimento',
        'data_atendimento' => 'getDataAtendimento',
        'data_agendamento' => 'getDataAgendamento',
        'data_processamento' => 'getDataProcessamento',
        'flag_processamento' => 'getFlagProcessamento'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id_atendimento C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Atendimento (id)
      * @var int
      */
    protected $id_atendimento;
    
    /**
      * $id_conta C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Conta a qual o Atendimento est\u00C3\u00A1 associado
      * @var int
      */
    protected $id_conta;
    
    /**
      * $id_tipo_atendimento C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Tipo de Atendimento (id)
      * @var int
      */
    protected $id_tipo_atendimento;
    
    /**
      * $descricao_tipo_atendimento Apresenta a descri\u00C3\u00A7\u00C3\u00A3o do Tipo de Atendimento
      * @var string
      */
    protected $descricao_tipo_atendimento;
    
    /**
      * $conteudo_atendimento Apresenta as informa\u00C3\u00A7\u00C3\u00B5es que foram utilizadas para consultar, cadastrar ou alterar informa\u00C3\u00A7\u00C3\u00B5es relacionadas ao Atendimento.
      * @var string
      */
    protected $conteudo_atendimento;
    
    /**
      * $detalhes_atendimento Apresenta os detalhes lan\u00C3\u00A7ados pelo sistema ou pelo Atendente durante relacionados ao Atendimento.
      * @var string
      */
    protected $detalhes_atendimento;
    
    /**
      * $nome_atendente Apresenta o nome do Atendente que registrou o Atendimento.
      * @var string
      */
    protected $nome_atendente;
    
    /**
      * $nome_sistema Apresenta o nome do Sistema, Servidor, M\u00C3\u00B3dulo ou M\u00C3\u00A9todo REST que originou o registro do Atendimento.
      * @var string
      */
    protected $nome_sistema;
    
    /**
      * $data_hora_inicio_atendimento Apresenta a data e hora em que o Atendimento foi iniciado. Quando utilizado, serve para medir a performance dos Atendimentos.
      * @var string
      */
    protected $data_hora_inicio_atendimento;
    
    /**
      * $data_hora_fim_atendimento Apresenta a data e hora em que o Atendimento foi iniciado. Quando utilizado, serve para medir a performance dos Atendimentos.
      * @var string
      */
    protected $data_hora_fim_atendimento;
    
    /**
      * $data_atendimento Apresenta a data e hora em que o Atendimento foi realizado.
      * @var string
      */
    protected $data_atendimento;
    
    /**
      * $data_agendamento Quando utilizado, de acordo com o Tipo de Atendimento, apresenta a data e hora para processamento ou a data para retorno do Atendimento.
      * @var string
      */
    protected $data_agendamento;
    
    /**
      * $data_processamento Quando utilizado, apresenta a data e hora em que a solicita\u00C3\u00A7\u00C3\u00A3o registrada no Atendimento fora processada.
      * @var string
      */
    protected $data_processamento;
    
    /**
      * $flag_processamento Quando aplic\u00C3\u00A1vel, de acordo com o Indica se o Processamento da solicita\u00C3\u00A7\u00C3\u00A3o fora realizado.
      * @var int
      */
    protected $flag_processamento;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id_atendimento = $data["id_atendimento"];
            $this->id_conta = $data["id_conta"];
            $this->id_tipo_atendimento = $data["id_tipo_atendimento"];
            $this->descricao_tipo_atendimento = $data["descricao_tipo_atendimento"];
            $this->conteudo_atendimento = $data["conteudo_atendimento"];
            $this->detalhes_atendimento = $data["detalhes_atendimento"];
            $this->nome_atendente = $data["nome_atendente"];
            $this->nome_sistema = $data["nome_sistema"];
            $this->data_hora_inicio_atendimento = $data["data_hora_inicio_atendimento"];
            $this->data_hora_fim_atendimento = $data["data_hora_fim_atendimento"];
            $this->data_atendimento = $data["data_atendimento"];
            $this->data_agendamento = $data["data_agendamento"];
            $this->data_processamento = $data["data_processamento"];
            $this->flag_processamento = $data["flag_processamento"];
        }
    }
    
    /**
     * Gets id_atendimento
     * @return int
     */
    public function getIdAtendimento()
    {
        return $this->id_atendimento;
    }
  
    /**
     * Sets id_atendimento
     * @param int $id_atendimento C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Atendimento (id)
     * @return $this
     */
    public function setIdAtendimento($id_atendimento)
    {
        
        $this->id_atendimento = $id_atendimento;
        return $this;
    }
    
    /**
     * Gets id_conta
     * @return int
     */
    public function getIdConta()
    {
        return $this->id_conta;
    }
  
    /**
     * Sets id_conta
     * @param int $id_conta C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Conta a qual o Atendimento est\u00C3\u00A1 associado
     * @return $this
     */
    public function setIdConta($id_conta)
    {
        
        $this->id_conta = $id_conta;
        return $this;
    }
    
    /**
     * Gets id_tipo_atendimento
     * @return int
     */
    public function getIdTipoAtendimento()
    {
        return $this->id_tipo_atendimento;
    }
  
    /**
     * Sets id_tipo_atendimento
     * @param int $id_tipo_atendimento C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Tipo de Atendimento (id)
     * @return $this
     */
    public function setIdTipoAtendimento($id_tipo_atendimento)
    {
        
        $this->id_tipo_atendimento = $id_tipo_atendimento;
        return $this;
    }
    
    /**
     * Gets descricao_tipo_atendimento
     * @return string
     */
    public function getDescricaoTipoAtendimento()
    {
        return $this->descricao_tipo_atendimento;
    }
  
    /**
     * Sets descricao_tipo_atendimento
     * @param string $descricao_tipo_atendimento Apresenta a descri\u00C3\u00A7\u00C3\u00A3o do Tipo de Atendimento
     * @return $this
     */
    public function setDescricaoTipoAtendimento($descricao_tipo_atendimento)
    {
        
        $this->descricao_tipo_atendimento = $descricao_tipo_atendimento;
        return $this;
    }
    
    /**
     * Gets conteudo_atendimento
     * @return string
     */
    public function getConteudoAtendimento()
    {
        return $this->conteudo_atendimento;
    }
  
    /**
     * Sets conteudo_atendimento
     * @param string $conteudo_atendimento Apresenta as informa\u00C3\u00A7\u00C3\u00B5es que foram utilizadas para consultar, cadastrar ou alterar informa\u00C3\u00A7\u00C3\u00B5es relacionadas ao Atendimento.
     * @return $this
     */
    public function setConteudoAtendimento($conteudo_atendimento)
    {
        
        $this->conteudo_atendimento = $conteudo_atendimento;
        return $this;
    }
    
    /**
     * Gets detalhes_atendimento
     * @return string
     */
    public function getDetalhesAtendimento()
    {
        return $this->detalhes_atendimento;
    }
  
    /**
     * Sets detalhes_atendimento
     * @param string $detalhes_atendimento Apresenta os detalhes lan\u00C3\u00A7ados pelo sistema ou pelo Atendente durante relacionados ao Atendimento.
     * @return $this
     */
    public function setDetalhesAtendimento($detalhes_atendimento)
    {
        
        $this->detalhes_atendimento = $detalhes_atendimento;
        return $this;
    }
    
    /**
     * Gets nome_atendente
     * @return string
     */
    public function getNomeAtendente()
    {
        return $this->nome_atendente;
    }
  
    /**
     * Sets nome_atendente
     * @param string $nome_atendente Apresenta o nome do Atendente que registrou o Atendimento.
     * @return $this
     */
    public function setNomeAtendente($nome_atendente)
    {
        
        $this->nome_atendente = $nome_atendente;
        return $this;
    }
    
    /**
     * Gets nome_sistema
     * @return string
     */
    public function getNomeSistema()
    {
        return $this->nome_sistema;
    }
  
    /**
     * Sets nome_sistema
     * @param string $nome_sistema Apresenta o nome do Sistema, Servidor, M\u00C3\u00B3dulo ou M\u00C3\u00A9todo REST que originou o registro do Atendimento.
     * @return $this
     */
    public function setNomeSistema($nome_sistema)
    {
        
        $this->nome_sistema = $nome_sistema;
        return $this;
    }
    
    /**
     * Gets data_hora_inicio_atendimento
     * @return string
     */
    public function getDataHoraInicioAtendimento()
    {
        return $this->data_hora_inicio_atendimento;
    }
  
    /**
     * Sets data_hora_inicio_atendimento
     * @param string $data_hora_inicio_atendimento Apresenta a data e hora em que o Atendimento foi iniciado. Quando utilizado, serve para medir a performance dos Atendimentos.
     * @return $this
     */
    public function setDataHoraInicioAtendimento($data_hora_inicio_atendimento)
    {
        
        $this->data_hora_inicio_atendimento = $data_hora_inicio_atendimento;
        return $this;
    }
    
    /**
     * Gets data_hora_fim_atendimento
     * @return string
     */
    public function getDataHoraFimAtendimento()
    {
        return $this->data_hora_fim_atendimento;
    }
  
    /**
     * Sets data_hora_fim_atendimento
     * @param string $data_hora_fim_atendimento Apresenta a data e hora em que o Atendimento foi iniciado. Quando utilizado, serve para medir a performance dos Atendimentos.
     * @return $this
     */
    public function setDataHoraFimAtendimento($data_hora_fim_atendimento)
    {
        
        $this->data_hora_fim_atendimento = $data_hora_fim_atendimento;
        return $this;
    }
    
    /**
     * Gets data_atendimento
     * @return string
     */
    public function getDataAtendimento()
    {
        return $this->data_atendimento;
    }
  
    /**
     * Sets data_atendimento
     * @param string $data_atendimento Apresenta a data e hora em que o Atendimento foi realizado.
     * @return $this
     */
    public function setDataAtendimento($data_atendimento)
    {
        
        $this->data_atendimento = $data_atendimento;
        return $this;
    }
    
    /**
     * Gets data_agendamento
     * @return string
     */
    public function getDataAgendamento()
    {
        return $this->data_agendamento;
    }
  
    /**
     * Sets data_agendamento
     * @param string $data_agendamento Quando utilizado, de acordo com o Tipo de Atendimento, apresenta a data e hora para processamento ou a data para retorno do Atendimento.
     * @return $this
     */
    public function setDataAgendamento($data_agendamento)
    {
        
        $this->data_agendamento = $data_agendamento;
        return $this;
    }
    
    /**
     * Gets data_processamento
     * @return string
     */
    public function getDataProcessamento()
    {
        return $this->data_processamento;
    }
  
    /**
     * Sets data_processamento
     * @param string $data_processamento Quando utilizado, apresenta a data e hora em que a solicita\u00C3\u00A7\u00C3\u00A3o registrada no Atendimento fora processada.
     * @return $this
     */
    public function setDataProcessamento($data_processamento)
    {
        
        $this->data_processamento = $data_processamento;
        return $this;
    }
    
    /**
     * Gets flag_processamento
     * @return int
     */
    public function getFlagProcessamento()
    {
        return $this->flag_processamento;
    }
  
    /**
     * Sets flag_processamento
     * @param int $flag_processamento Quando aplic\u00C3\u00A1vel, de acordo com o Indica se o Processamento da solicita\u00C3\u00A7\u00C3\u00A3o fora realizado.
     * @return $this
     */
    public function setFlagProcessamento($flag_processamento)
    {
        
        $this->flag_processamento = $flag_processamento;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
