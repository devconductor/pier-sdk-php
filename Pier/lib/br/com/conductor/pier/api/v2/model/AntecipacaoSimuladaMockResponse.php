<?php
/**
 * AntecipacaoSimuladaMockResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * AntecipacaoSimuladaMockResponse Class Doc Comment
 *
 * @category    Class
 * @description Representa\u00C3\u00A7\u00C3\u00A3o da resposta do recurso Antecipacao Simulada
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class AntecipacaoSimuladaMockResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'mcc' => 'int',
        'uf' => 'string',
        'id_antecipacao_simulada' => 'int',
        'id_conta' => 'int',
        'id_compra' => 'int',
        'id_tipo_transacao' => 'int',
        'quantidade_parcelas_antecipaveis' => 'int',
        'valor_parcela' => 'Number',
        'data_hora_simulacao' => 'string',
        'taxa_antecipacao_ano' => 'Number',
        'nome_estabelecimento' => 'string',
        'status' => 'string',
        'data_compra' => 'string',
        'tipo_origem_transacao' => 'string',
        'cidade' => 'string',
        'pais' => 'string',
        'latitude' => 'string',
        'longitude' => 'string',
        'id_grupo_mcc' => 'int',
        'descricao_grupo_mcc' => 'string',
        'id_produto' => 'int',
        'descricao_produto' => 'string',
        'detalhes' => '\br.com.conductor.pier.api.v2.model\AntecipacaoSimuladaDetalhesResponse[]'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'mcc' => 'mcc',
        'uf' => 'uf',
        'id_antecipacao_simulada' => 'idAntecipacaoSimulada',
        'id_conta' => 'idConta',
        'id_compra' => 'idCompra',
        'id_tipo_transacao' => 'idTipoTransacao',
        'quantidade_parcelas_antecipaveis' => 'quantidadeParcelasAntecipaveis',
        'valor_parcela' => 'valorParcela',
        'data_hora_simulacao' => 'dataHoraSimulacao',
        'taxa_antecipacao_ano' => 'taxaAntecipacaoAno',
        'nome_estabelecimento' => 'nomeEstabelecimento',
        'status' => 'status',
        'data_compra' => 'dataCompra',
        'tipo_origem_transacao' => 'tipoOrigemTransacao',
        'cidade' => 'cidade',
        'pais' => 'pais',
        'latitude' => 'latitude',
        'longitude' => 'longitude',
        'id_grupo_mcc' => 'idGrupoMCC',
        'descricao_grupo_mcc' => 'descricaoGrupoMCC',
        'id_produto' => 'idProduto',
        'descricao_produto' => 'descricaoProduto',
        'detalhes' => 'detalhes'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'mcc' => 'setMcc',
        'uf' => 'setUf',
        'id_antecipacao_simulada' => 'setIdAntecipacaoSimulada',
        'id_conta' => 'setIdConta',
        'id_compra' => 'setIdCompra',
        'id_tipo_transacao' => 'setIdTipoTransacao',
        'quantidade_parcelas_antecipaveis' => 'setQuantidadeParcelasAntecipaveis',
        'valor_parcela' => 'setValorParcela',
        'data_hora_simulacao' => 'setDataHoraSimulacao',
        'taxa_antecipacao_ano' => 'setTaxaAntecipacaoAno',
        'nome_estabelecimento' => 'setNomeEstabelecimento',
        'status' => 'setStatus',
        'data_compra' => 'setDataCompra',
        'tipo_origem_transacao' => 'setTipoOrigemTransacao',
        'cidade' => 'setCidade',
        'pais' => 'setPais',
        'latitude' => 'setLatitude',
        'longitude' => 'setLongitude',
        'id_grupo_mcc' => 'setIdGrupoMcc',
        'descricao_grupo_mcc' => 'setDescricaoGrupoMcc',
        'id_produto' => 'setIdProduto',
        'descricao_produto' => 'setDescricaoProduto',
        'detalhes' => 'setDetalhes'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'mcc' => 'getMcc',
        'uf' => 'getUf',
        'id_antecipacao_simulada' => 'getIdAntecipacaoSimulada',
        'id_conta' => 'getIdConta',
        'id_compra' => 'getIdCompra',
        'id_tipo_transacao' => 'getIdTipoTransacao',
        'quantidade_parcelas_antecipaveis' => 'getQuantidadeParcelasAntecipaveis',
        'valor_parcela' => 'getValorParcela',
        'data_hora_simulacao' => 'getDataHoraSimulacao',
        'taxa_antecipacao_ano' => 'getTaxaAntecipacaoAno',
        'nome_estabelecimento' => 'getNomeEstabelecimento',
        'status' => 'getStatus',
        'data_compra' => 'getDataCompra',
        'tipo_origem_transacao' => 'getTipoOrigemTransacao',
        'cidade' => 'getCidade',
        'pais' => 'getPais',
        'latitude' => 'getLatitude',
        'longitude' => 'getLongitude',
        'id_grupo_mcc' => 'getIdGrupoMcc',
        'descricao_grupo_mcc' => 'getDescricaoGrupoMcc',
        'id_produto' => 'getIdProduto',
        'descricao_produto' => 'getDescricaoProduto',
        'detalhes' => 'getDetalhes'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $mcc 
      * @var int
      */
    protected $mcc;
    
    /**
      * $uf 
      * @var string
      */
    protected $uf;
    
    /**
      * $id_antecipacao_simulada C\u00C3\u00B3digo identificador da simula\u00C3\u00A7\u00C3\u00A3o de antecipa\u00C3\u00A7\u00C3\u00A3o.
      * @var int
      */
    protected $id_antecipacao_simulada;
    
    /**
      * $id_conta C\u00C3\u00B3digo identificador da conta.
      * @var int
      */
    protected $id_conta;
    
    /**
      * $id_compra C\u00C3\u00B3digo identificador do evento compra.
      * @var int
      */
    protected $id_compra;
    
    /**
      * $id_tipo_transacao C\u00C3\u00B3digo identificador do tipo do evento compra.
      * @var int
      */
    protected $id_tipo_transacao;
    
    /**
      * $quantidade_parcelas_antecipaveis Quantidade de parcelas antecip\u00C3\u00A1veis.
      * @var int
      */
    protected $quantidade_parcelas_antecipaveis;
    
    /**
      * $valor_parcela Valor da parcela.
      * @var Number
      */
    protected $valor_parcela;
    
    /**
      * $data_hora_simulacao Data e hora em que a simula\u00C3\u00A7\u00C3\u00A3o foi feita.
      * @var string
      */
    protected $data_hora_simulacao;
    
    /**
      * $taxa_antecipacao_ano Taxa de antecipa\u00C3\u00A7\u00C3\u00A3o aplicada (ao ano).
      * @var Number
      */
    protected $taxa_antecipacao_ano;
    
    /**
      * $nome_estabelecimento Estabelecimento onde foi realizada a transa\u00C3\u00A7\u00C3\u00A3o
      * @var string
      */
    protected $nome_estabelecimento;
    
    /**
      * $status Descri\u00C3\u00A7\u00C3\u00A3o do status da autoriza\u00C3\u00A7\u00C3\u00A3o da compra.
      * @var string
      */
    protected $status;
    
    /**
      * $data_compra Data da compra.
      * @var string
      */
    protected $data_compra;
    
    /**
      * $tipo_origem_transacao Tipo de transa\u00C3\u00A7\u00C3\u00A3o da compra.
      * @var string
      */
    protected $tipo_origem_transacao;
    
    /**
      * $cidade Cidade onde a compra foi realizada.
      * @var string
      */
    protected $cidade;
    
    /**
      * $pais Pa\u00C3\u00ADs onde a compra foi realizada.
      * @var string
      */
    protected $pais;
    
    /**
      * $latitude Coordenada latitudinal da localiza\u00C3\u00A7\u00C3\u00A3o da compra.
      * @var string
      */
    protected $latitude;
    
    /**
      * $longitude Coordenada longitudinal da localiza\u00C3\u00A7\u00C3\u00A3o da compra.
      * @var string
      */
    protected $longitude;
    
    /**
      * $id_grupo_mcc C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Grupo MCC da compra.
      * @var int
      */
    protected $id_grupo_mcc;
    
    /**
      * $descricao_grupo_mcc Descri\u00C3\u00A7\u00C3\u00A3o do Grupo MCC da compra.
      * @var string
      */
    protected $descricao_grupo_mcc;
    
    /**
      * $id_produto C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do produto da compra.
      * @var int
      */
    protected $id_produto;
    
    /**
      * $descricao_produto Descri\u00C3\u00A7\u00C3\u00A3o do produto da compra.
      * @var string
      */
    protected $descricao_produto;
    
    /**
      * $detalhes Detalhes da simula\u00C3\u00A7\u00C3\u00A3o.
      * @var \br.com.conductor.pier.api.v2.model\AntecipacaoSimuladaDetalhesResponse[]
      */
    protected $detalhes;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->mcc = $data["mcc"];
            $this->uf = $data["uf"];
            $this->id_antecipacao_simulada = $data["id_antecipacao_simulada"];
            $this->id_conta = $data["id_conta"];
            $this->id_compra = $data["id_compra"];
            $this->id_tipo_transacao = $data["id_tipo_transacao"];
            $this->quantidade_parcelas_antecipaveis = $data["quantidade_parcelas_antecipaveis"];
            $this->valor_parcela = $data["valor_parcela"];
            $this->data_hora_simulacao = $data["data_hora_simulacao"];
            $this->taxa_antecipacao_ano = $data["taxa_antecipacao_ano"];
            $this->nome_estabelecimento = $data["nome_estabelecimento"];
            $this->status = $data["status"];
            $this->data_compra = $data["data_compra"];
            $this->tipo_origem_transacao = $data["tipo_origem_transacao"];
            $this->cidade = $data["cidade"];
            $this->pais = $data["pais"];
            $this->latitude = $data["latitude"];
            $this->longitude = $data["longitude"];
            $this->id_grupo_mcc = $data["id_grupo_mcc"];
            $this->descricao_grupo_mcc = $data["descricao_grupo_mcc"];
            $this->id_produto = $data["id_produto"];
            $this->descricao_produto = $data["descricao_produto"];
            $this->detalhes = $data["detalhes"];
        }
    }
    
    /**
     * Gets mcc
     * @return int
     */
    public function getMcc()
    {
        return $this->mcc;
    }
  
    /**
     * Sets mcc
     * @param int $mcc 
     * @return $this
     */
    public function setMcc($mcc)
    {
        
        $this->mcc = $mcc;
        return $this;
    }
    
    /**
     * Gets uf
     * @return string
     */
    public function getUf()
    {
        return $this->uf;
    }
  
    /**
     * Sets uf
     * @param string $uf 
     * @return $this
     */
    public function setUf($uf)
    {
        
        $this->uf = $uf;
        return $this;
    }
    
    /**
     * Gets id_antecipacao_simulada
     * @return int
     */
    public function getIdAntecipacaoSimulada()
    {
        return $this->id_antecipacao_simulada;
    }
  
    /**
     * Sets id_antecipacao_simulada
     * @param int $id_antecipacao_simulada C\u00C3\u00B3digo identificador da simula\u00C3\u00A7\u00C3\u00A3o de antecipa\u00C3\u00A7\u00C3\u00A3o.
     * @return $this
     */
    public function setIdAntecipacaoSimulada($id_antecipacao_simulada)
    {
        
        $this->id_antecipacao_simulada = $id_antecipacao_simulada;
        return $this;
    }
    
    /**
     * Gets id_conta
     * @return int
     */
    public function getIdConta()
    {
        return $this->id_conta;
    }
  
    /**
     * Sets id_conta
     * @param int $id_conta C\u00C3\u00B3digo identificador da conta.
     * @return $this
     */
    public function setIdConta($id_conta)
    {
        
        $this->id_conta = $id_conta;
        return $this;
    }
    
    /**
     * Gets id_compra
     * @return int
     */
    public function getIdCompra()
    {
        return $this->id_compra;
    }
  
    /**
     * Sets id_compra
     * @param int $id_compra C\u00C3\u00B3digo identificador do evento compra.
     * @return $this
     */
    public function setIdCompra($id_compra)
    {
        
        $this->id_compra = $id_compra;
        return $this;
    }
    
    /**
     * Gets id_tipo_transacao
     * @return int
     */
    public function getIdTipoTransacao()
    {
        return $this->id_tipo_transacao;
    }
  
    /**
     * Sets id_tipo_transacao
     * @param int $id_tipo_transacao C\u00C3\u00B3digo identificador do tipo do evento compra.
     * @return $this
     */
    public function setIdTipoTransacao($id_tipo_transacao)
    {
        
        $this->id_tipo_transacao = $id_tipo_transacao;
        return $this;
    }
    
    /**
     * Gets quantidade_parcelas_antecipaveis
     * @return int
     */
    public function getQuantidadeParcelasAntecipaveis()
    {
        return $this->quantidade_parcelas_antecipaveis;
    }
  
    /**
     * Sets quantidade_parcelas_antecipaveis
     * @param int $quantidade_parcelas_antecipaveis Quantidade de parcelas antecip\u00C3\u00A1veis.
     * @return $this
     */
    public function setQuantidadeParcelasAntecipaveis($quantidade_parcelas_antecipaveis)
    {
        
        $this->quantidade_parcelas_antecipaveis = $quantidade_parcelas_antecipaveis;
        return $this;
    }
    
    /**
     * Gets valor_parcela
     * @return Number
     */
    public function getValorParcela()
    {
        return $this->valor_parcela;
    }
  
    /**
     * Sets valor_parcela
     * @param Number $valor_parcela Valor da parcela.
     * @return $this
     */
    public function setValorParcela($valor_parcela)
    {
        
        $this->valor_parcela = $valor_parcela;
        return $this;
    }
    
    /**
     * Gets data_hora_simulacao
     * @return string
     */
    public function getDataHoraSimulacao()
    {
        return $this->data_hora_simulacao;
    }
  
    /**
     * Sets data_hora_simulacao
     * @param string $data_hora_simulacao Data e hora em que a simula\u00C3\u00A7\u00C3\u00A3o foi feita.
     * @return $this
     */
    public function setDataHoraSimulacao($data_hora_simulacao)
    {
        
        $this->data_hora_simulacao = $data_hora_simulacao;
        return $this;
    }
    
    /**
     * Gets taxa_antecipacao_ano
     * @return Number
     */
    public function getTaxaAntecipacaoAno()
    {
        return $this->taxa_antecipacao_ano;
    }
  
    /**
     * Sets taxa_antecipacao_ano
     * @param Number $taxa_antecipacao_ano Taxa de antecipa\u00C3\u00A7\u00C3\u00A3o aplicada (ao ano).
     * @return $this
     */
    public function setTaxaAntecipacaoAno($taxa_antecipacao_ano)
    {
        
        $this->taxa_antecipacao_ano = $taxa_antecipacao_ano;
        return $this;
    }
    
    /**
     * Gets nome_estabelecimento
     * @return string
     */
    public function getNomeEstabelecimento()
    {
        return $this->nome_estabelecimento;
    }
  
    /**
     * Sets nome_estabelecimento
     * @param string $nome_estabelecimento Estabelecimento onde foi realizada a transa\u00C3\u00A7\u00C3\u00A3o
     * @return $this
     */
    public function setNomeEstabelecimento($nome_estabelecimento)
    {
        
        $this->nome_estabelecimento = $nome_estabelecimento;
        return $this;
    }
    
    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param string $status Descri\u00C3\u00A7\u00C3\u00A3o do status da autoriza\u00C3\u00A7\u00C3\u00A3o da compra.
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Gets data_compra
     * @return string
     */
    public function getDataCompra()
    {
        return $this->data_compra;
    }
  
    /**
     * Sets data_compra
     * @param string $data_compra Data da compra.
     * @return $this
     */
    public function setDataCompra($data_compra)
    {
        
        $this->data_compra = $data_compra;
        return $this;
    }
    
    /**
     * Gets tipo_origem_transacao
     * @return string
     */
    public function getTipoOrigemTransacao()
    {
        return $this->tipo_origem_transacao;
    }
  
    /**
     * Sets tipo_origem_transacao
     * @param string $tipo_origem_transacao Tipo de transa\u00C3\u00A7\u00C3\u00A3o da compra.
     * @return $this
     */
    public function setTipoOrigemTransacao($tipo_origem_transacao)
    {
        
        $this->tipo_origem_transacao = $tipo_origem_transacao;
        return $this;
    }
    
    /**
     * Gets cidade
     * @return string
     */
    public function getCidade()
    {
        return $this->cidade;
    }
  
    /**
     * Sets cidade
     * @param string $cidade Cidade onde a compra foi realizada.
     * @return $this
     */
    public function setCidade($cidade)
    {
        
        $this->cidade = $cidade;
        return $this;
    }
    
    /**
     * Gets pais
     * @return string
     */
    public function getPais()
    {
        return $this->pais;
    }
  
    /**
     * Sets pais
     * @param string $pais Pa\u00C3\u00ADs onde a compra foi realizada.
     * @return $this
     */
    public function setPais($pais)
    {
        
        $this->pais = $pais;
        return $this;
    }
    
    /**
     * Gets latitude
     * @return string
     */
    public function getLatitude()
    {
        return $this->latitude;
    }
  
    /**
     * Sets latitude
     * @param string $latitude Coordenada latitudinal da localiza\u00C3\u00A7\u00C3\u00A3o da compra.
     * @return $this
     */
    public function setLatitude($latitude)
    {
        
        $this->latitude = $latitude;
        return $this;
    }
    
    /**
     * Gets longitude
     * @return string
     */
    public function getLongitude()
    {
        return $this->longitude;
    }
  
    /**
     * Sets longitude
     * @param string $longitude Coordenada longitudinal da localiza\u00C3\u00A7\u00C3\u00A3o da compra.
     * @return $this
     */
    public function setLongitude($longitude)
    {
        
        $this->longitude = $longitude;
        return $this;
    }
    
    /**
     * Gets id_grupo_mcc
     * @return int
     */
    public function getIdGrupoMcc()
    {
        return $this->id_grupo_mcc;
    }
  
    /**
     * Sets id_grupo_mcc
     * @param int $id_grupo_mcc C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Grupo MCC da compra.
     * @return $this
     */
    public function setIdGrupoMcc($id_grupo_mcc)
    {
        
        $this->id_grupo_mcc = $id_grupo_mcc;
        return $this;
    }
    
    /**
     * Gets descricao_grupo_mcc
     * @return string
     */
    public function getDescricaoGrupoMcc()
    {
        return $this->descricao_grupo_mcc;
    }
  
    /**
     * Sets descricao_grupo_mcc
     * @param string $descricao_grupo_mcc Descri\u00C3\u00A7\u00C3\u00A3o do Grupo MCC da compra.
     * @return $this
     */
    public function setDescricaoGrupoMcc($descricao_grupo_mcc)
    {
        
        $this->descricao_grupo_mcc = $descricao_grupo_mcc;
        return $this;
    }
    
    /**
     * Gets id_produto
     * @return int
     */
    public function getIdProduto()
    {
        return $this->id_produto;
    }
  
    /**
     * Sets id_produto
     * @param int $id_produto C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do produto da compra.
     * @return $this
     */
    public function setIdProduto($id_produto)
    {
        
        $this->id_produto = $id_produto;
        return $this;
    }
    
    /**
     * Gets descricao_produto
     * @return string
     */
    public function getDescricaoProduto()
    {
        return $this->descricao_produto;
    }
  
    /**
     * Sets descricao_produto
     * @param string $descricao_produto Descri\u00C3\u00A7\u00C3\u00A3o do produto da compra.
     * @return $this
     */
    public function setDescricaoProduto($descricao_produto)
    {
        
        $this->descricao_produto = $descricao_produto;
        return $this;
    }
    
    /**
     * Gets detalhes
     * @return \br.com.conductor.pier.api.v2.model\AntecipacaoSimuladaDetalhesResponse[]
     */
    public function getDetalhes()
    {
        return $this->detalhes;
    }
  
    /**
     * Sets detalhes
     * @param \br.com.conductor.pier.api.v2.model\AntecipacaoSimuladaDetalhesResponse[] $detalhes Detalhes da simula\u00C3\u00A7\u00C3\u00A3o.
     * @return $this
     */
    public function setDetalhes($detalhes)
    {
        
        $this->detalhes = $detalhes;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
