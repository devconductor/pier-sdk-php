<?php
/**
 * ControleVencimentoResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * ControleVencimentoResponse Class Doc Comment
 *
 * @category    Class
 * @description {{{controle_vencimento_response_description}}}
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ControleVencimentoResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'data_vencimento' => 'string',
        'data_prevista_corte' => 'string',
        'data_hora_realizacao_corte' => 'string',
        'data_prevista_faturamento' => 'string',
        'data_hora_realizacao_faturamento' => 'string',
        'data_real_vencimento' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'data_vencimento' => 'dataVencimento',
        'data_prevista_corte' => 'dataPrevistaCorte',
        'data_hora_realizacao_corte' => 'dataHoraRealizacaoCorte',
        'data_prevista_faturamento' => 'dataPrevistaFaturamento',
        'data_hora_realizacao_faturamento' => 'dataHoraRealizacaoFaturamento',
        'data_real_vencimento' => 'dataRealVencimento'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'data_vencimento' => 'setDataVencimento',
        'data_prevista_corte' => 'setDataPrevistaCorte',
        'data_hora_realizacao_corte' => 'setDataHoraRealizacaoCorte',
        'data_prevista_faturamento' => 'setDataPrevistaFaturamento',
        'data_hora_realizacao_faturamento' => 'setDataHoraRealizacaoFaturamento',
        'data_real_vencimento' => 'setDataRealVencimento'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'data_vencimento' => 'getDataVencimento',
        'data_prevista_corte' => 'getDataPrevistaCorte',
        'data_hora_realizacao_corte' => 'getDataHoraRealizacaoCorte',
        'data_prevista_faturamento' => 'getDataPrevistaFaturamento',
        'data_hora_realizacao_faturamento' => 'getDataHoraRealizacaoFaturamento',
        'data_real_vencimento' => 'getDataRealVencimento'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $data_vencimento {{{controle_vencimento_response_data_vencimento_value}}}
      * @var string
      */
    protected $data_vencimento;
    
    /**
      * $data_prevista_corte {{{controle_vencimento_response_data_prevista_corte_value}}}
      * @var string
      */
    protected $data_prevista_corte;
    
    /**
      * $data_hora_realizacao_corte {{{controle_vencimento_response_data_hora_realizacao_corte_value}}}
      * @var string
      */
    protected $data_hora_realizacao_corte;
    
    /**
      * $data_prevista_faturamento {{{controle_vencimento_response_data_prevista_faturamento_value}}}
      * @var string
      */
    protected $data_prevista_faturamento;
    
    /**
      * $data_hora_realizacao_faturamento {{{controle_vencimento_response_data_hora_realizacao_faturamento_value}}}
      * @var string
      */
    protected $data_hora_realizacao_faturamento;
    
    /**
      * $data_real_vencimento {{{controle_vencimento_response_data_real_vencimento_value}}}
      * @var string
      */
    protected $data_real_vencimento;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->data_vencimento = $data["data_vencimento"];
            $this->data_prevista_corte = $data["data_prevista_corte"];
            $this->data_hora_realizacao_corte = $data["data_hora_realizacao_corte"];
            $this->data_prevista_faturamento = $data["data_prevista_faturamento"];
            $this->data_hora_realizacao_faturamento = $data["data_hora_realizacao_faturamento"];
            $this->data_real_vencimento = $data["data_real_vencimento"];
        }
    }
    
    /**
     * Gets data_vencimento
     * @return string
     */
    public function getDataVencimento()
    {
        return $this->data_vencimento;
    }
  
    /**
     * Sets data_vencimento
     * @param string $data_vencimento {{{controle_vencimento_response_data_vencimento_value}}}
     * @return $this
     */
    public function setDataVencimento($data_vencimento)
    {
        
        $this->data_vencimento = $data_vencimento;
        return $this;
    }
    
    /**
     * Gets data_prevista_corte
     * @return string
     */
    public function getDataPrevistaCorte()
    {
        return $this->data_prevista_corte;
    }
  
    /**
     * Sets data_prevista_corte
     * @param string $data_prevista_corte {{{controle_vencimento_response_data_prevista_corte_value}}}
     * @return $this
     */
    public function setDataPrevistaCorte($data_prevista_corte)
    {
        
        $this->data_prevista_corte = $data_prevista_corte;
        return $this;
    }
    
    /**
     * Gets data_hora_realizacao_corte
     * @return string
     */
    public function getDataHoraRealizacaoCorte()
    {
        return $this->data_hora_realizacao_corte;
    }
  
    /**
     * Sets data_hora_realizacao_corte
     * @param string $data_hora_realizacao_corte {{{controle_vencimento_response_data_hora_realizacao_corte_value}}}
     * @return $this
     */
    public function setDataHoraRealizacaoCorte($data_hora_realizacao_corte)
    {
        
        $this->data_hora_realizacao_corte = $data_hora_realizacao_corte;
        return $this;
    }
    
    /**
     * Gets data_prevista_faturamento
     * @return string
     */
    public function getDataPrevistaFaturamento()
    {
        return $this->data_prevista_faturamento;
    }
  
    /**
     * Sets data_prevista_faturamento
     * @param string $data_prevista_faturamento {{{controle_vencimento_response_data_prevista_faturamento_value}}}
     * @return $this
     */
    public function setDataPrevistaFaturamento($data_prevista_faturamento)
    {
        
        $this->data_prevista_faturamento = $data_prevista_faturamento;
        return $this;
    }
    
    /**
     * Gets data_hora_realizacao_faturamento
     * @return string
     */
    public function getDataHoraRealizacaoFaturamento()
    {
        return $this->data_hora_realizacao_faturamento;
    }
  
    /**
     * Sets data_hora_realizacao_faturamento
     * @param string $data_hora_realizacao_faturamento {{{controle_vencimento_response_data_hora_realizacao_faturamento_value}}}
     * @return $this
     */
    public function setDataHoraRealizacaoFaturamento($data_hora_realizacao_faturamento)
    {
        
        $this->data_hora_realizacao_faturamento = $data_hora_realizacao_faturamento;
        return $this;
    }
    
    /**
     * Gets data_real_vencimento
     * @return string
     */
    public function getDataRealVencimento()
    {
        return $this->data_real_vencimento;
    }
  
    /**
     * Sets data_real_vencimento
     * @param string $data_real_vencimento {{{controle_vencimento_response_data_real_vencimento_value}}}
     * @return $this
     */
    public function setDataRealVencimento($data_real_vencimento)
    {
        
        $this->data_real_vencimento = $data_real_vencimento;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
