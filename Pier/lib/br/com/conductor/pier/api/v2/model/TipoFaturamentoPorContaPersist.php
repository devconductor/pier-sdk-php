<?php
/**
 * TipoFaturamentoPorContaPersist
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * TipoFaturamentoPorContaPersist Class Doc Comment
 *
 * @category    Class
 * @description TipoFaturamentoPorContaPersist
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class TipoFaturamentoPorContaPersist implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'status' => 'bool',
        'id_conta' => 'int',
        'id_tipo_faturamento' => 'int',
        'data_hora_inclusao' => 'string',
        'data_hora_cancelamento' => 'string',
        'modificado_por' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'status' => 'status',
        'id_conta' => 'idConta',
        'id_tipo_faturamento' => 'idTipoFaturamento',
        'data_hora_inclusao' => 'dataHoraInclusao',
        'data_hora_cancelamento' => 'dataHoraCancelamento',
        'modificado_por' => 'modificadoPor'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'status' => 'setStatus',
        'id_conta' => 'setIdConta',
        'id_tipo_faturamento' => 'setIdTipoFaturamento',
        'data_hora_inclusao' => 'setDataHoraInclusao',
        'data_hora_cancelamento' => 'setDataHoraCancelamento',
        'modificado_por' => 'setModificadoPor'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'status' => 'getStatus',
        'id_conta' => 'getIdConta',
        'id_tipo_faturamento' => 'getIdTipoFaturamento',
        'data_hora_inclusao' => 'getDataHoraInclusao',
        'data_hora_cancelamento' => 'getDataHoraCancelamento',
        'modificado_por' => 'getModificadoPor'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $status Representa se a configura\u00E7\u00E3o est\u00E1 ativada ou desativada para a conta.
      * @var bool
      */
    protected $status;
    
    /**
      * $id_conta C\u00F3digo de identifica\u00E7\u00E3o da conta relacionada.
      * @var int
      */
    protected $id_conta;
    
    /**
      * $id_tipo_faturamento C\u00F3digo de identifica\u00E7\u00E3o do tipo de faturamento relacionada.
      * @var int
      */
    protected $id_tipo_faturamento;
    
    /**
      * $data_hora_inclusao Data da inclus\u00E3o da configura\u00E7\u00E3o, deve ser informada no formato yyyy-MM-dd'T'HH:mm:ss.SSS'Z'.
      * @var string
      */
    protected $data_hora_inclusao;
    
    /**
      * $data_hora_cancelamento Data do cancelamento da configura\u00E7\u00E3o, deve ser informada no formato yyyy-MM-dd'T'HH:mm:ss.SSS'Z'.
      * @var string
      */
    protected $data_hora_cancelamento;
    
    /**
      * $modificado_por Identificador do respons\u00E1vel pela modifica\u00E7\u00E3o do registro.
      * @var string
      */
    protected $modificado_por;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->status = $data["status"];
            $this->id_conta = $data["id_conta"];
            $this->id_tipo_faturamento = $data["id_tipo_faturamento"];
            $this->data_hora_inclusao = $data["data_hora_inclusao"];
            $this->data_hora_cancelamento = $data["data_hora_cancelamento"];
            $this->modificado_por = $data["modificado_por"];
        }
    }
    
    /**
     * Gets status
     * @return bool
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param bool $status Representa se a configura\u00E7\u00E3o est\u00E1 ativada ou desativada para a conta.
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Gets id_conta
     * @return int
     */
    public function getIdConta()
    {
        return $this->id_conta;
    }
  
    /**
     * Sets id_conta
     * @param int $id_conta C\u00F3digo de identifica\u00E7\u00E3o da conta relacionada.
     * @return $this
     */
    public function setIdConta($id_conta)
    {
        
        $this->id_conta = $id_conta;
        return $this;
    }
    
    /**
     * Gets id_tipo_faturamento
     * @return int
     */
    public function getIdTipoFaturamento()
    {
        return $this->id_tipo_faturamento;
    }
  
    /**
     * Sets id_tipo_faturamento
     * @param int $id_tipo_faturamento C\u00F3digo de identifica\u00E7\u00E3o do tipo de faturamento relacionada.
     * @return $this
     */
    public function setIdTipoFaturamento($id_tipo_faturamento)
    {
        
        $this->id_tipo_faturamento = $id_tipo_faturamento;
        return $this;
    }
    
    /**
     * Gets data_hora_inclusao
     * @return string
     */
    public function getDataHoraInclusao()
    {
        return $this->data_hora_inclusao;
    }
  
    /**
     * Sets data_hora_inclusao
     * @param string $data_hora_inclusao Data da inclus\u00E3o da configura\u00E7\u00E3o, deve ser informada no formato yyyy-MM-dd'T'HH:mm:ss.SSS'Z'.
     * @return $this
     */
    public function setDataHoraInclusao($data_hora_inclusao)
    {
        
        $this->data_hora_inclusao = $data_hora_inclusao;
        return $this;
    }
    
    /**
     * Gets data_hora_cancelamento
     * @return string
     */
    public function getDataHoraCancelamento()
    {
        return $this->data_hora_cancelamento;
    }
  
    /**
     * Sets data_hora_cancelamento
     * @param string $data_hora_cancelamento Data do cancelamento da configura\u00E7\u00E3o, deve ser informada no formato yyyy-MM-dd'T'HH:mm:ss.SSS'Z'.
     * @return $this
     */
    public function setDataHoraCancelamento($data_hora_cancelamento)
    {
        
        $this->data_hora_cancelamento = $data_hora_cancelamento;
        return $this;
    }
    
    /**
     * Gets modificado_por
     * @return string
     */
    public function getModificadoPor()
    {
        return $this->modificado_por;
    }
  
    /**
     * Sets modificado_por
     * @param string $modificado_por Identificador do respons\u00E1vel pela modifica\u00E7\u00E3o do registro.
     * @return $this
     */
    public function setModificadoPor($modificado_por)
    {
        
        $this->modificado_por = $modificado_por;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
