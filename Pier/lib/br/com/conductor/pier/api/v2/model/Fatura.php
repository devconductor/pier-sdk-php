<?php
/**
 * Fatura
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * Fatura Class Doc Comment
 *
 * @category    Class
 * @description Objeto Fatura
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Fatura implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'data_vencimento' => '\DateTime',
        'saldo_fatura_anterior' => 'Number',
        'saldo_multa' => 'Number',
        'saldo_compras' => 'Number',
        'saldo_pagamentos' => 'Number',
        'saldo_tarifas' => 'Number',
        'saldo_debitos' => 'Number',
        'saldo_creditos' => 'Number',
        'saldo_atual_final' => 'Number',
        'valor_minimo_fatura' => 'Number',
        'flag_emite_fatura' => 'int'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'data_vencimento' => 'dataVencimento',
        'saldo_fatura_anterior' => 'saldoFaturaAnterior',
        'saldo_multa' => 'saldoMulta',
        'saldo_compras' => 'saldoCompras',
        'saldo_pagamentos' => 'saldoPagamentos',
        'saldo_tarifas' => 'saldoTarifas',
        'saldo_debitos' => 'saldoDebitos',
        'saldo_creditos' => 'saldoCreditos',
        'saldo_atual_final' => 'saldoAtualFinal',
        'valor_minimo_fatura' => 'valorMinimoFatura',
        'flag_emite_fatura' => 'flagEmiteFatura'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'data_vencimento' => 'setDataVencimento',
        'saldo_fatura_anterior' => 'setSaldoFaturaAnterior',
        'saldo_multa' => 'setSaldoMulta',
        'saldo_compras' => 'setSaldoCompras',
        'saldo_pagamentos' => 'setSaldoPagamentos',
        'saldo_tarifas' => 'setSaldoTarifas',
        'saldo_debitos' => 'setSaldoDebitos',
        'saldo_creditos' => 'setSaldoCreditos',
        'saldo_atual_final' => 'setSaldoAtualFinal',
        'valor_minimo_fatura' => 'setValorMinimoFatura',
        'flag_emite_fatura' => 'setFlagEmiteFatura'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'data_vencimento' => 'getDataVencimento',
        'saldo_fatura_anterior' => 'getSaldoFaturaAnterior',
        'saldo_multa' => 'getSaldoMulta',
        'saldo_compras' => 'getSaldoCompras',
        'saldo_pagamentos' => 'getSaldoPagamentos',
        'saldo_tarifas' => 'getSaldoTarifas',
        'saldo_debitos' => 'getSaldoDebitos',
        'saldo_creditos' => 'getSaldoCreditos',
        'saldo_atual_final' => 'getSaldoAtualFinal',
        'valor_minimo_fatura' => 'getValorMinimoFatura',
        'flag_emite_fatura' => 'getFlagEmiteFatura'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $data_vencimento Data de Vencimento da Fatura.
      * @var \DateTime
      */
    protected $data_vencimento;
    
    /**
      * $saldo_fatura_anterior Saldo da Fatura Anterior.
      * @var Number
      */
    protected $saldo_fatura_anterior;
    
    /**
      * $saldo_multa Saldo total da Multa lan\u00C3\u00A7ada na Fatura atual.
      * @var Number
      */
    protected $saldo_multa;
    
    /**
      * $saldo_compras Saldo total das Compras lan\u00C3\u00A7adas na Fatura atual.
      * @var Number
      */
    protected $saldo_compras;
    
    /**
      * $saldo_pagamentos Saldo total dos Pagamentos lan\u00C3\u00A7ados na Fatura atual.
      * @var Number
      */
    protected $saldo_pagamentos;
    
    /**
      * $saldo_tarifas Saldo total das Tarifas lan\u00C3\u00A7adas na Fatura atual.
      * @var Number
      */
    protected $saldo_tarifas;
    
    /**
      * $saldo_debitos Saldo total dos D\u00C3\u00A9bitos lan\u00C3\u00A7ados na Fatura atual.
      * @var Number
      */
    protected $saldo_debitos;
    
    /**
      * $saldo_creditos Saldo total dos Cr\u00C3\u00A9dito lan\u00C3\u00A7ados na Fatura atual.
      * @var Number
      */
    protected $saldo_creditos;
    
    /**
      * $saldo_atual_final Salto total devedor da Fatura atual.
      * @var Number
      */
    protected $saldo_atual_final;
    
    /**
      * $valor_minimo_fatura Valor m\u00C3\u00ADnimo para Pagamento da Fatura.
      * @var Number
      */
    protected $valor_minimo_fatura;
    
    /**
      * $flag_emite_fatura Quando ativa, indica que fora emitida uma Fatura.
      * @var int
      */
    protected $flag_emite_fatura;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->data_vencimento = $data["data_vencimento"];
            $this->saldo_fatura_anterior = $data["saldo_fatura_anterior"];
            $this->saldo_multa = $data["saldo_multa"];
            $this->saldo_compras = $data["saldo_compras"];
            $this->saldo_pagamentos = $data["saldo_pagamentos"];
            $this->saldo_tarifas = $data["saldo_tarifas"];
            $this->saldo_debitos = $data["saldo_debitos"];
            $this->saldo_creditos = $data["saldo_creditos"];
            $this->saldo_atual_final = $data["saldo_atual_final"];
            $this->valor_minimo_fatura = $data["valor_minimo_fatura"];
            $this->flag_emite_fatura = $data["flag_emite_fatura"];
        }
    }
    
    /**
     * Gets data_vencimento
     * @return \DateTime
     */
    public function getDataVencimento()
    {
        return $this->data_vencimento;
    }
  
    /**
     * Sets data_vencimento
     * @param \DateTime $data_vencimento Data de Vencimento da Fatura.
     * @return $this
     */
    public function setDataVencimento($data_vencimento)
    {
        
        $this->data_vencimento = $data_vencimento;
        return $this;
    }
    
    /**
     * Gets saldo_fatura_anterior
     * @return Number
     */
    public function getSaldoFaturaAnterior()
    {
        return $this->saldo_fatura_anterior;
    }
  
    /**
     * Sets saldo_fatura_anterior
     * @param Number $saldo_fatura_anterior Saldo da Fatura Anterior.
     * @return $this
     */
    public function setSaldoFaturaAnterior($saldo_fatura_anterior)
    {
        
        $this->saldo_fatura_anterior = $saldo_fatura_anterior;
        return $this;
    }
    
    /**
     * Gets saldo_multa
     * @return Number
     */
    public function getSaldoMulta()
    {
        return $this->saldo_multa;
    }
  
    /**
     * Sets saldo_multa
     * @param Number $saldo_multa Saldo total da Multa lan\u00C3\u00A7ada na Fatura atual.
     * @return $this
     */
    public function setSaldoMulta($saldo_multa)
    {
        
        $this->saldo_multa = $saldo_multa;
        return $this;
    }
    
    /**
     * Gets saldo_compras
     * @return Number
     */
    public function getSaldoCompras()
    {
        return $this->saldo_compras;
    }
  
    /**
     * Sets saldo_compras
     * @param Number $saldo_compras Saldo total das Compras lan\u00C3\u00A7adas na Fatura atual.
     * @return $this
     */
    public function setSaldoCompras($saldo_compras)
    {
        
        $this->saldo_compras = $saldo_compras;
        return $this;
    }
    
    /**
     * Gets saldo_pagamentos
     * @return Number
     */
    public function getSaldoPagamentos()
    {
        return $this->saldo_pagamentos;
    }
  
    /**
     * Sets saldo_pagamentos
     * @param Number $saldo_pagamentos Saldo total dos Pagamentos lan\u00C3\u00A7ados na Fatura atual.
     * @return $this
     */
    public function setSaldoPagamentos($saldo_pagamentos)
    {
        
        $this->saldo_pagamentos = $saldo_pagamentos;
        return $this;
    }
    
    /**
     * Gets saldo_tarifas
     * @return Number
     */
    public function getSaldoTarifas()
    {
        return $this->saldo_tarifas;
    }
  
    /**
     * Sets saldo_tarifas
     * @param Number $saldo_tarifas Saldo total das Tarifas lan\u00C3\u00A7adas na Fatura atual.
     * @return $this
     */
    public function setSaldoTarifas($saldo_tarifas)
    {
        
        $this->saldo_tarifas = $saldo_tarifas;
        return $this;
    }
    
    /**
     * Gets saldo_debitos
     * @return Number
     */
    public function getSaldoDebitos()
    {
        return $this->saldo_debitos;
    }
  
    /**
     * Sets saldo_debitos
     * @param Number $saldo_debitos Saldo total dos D\u00C3\u00A9bitos lan\u00C3\u00A7ados na Fatura atual.
     * @return $this
     */
    public function setSaldoDebitos($saldo_debitos)
    {
        
        $this->saldo_debitos = $saldo_debitos;
        return $this;
    }
    
    /**
     * Gets saldo_creditos
     * @return Number
     */
    public function getSaldoCreditos()
    {
        return $this->saldo_creditos;
    }
  
    /**
     * Sets saldo_creditos
     * @param Number $saldo_creditos Saldo total dos Cr\u00C3\u00A9dito lan\u00C3\u00A7ados na Fatura atual.
     * @return $this
     */
    public function setSaldoCreditos($saldo_creditos)
    {
        
        $this->saldo_creditos = $saldo_creditos;
        return $this;
    }
    
    /**
     * Gets saldo_atual_final
     * @return Number
     */
    public function getSaldoAtualFinal()
    {
        return $this->saldo_atual_final;
    }
  
    /**
     * Sets saldo_atual_final
     * @param Number $saldo_atual_final Salto total devedor da Fatura atual.
     * @return $this
     */
    public function setSaldoAtualFinal($saldo_atual_final)
    {
        
        $this->saldo_atual_final = $saldo_atual_final;
        return $this;
    }
    
    /**
     * Gets valor_minimo_fatura
     * @return Number
     */
    public function getValorMinimoFatura()
    {
        return $this->valor_minimo_fatura;
    }
  
    /**
     * Sets valor_minimo_fatura
     * @param Number $valor_minimo_fatura Valor m\u00C3\u00ADnimo para Pagamento da Fatura.
     * @return $this
     */
    public function setValorMinimoFatura($valor_minimo_fatura)
    {
        
        $this->valor_minimo_fatura = $valor_minimo_fatura;
        return $this;
    }
    
    /**
     * Gets flag_emite_fatura
     * @return int
     */
    public function getFlagEmiteFatura()
    {
        return $this->flag_emite_fatura;
    }
  
    /**
     * Sets flag_emite_fatura
     * @param int $flag_emite_fatura Quando ativa, indica que fora emitida uma Fatura.
     * @return $this
     */
    public function setFlagEmiteFatura($flag_emite_fatura)
    {
        
        $this->flag_emite_fatura = $flag_emite_fatura;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
