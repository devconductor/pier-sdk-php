<?php
/**
 * DadosCartaoImpressaoResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * DadosCartaoImpressaoResponse Class Doc Comment
 *
 * @category    Class
 * @description Objeto Cart\u00C3\u00A3o para Impresso
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class DadosCartaoImpressaoResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id_conta' => 'int',
        'id_pessoa' => 'int',
        'id_cartao' => 'int',
        'id_bandeira' => 'int',
        'id_tipo_cartao' => 'int',
        'numero_cartao' => 'string',
        'nome_plastico' => 'string',
        'cvv2' => 'string',
        'data_geracao' => 'string',
        'data_validade' => 'string',
        'cpf' => 'string',
        'tipo_portador' => 'string',
        'trilha1' => 'string',
        'trilha2' => 'string',
        'trilha_cvv1' => 'string',
        'trilha_cvv2' => 'string',
        'flag_virtual' => 'int',
        'nome_bandeira' => 'string',
        'flag_titular' => 'int',
        'sequencial_cartao' => 'int',
        'id_status' => 'int',
        'descricao_status_cartao' => 'string',
        'data_status' => 'string',
        'id_estagio' => 'int',
        'descricao_estagio' => 'string',
        'data_estagio' => 'string',
        'numero_bin' => 'string',
        'id_produto' => 'int',
        'descricao_produto' => 'string',
        'id_status_conta' => 'int',
        'descricao_status_conta' => 'int',
        'data_embossing' => 'string',
        'codigo_desbloqueio' => 'string',
        'nome_pessoa' => 'string',
        'tipo_pessoa' => 'string',
        'data_nascimento' => 'string',
        'id_endereco' => 'int',
        'id_tipo_endereco' => 'int',
        'descricao_tipo_endereco' => 'string',
        'cep' => 'string',
        'logradouro' => 'string',
        'numero_endereco' => 'string',
        'complemento_endereco' => 'string',
        'bairro' => 'string',
        'cidade' => 'string',
        'uf' => 'string',
        'pais' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id_conta' => 'idConta',
        'id_pessoa' => 'idPessoa',
        'id_cartao' => 'idCartao',
        'id_bandeira' => 'idBandeira',
        'id_tipo_cartao' => 'idTipoCartao',
        'numero_cartao' => 'numeroCartao',
        'nome_plastico' => 'nomePlastico',
        'cvv2' => 'cvv2',
        'data_geracao' => 'dataGeracao',
        'data_validade' => 'dataValidade',
        'cpf' => 'cpf',
        'tipo_portador' => 'tipoPortador',
        'trilha1' => 'trilha1',
        'trilha2' => 'trilha2',
        'trilha_cvv1' => 'trilhaCVV1',
        'trilha_cvv2' => 'trilhaCVV2',
        'flag_virtual' => 'flagVirtual',
        'nome_bandeira' => 'nomeBandeira',
        'flag_titular' => 'flagTitular',
        'sequencial_cartao' => 'sequencialCartao',
        'id_status' => 'idStatus',
        'descricao_status_cartao' => 'descricaoStatusCartao',
        'data_status' => 'dataStatus',
        'id_estagio' => 'idEstagio',
        'descricao_estagio' => 'descricaoEstagio',
        'data_estagio' => 'dataEstagio',
        'numero_bin' => 'numeroBin',
        'id_produto' => 'idProduto',
        'descricao_produto' => 'descricaoProduto',
        'id_status_conta' => 'idStatusConta',
        'descricao_status_conta' => 'descricaoStatusConta',
        'data_embossing' => 'dataEmbossing',
        'codigo_desbloqueio' => 'codigoDesbloqueio',
        'nome_pessoa' => 'nomePessoa',
        'tipo_pessoa' => 'tipoPessoa',
        'data_nascimento' => 'dataNascimento',
        'id_endereco' => 'idEndereco',
        'id_tipo_endereco' => 'idTipoEndereco',
        'descricao_tipo_endereco' => 'descricaoTipoEndereco',
        'cep' => 'cep',
        'logradouro' => 'logradouro',
        'numero_endereco' => 'numeroEndereco',
        'complemento_endereco' => 'complementoEndereco',
        'bairro' => 'bairro',
        'cidade' => 'cidade',
        'uf' => 'uf',
        'pais' => 'pais'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id_conta' => 'setIdConta',
        'id_pessoa' => 'setIdPessoa',
        'id_cartao' => 'setIdCartao',
        'id_bandeira' => 'setIdBandeira',
        'id_tipo_cartao' => 'setIdTipoCartao',
        'numero_cartao' => 'setNumeroCartao',
        'nome_plastico' => 'setNomePlastico',
        'cvv2' => 'setCvv2',
        'data_geracao' => 'setDataGeracao',
        'data_validade' => 'setDataValidade',
        'cpf' => 'setCpf',
        'tipo_portador' => 'setTipoPortador',
        'trilha1' => 'setTrilha1',
        'trilha2' => 'setTrilha2',
        'trilha_cvv1' => 'setTrilhaCvv1',
        'trilha_cvv2' => 'setTrilhaCvv2',
        'flag_virtual' => 'setFlagVirtual',
        'nome_bandeira' => 'setNomeBandeira',
        'flag_titular' => 'setFlagTitular',
        'sequencial_cartao' => 'setSequencialCartao',
        'id_status' => 'setIdStatus',
        'descricao_status_cartao' => 'setDescricaoStatusCartao',
        'data_status' => 'setDataStatus',
        'id_estagio' => 'setIdEstagio',
        'descricao_estagio' => 'setDescricaoEstagio',
        'data_estagio' => 'setDataEstagio',
        'numero_bin' => 'setNumeroBin',
        'id_produto' => 'setIdProduto',
        'descricao_produto' => 'setDescricaoProduto',
        'id_status_conta' => 'setIdStatusConta',
        'descricao_status_conta' => 'setDescricaoStatusConta',
        'data_embossing' => 'setDataEmbossing',
        'codigo_desbloqueio' => 'setCodigoDesbloqueio',
        'nome_pessoa' => 'setNomePessoa',
        'tipo_pessoa' => 'setTipoPessoa',
        'data_nascimento' => 'setDataNascimento',
        'id_endereco' => 'setIdEndereco',
        'id_tipo_endereco' => 'setIdTipoEndereco',
        'descricao_tipo_endereco' => 'setDescricaoTipoEndereco',
        'cep' => 'setCep',
        'logradouro' => 'setLogradouro',
        'numero_endereco' => 'setNumeroEndereco',
        'complemento_endereco' => 'setComplementoEndereco',
        'bairro' => 'setBairro',
        'cidade' => 'setCidade',
        'uf' => 'setUf',
        'pais' => 'setPais'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id_conta' => 'getIdConta',
        'id_pessoa' => 'getIdPessoa',
        'id_cartao' => 'getIdCartao',
        'id_bandeira' => 'getIdBandeira',
        'id_tipo_cartao' => 'getIdTipoCartao',
        'numero_cartao' => 'getNumeroCartao',
        'nome_plastico' => 'getNomePlastico',
        'cvv2' => 'getCvv2',
        'data_geracao' => 'getDataGeracao',
        'data_validade' => 'getDataValidade',
        'cpf' => 'getCpf',
        'tipo_portador' => 'getTipoPortador',
        'trilha1' => 'getTrilha1',
        'trilha2' => 'getTrilha2',
        'trilha_cvv1' => 'getTrilhaCvv1',
        'trilha_cvv2' => 'getTrilhaCvv2',
        'flag_virtual' => 'getFlagVirtual',
        'nome_bandeira' => 'getNomeBandeira',
        'flag_titular' => 'getFlagTitular',
        'sequencial_cartao' => 'getSequencialCartao',
        'id_status' => 'getIdStatus',
        'descricao_status_cartao' => 'getDescricaoStatusCartao',
        'data_status' => 'getDataStatus',
        'id_estagio' => 'getIdEstagio',
        'descricao_estagio' => 'getDescricaoEstagio',
        'data_estagio' => 'getDataEstagio',
        'numero_bin' => 'getNumeroBin',
        'id_produto' => 'getIdProduto',
        'descricao_produto' => 'getDescricaoProduto',
        'id_status_conta' => 'getIdStatusConta',
        'descricao_status_conta' => 'getDescricaoStatusConta',
        'data_embossing' => 'getDataEmbossing',
        'codigo_desbloqueio' => 'getCodigoDesbloqueio',
        'nome_pessoa' => 'getNomePessoa',
        'tipo_pessoa' => 'getTipoPessoa',
        'data_nascimento' => 'getDataNascimento',
        'id_endereco' => 'getIdEndereco',
        'id_tipo_endereco' => 'getIdTipoEndereco',
        'descricao_tipo_endereco' => 'getDescricaoTipoEndereco',
        'cep' => 'getCep',
        'logradouro' => 'getLogradouro',
        'numero_endereco' => 'getNumeroEndereco',
        'complemento_endereco' => 'getComplementoEndereco',
        'bairro' => 'getBairro',
        'cidade' => 'getCidade',
        'uf' => 'getUf',
        'pais' => 'getPais'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id_conta O C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Conta (id) a qual o cart\u00C3\u00A3o gerado pertence.
      * @var int
      */
    protected $id_conta;
    
    /**
      * $id_pessoa O C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Pessoa (id) portadora do cart\u00C3\u00A3o gerado.
      * @var int
      */
    protected $id_pessoa;
    
    /**
      * $id_cartao O C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Cart\u00C3\u00A3o (id) que foi gerado.
      * @var int
      */
    protected $id_cartao;
    
    /**
      * $id_bandeira O C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Bandeira (id) a qual o Cart\u00C3\u00A3o pertence, quando bandeirado.
      * @var int
      */
    protected $id_bandeira;
    
    /**
      * $id_tipo_cartao O C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Tipo do Cart\u00C3\u00A3o (id) atribu\u00C3\u00ADdo ao Cart\u00C3\u00A3o.
      * @var int
      */
    protected $id_tipo_cartao;
    
    /**
      * $numero_cartao O n\u00C3\u00BAmero do cart\u00C3\u00A3o.
      * @var string
      */
    protected $numero_cartao;
    
    /**
      * $nome_plastico O nome do Portador do Cart\u00C3\u00A3o.
      * @var string
      */
    protected $nome_plastico;
    
    /**
      * $cvv2 O n\u00C3\u00BAmero do CVV a ser impresso no Cart\u00C3\u00A3o
      * @var string
      */
    protected $cvv2;
    
    /**
      * $data_geracao Apresenta a data de emiss\u00C3\u00A3o do Cart\u00C3\u00A3o.
      * @var string
      */
    protected $data_geracao;
    
    /**
      * $data_validade Apresenta a data de Validade do Cart\u00C3\u00A3o.
      * @var string
      */
    protected $data_validade;
    
    /**
      * $cpf O CPF do Portador do Cart\u00C3\u00A3o.
      * @var string
      */
    protected $cpf;
    
    /**
      * $tipo_portador O tipo do Portador do cart\u00C3\u00A3o, sendo: ('T': Titular, 'A': Adicional).
      * @var string
      */
    protected $tipo_portador;
    
    /**
      * $trilha1 Os dados da Trilha1, seguindo as regras de trilha do emissor.
      * @var string
      */
    protected $trilha1;
    
    /**
      * $trilha2 Os dados da Trilha2, seguindo as regras de trilha do emissor.
      * @var string
      */
    protected $trilha2;
    
    /**
      * $trilha_cvv1 Os dados da TrilhaCVV01, seguindo as regras de trilha do emissor.
      * @var string
      */
    protected $trilha_cvv1;
    
    /**
      * $trilha_cvv2 Os dados da TrilhaCVV02, seguindo as regras de trilha do emissor.
      * @var string
      */
    protected $trilha_cvv2;
    
    /**
      * $flag_virtual O status que informa se o cart\u00C3\u00A3o \u00C3\u00A9 virtual 
      * @var int
      */
    protected $flag_virtual;
    
    /**
      * $nome_bandeira Nome da Bandeira
      * @var string
      */
    protected $nome_bandeira;
    
    /**
      * $flag_titular Flag Indicativo de Titularidade da Conta
      * @var int
      */
    protected $flag_titular;
    
    /**
      * $sequencial_cartao C\u00C3\u00B3digo Sequencial do Cart\u00C3\u00A3o
      * @var int
      */
    protected $sequencial_cartao;
    
    /**
      * $id_status Identificador do Status do Cart\u00C3\u00A3o
      * @var int
      */
    protected $id_status;
    
    /**
      * $descricao_status_cartao Descri\u00C3\u00A7\u00C3\u00A3o do Status do Cart\u00C3\u00A3o
      * @var string
      */
    protected $descricao_status_cartao;
    
    /**
      * $data_status Apresenta a data em que o idStatusCartao atual do cart\u00C3\u00A3o fora aplicado, quando houver.
      * @var string
      */
    protected $data_status;
    
    /**
      * $id_estagio Identificador do Est\u00C3\u00A1gio do Cart\u00C3\u00A3o.
      * @var int
      */
    protected $id_estagio;
    
    /**
      * $descricao_estagio Descri\u00C3\u00A7\u00C3\u00A3o do Estagio do Cart\u00C3\u00A3o.
      * @var string
      */
    protected $descricao_estagio;
    
    /**
      * $data_estagio Apresenta a data em que o idEstagioCartao atual do cart\u00C3\u00A3o fora aplicado, quando houver.
      * @var string
      */
    protected $data_estagio;
    
    /**
      * $numero_bin N\u00C3\u00BAmero do Bin do Cart\u00C3\u00A3o
      * @var string
      */
    protected $numero_bin;
    
    /**
      * $id_produto Identificador do Produto Associado a Conta
      * @var int
      */
    protected $id_produto;
    
    /**
      * $descricao_produto Descri\u00C3\u00A7\u00C3\u00A3o do produto
      * @var string
      */
    protected $descricao_produto;
    
    /**
      * $id_status_conta Identificador do Status da Conta
      * @var int
      */
    protected $id_status_conta;
    
    /**
      * $descricao_status_conta Descri\u00C3\u00A7\u00C3\u00A3o do status da conta
      * @var int
      */
    protected $descricao_status_conta;
    
    /**
      * $data_embossing Data que o cart\u00C3\u00A3o foi embossado
      * @var string
      */
    protected $data_embossing;
    
    /**
      * $codigo_desbloqueio C\u00C3\u00B3digo de desbloqueio do cart\u00C3\u00A3o
      * @var string
      */
    protected $codigo_desbloqueio;
    
    /**
      * $nome_pessoa O 'Nome Completo da PF' ou o 'Nome Completo da Raz\u00C3\u00A3o Social (Nome Empresarial)'.
      * @var string
      */
    protected $nome_pessoa;
    
    /**
      * $tipo_pessoa C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo da Pessoa, sendo: (\"PF\": Pessoa F\u00C3\u00ADsica), (\"PJ\": Pessoa Jur\u00C3\u00ADdica).
      * @var string
      */
    protected $tipo_pessoa;
    
    /**
      * $data_nascimento Data de Nascimento da Pessoa, quando PF, ou a Data de Abertura da Empresa, quando PJ.
      * @var string
      */
    protected $data_nascimento;
    
    /**
      * $id_endereco Identificador do Endere\u00C3\u00A7o do titular do cart\u00C3\u00A3o
      * @var int
      */
    protected $id_endereco;
    
    /**
      * $id_tipo_endereco C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Tipo Endere\u00C3\u00A7o (id)
      * @var int
      */
    protected $id_tipo_endereco;
    
    /**
      * $descricao_tipo_endereco Descri\u00C3\u00A7\u00C3\u00A3o do Tipo de Endere\u00C3\u00A7o
      * @var string
      */
    protected $descricao_tipo_endereco;
    
    /**
      * $cep O C\u00C3\u00B3digo de Endere\u00C3\u00A7amento Postal (CEP) no formaro '58800000'
      * @var string
      */
    protected $cep;
    
    /**
      * $logradouro Nome do Logradouro
      * @var string
      */
    protected $logradouro;
    
    /**
      * $numero_endereco N\u00C3\u00BAmero do endere\u00C3\u00A7o
      * @var string
      */
    protected $numero_endereco;
    
    /**
      * $complemento_endereco Descri\u00C3\u00A7oes complementares referente ao endere\u00C3\u00A7o
      * @var string
      */
    protected $complemento_endereco;
    
    /**
      * $bairro Nome do bairro
      * @var string
      */
    protected $bairro;
    
    /**
      * $cidade Nome do cidade
      * @var string
      */
    protected $cidade;
    
    /**
      * $uf Unidade federativa
      * @var string
      */
    protected $uf;
    
    /**
      * $pais Nome do pa\u00C3\u00ADs
      * @var string
      */
    protected $pais;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id_conta = $data["id_conta"];
            $this->id_pessoa = $data["id_pessoa"];
            $this->id_cartao = $data["id_cartao"];
            $this->id_bandeira = $data["id_bandeira"];
            $this->id_tipo_cartao = $data["id_tipo_cartao"];
            $this->numero_cartao = $data["numero_cartao"];
            $this->nome_plastico = $data["nome_plastico"];
            $this->cvv2 = $data["cvv2"];
            $this->data_geracao = $data["data_geracao"];
            $this->data_validade = $data["data_validade"];
            $this->cpf = $data["cpf"];
            $this->tipo_portador = $data["tipo_portador"];
            $this->trilha1 = $data["trilha1"];
            $this->trilha2 = $data["trilha2"];
            $this->trilha_cvv1 = $data["trilha_cvv1"];
            $this->trilha_cvv2 = $data["trilha_cvv2"];
            $this->flag_virtual = $data["flag_virtual"];
            $this->nome_bandeira = $data["nome_bandeira"];
            $this->flag_titular = $data["flag_titular"];
            $this->sequencial_cartao = $data["sequencial_cartao"];
            $this->id_status = $data["id_status"];
            $this->descricao_status_cartao = $data["descricao_status_cartao"];
            $this->data_status = $data["data_status"];
            $this->id_estagio = $data["id_estagio"];
            $this->descricao_estagio = $data["descricao_estagio"];
            $this->data_estagio = $data["data_estagio"];
            $this->numero_bin = $data["numero_bin"];
            $this->id_produto = $data["id_produto"];
            $this->descricao_produto = $data["descricao_produto"];
            $this->id_status_conta = $data["id_status_conta"];
            $this->descricao_status_conta = $data["descricao_status_conta"];
            $this->data_embossing = $data["data_embossing"];
            $this->codigo_desbloqueio = $data["codigo_desbloqueio"];
            $this->nome_pessoa = $data["nome_pessoa"];
            $this->tipo_pessoa = $data["tipo_pessoa"];
            $this->data_nascimento = $data["data_nascimento"];
            $this->id_endereco = $data["id_endereco"];
            $this->id_tipo_endereco = $data["id_tipo_endereco"];
            $this->descricao_tipo_endereco = $data["descricao_tipo_endereco"];
            $this->cep = $data["cep"];
            $this->logradouro = $data["logradouro"];
            $this->numero_endereco = $data["numero_endereco"];
            $this->complemento_endereco = $data["complemento_endereco"];
            $this->bairro = $data["bairro"];
            $this->cidade = $data["cidade"];
            $this->uf = $data["uf"];
            $this->pais = $data["pais"];
        }
    }
    
    /**
     * Gets id_conta
     * @return int
     */
    public function getIdConta()
    {
        return $this->id_conta;
    }
  
    /**
     * Sets id_conta
     * @param int $id_conta O C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Conta (id) a qual o cart\u00C3\u00A3o gerado pertence.
     * @return $this
     */
    public function setIdConta($id_conta)
    {
        
        $this->id_conta = $id_conta;
        return $this;
    }
    
    /**
     * Gets id_pessoa
     * @return int
     */
    public function getIdPessoa()
    {
        return $this->id_pessoa;
    }
  
    /**
     * Sets id_pessoa
     * @param int $id_pessoa O C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Pessoa (id) portadora do cart\u00C3\u00A3o gerado.
     * @return $this
     */
    public function setIdPessoa($id_pessoa)
    {
        
        $this->id_pessoa = $id_pessoa;
        return $this;
    }
    
    /**
     * Gets id_cartao
     * @return int
     */
    public function getIdCartao()
    {
        return $this->id_cartao;
    }
  
    /**
     * Sets id_cartao
     * @param int $id_cartao O C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Cart\u00C3\u00A3o (id) que foi gerado.
     * @return $this
     */
    public function setIdCartao($id_cartao)
    {
        
        $this->id_cartao = $id_cartao;
        return $this;
    }
    
    /**
     * Gets id_bandeira
     * @return int
     */
    public function getIdBandeira()
    {
        return $this->id_bandeira;
    }
  
    /**
     * Sets id_bandeira
     * @param int $id_bandeira O C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Bandeira (id) a qual o Cart\u00C3\u00A3o pertence, quando bandeirado.
     * @return $this
     */
    public function setIdBandeira($id_bandeira)
    {
        
        $this->id_bandeira = $id_bandeira;
        return $this;
    }
    
    /**
     * Gets id_tipo_cartao
     * @return int
     */
    public function getIdTipoCartao()
    {
        return $this->id_tipo_cartao;
    }
  
    /**
     * Sets id_tipo_cartao
     * @param int $id_tipo_cartao O C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Tipo do Cart\u00C3\u00A3o (id) atribu\u00C3\u00ADdo ao Cart\u00C3\u00A3o.
     * @return $this
     */
    public function setIdTipoCartao($id_tipo_cartao)
    {
        
        $this->id_tipo_cartao = $id_tipo_cartao;
        return $this;
    }
    
    /**
     * Gets numero_cartao
     * @return string
     */
    public function getNumeroCartao()
    {
        return $this->numero_cartao;
    }
  
    /**
     * Sets numero_cartao
     * @param string $numero_cartao O n\u00C3\u00BAmero do cart\u00C3\u00A3o.
     * @return $this
     */
    public function setNumeroCartao($numero_cartao)
    {
        
        $this->numero_cartao = $numero_cartao;
        return $this;
    }
    
    /**
     * Gets nome_plastico
     * @return string
     */
    public function getNomePlastico()
    {
        return $this->nome_plastico;
    }
  
    /**
     * Sets nome_plastico
     * @param string $nome_plastico O nome do Portador do Cart\u00C3\u00A3o.
     * @return $this
     */
    public function setNomePlastico($nome_plastico)
    {
        
        $this->nome_plastico = $nome_plastico;
        return $this;
    }
    
    /**
     * Gets cvv2
     * @return string
     */
    public function getCvv2()
    {
        return $this->cvv2;
    }
  
    /**
     * Sets cvv2
     * @param string $cvv2 O n\u00C3\u00BAmero do CVV a ser impresso no Cart\u00C3\u00A3o
     * @return $this
     */
    public function setCvv2($cvv2)
    {
        
        $this->cvv2 = $cvv2;
        return $this;
    }
    
    /**
     * Gets data_geracao
     * @return string
     */
    public function getDataGeracao()
    {
        return $this->data_geracao;
    }
  
    /**
     * Sets data_geracao
     * @param string $data_geracao Apresenta a data de emiss\u00C3\u00A3o do Cart\u00C3\u00A3o.
     * @return $this
     */
    public function setDataGeracao($data_geracao)
    {
        
        $this->data_geracao = $data_geracao;
        return $this;
    }
    
    /**
     * Gets data_validade
     * @return string
     */
    public function getDataValidade()
    {
        return $this->data_validade;
    }
  
    /**
     * Sets data_validade
     * @param string $data_validade Apresenta a data de Validade do Cart\u00C3\u00A3o.
     * @return $this
     */
    public function setDataValidade($data_validade)
    {
        
        $this->data_validade = $data_validade;
        return $this;
    }
    
    /**
     * Gets cpf
     * @return string
     */
    public function getCpf()
    {
        return $this->cpf;
    }
  
    /**
     * Sets cpf
     * @param string $cpf O CPF do Portador do Cart\u00C3\u00A3o.
     * @return $this
     */
    public function setCpf($cpf)
    {
        
        $this->cpf = $cpf;
        return $this;
    }
    
    /**
     * Gets tipo_portador
     * @return string
     */
    public function getTipoPortador()
    {
        return $this->tipo_portador;
    }
  
    /**
     * Sets tipo_portador
     * @param string $tipo_portador O tipo do Portador do cart\u00C3\u00A3o, sendo: ('T': Titular, 'A': Adicional).
     * @return $this
     */
    public function setTipoPortador($tipo_portador)
    {
        
        $this->tipo_portador = $tipo_portador;
        return $this;
    }
    
    /**
     * Gets trilha1
     * @return string
     */
    public function getTrilha1()
    {
        return $this->trilha1;
    }
  
    /**
     * Sets trilha1
     * @param string $trilha1 Os dados da Trilha1, seguindo as regras de trilha do emissor.
     * @return $this
     */
    public function setTrilha1($trilha1)
    {
        
        $this->trilha1 = $trilha1;
        return $this;
    }
    
    /**
     * Gets trilha2
     * @return string
     */
    public function getTrilha2()
    {
        return $this->trilha2;
    }
  
    /**
     * Sets trilha2
     * @param string $trilha2 Os dados da Trilha2, seguindo as regras de trilha do emissor.
     * @return $this
     */
    public function setTrilha2($trilha2)
    {
        
        $this->trilha2 = $trilha2;
        return $this;
    }
    
    /**
     * Gets trilha_cvv1
     * @return string
     */
    public function getTrilhaCvv1()
    {
        return $this->trilha_cvv1;
    }
  
    /**
     * Sets trilha_cvv1
     * @param string $trilha_cvv1 Os dados da TrilhaCVV01, seguindo as regras de trilha do emissor.
     * @return $this
     */
    public function setTrilhaCvv1($trilha_cvv1)
    {
        
        $this->trilha_cvv1 = $trilha_cvv1;
        return $this;
    }
    
    /**
     * Gets trilha_cvv2
     * @return string
     */
    public function getTrilhaCvv2()
    {
        return $this->trilha_cvv2;
    }
  
    /**
     * Sets trilha_cvv2
     * @param string $trilha_cvv2 Os dados da TrilhaCVV02, seguindo as regras de trilha do emissor.
     * @return $this
     */
    public function setTrilhaCvv2($trilha_cvv2)
    {
        
        $this->trilha_cvv2 = $trilha_cvv2;
        return $this;
    }
    
    /**
     * Gets flag_virtual
     * @return int
     */
    public function getFlagVirtual()
    {
        return $this->flag_virtual;
    }
  
    /**
     * Sets flag_virtual
     * @param int $flag_virtual O status que informa se o cart\u00C3\u00A3o \u00C3\u00A9 virtual 
     * @return $this
     */
    public function setFlagVirtual($flag_virtual)
    {
        
        $this->flag_virtual = $flag_virtual;
        return $this;
    }
    
    /**
     * Gets nome_bandeira
     * @return string
     */
    public function getNomeBandeira()
    {
        return $this->nome_bandeira;
    }
  
    /**
     * Sets nome_bandeira
     * @param string $nome_bandeira Nome da Bandeira
     * @return $this
     */
    public function setNomeBandeira($nome_bandeira)
    {
        
        $this->nome_bandeira = $nome_bandeira;
        return $this;
    }
    
    /**
     * Gets flag_titular
     * @return int
     */
    public function getFlagTitular()
    {
        return $this->flag_titular;
    }
  
    /**
     * Sets flag_titular
     * @param int $flag_titular Flag Indicativo de Titularidade da Conta
     * @return $this
     */
    public function setFlagTitular($flag_titular)
    {
        
        $this->flag_titular = $flag_titular;
        return $this;
    }
    
    /**
     * Gets sequencial_cartao
     * @return int
     */
    public function getSequencialCartao()
    {
        return $this->sequencial_cartao;
    }
  
    /**
     * Sets sequencial_cartao
     * @param int $sequencial_cartao C\u00C3\u00B3digo Sequencial do Cart\u00C3\u00A3o
     * @return $this
     */
    public function setSequencialCartao($sequencial_cartao)
    {
        
        $this->sequencial_cartao = $sequencial_cartao;
        return $this;
    }
    
    /**
     * Gets id_status
     * @return int
     */
    public function getIdStatus()
    {
        return $this->id_status;
    }
  
    /**
     * Sets id_status
     * @param int $id_status Identificador do Status do Cart\u00C3\u00A3o
     * @return $this
     */
    public function setIdStatus($id_status)
    {
        
        $this->id_status = $id_status;
        return $this;
    }
    
    /**
     * Gets descricao_status_cartao
     * @return string
     */
    public function getDescricaoStatusCartao()
    {
        return $this->descricao_status_cartao;
    }
  
    /**
     * Sets descricao_status_cartao
     * @param string $descricao_status_cartao Descri\u00C3\u00A7\u00C3\u00A3o do Status do Cart\u00C3\u00A3o
     * @return $this
     */
    public function setDescricaoStatusCartao($descricao_status_cartao)
    {
        
        $this->descricao_status_cartao = $descricao_status_cartao;
        return $this;
    }
    
    /**
     * Gets data_status
     * @return string
     */
    public function getDataStatus()
    {
        return $this->data_status;
    }
  
    /**
     * Sets data_status
     * @param string $data_status Apresenta a data em que o idStatusCartao atual do cart\u00C3\u00A3o fora aplicado, quando houver.
     * @return $this
     */
    public function setDataStatus($data_status)
    {
        
        $this->data_status = $data_status;
        return $this;
    }
    
    /**
     * Gets id_estagio
     * @return int
     */
    public function getIdEstagio()
    {
        return $this->id_estagio;
    }
  
    /**
     * Sets id_estagio
     * @param int $id_estagio Identificador do Est\u00C3\u00A1gio do Cart\u00C3\u00A3o.
     * @return $this
     */
    public function setIdEstagio($id_estagio)
    {
        
        $this->id_estagio = $id_estagio;
        return $this;
    }
    
    /**
     * Gets descricao_estagio
     * @return string
     */
    public function getDescricaoEstagio()
    {
        return $this->descricao_estagio;
    }
  
    /**
     * Sets descricao_estagio
     * @param string $descricao_estagio Descri\u00C3\u00A7\u00C3\u00A3o do Estagio do Cart\u00C3\u00A3o.
     * @return $this
     */
    public function setDescricaoEstagio($descricao_estagio)
    {
        
        $this->descricao_estagio = $descricao_estagio;
        return $this;
    }
    
    /**
     * Gets data_estagio
     * @return string
     */
    public function getDataEstagio()
    {
        return $this->data_estagio;
    }
  
    /**
     * Sets data_estagio
     * @param string $data_estagio Apresenta a data em que o idEstagioCartao atual do cart\u00C3\u00A3o fora aplicado, quando houver.
     * @return $this
     */
    public function setDataEstagio($data_estagio)
    {
        
        $this->data_estagio = $data_estagio;
        return $this;
    }
    
    /**
     * Gets numero_bin
     * @return string
     */
    public function getNumeroBin()
    {
        return $this->numero_bin;
    }
  
    /**
     * Sets numero_bin
     * @param string $numero_bin N\u00C3\u00BAmero do Bin do Cart\u00C3\u00A3o
     * @return $this
     */
    public function setNumeroBin($numero_bin)
    {
        
        $this->numero_bin = $numero_bin;
        return $this;
    }
    
    /**
     * Gets id_produto
     * @return int
     */
    public function getIdProduto()
    {
        return $this->id_produto;
    }
  
    /**
     * Sets id_produto
     * @param int $id_produto Identificador do Produto Associado a Conta
     * @return $this
     */
    public function setIdProduto($id_produto)
    {
        
        $this->id_produto = $id_produto;
        return $this;
    }
    
    /**
     * Gets descricao_produto
     * @return string
     */
    public function getDescricaoProduto()
    {
        return $this->descricao_produto;
    }
  
    /**
     * Sets descricao_produto
     * @param string $descricao_produto Descri\u00C3\u00A7\u00C3\u00A3o do produto
     * @return $this
     */
    public function setDescricaoProduto($descricao_produto)
    {
        
        $this->descricao_produto = $descricao_produto;
        return $this;
    }
    
    /**
     * Gets id_status_conta
     * @return int
     */
    public function getIdStatusConta()
    {
        return $this->id_status_conta;
    }
  
    /**
     * Sets id_status_conta
     * @param int $id_status_conta Identificador do Status da Conta
     * @return $this
     */
    public function setIdStatusConta($id_status_conta)
    {
        
        $this->id_status_conta = $id_status_conta;
        return $this;
    }
    
    /**
     * Gets descricao_status_conta
     * @return int
     */
    public function getDescricaoStatusConta()
    {
        return $this->descricao_status_conta;
    }
  
    /**
     * Sets descricao_status_conta
     * @param int $descricao_status_conta Descri\u00C3\u00A7\u00C3\u00A3o do status da conta
     * @return $this
     */
    public function setDescricaoStatusConta($descricao_status_conta)
    {
        
        $this->descricao_status_conta = $descricao_status_conta;
        return $this;
    }
    
    /**
     * Gets data_embossing
     * @return string
     */
    public function getDataEmbossing()
    {
        return $this->data_embossing;
    }
  
    /**
     * Sets data_embossing
     * @param string $data_embossing Data que o cart\u00C3\u00A3o foi embossado
     * @return $this
     */
    public function setDataEmbossing($data_embossing)
    {
        
        $this->data_embossing = $data_embossing;
        return $this;
    }
    
    /**
     * Gets codigo_desbloqueio
     * @return string
     */
    public function getCodigoDesbloqueio()
    {
        return $this->codigo_desbloqueio;
    }
  
    /**
     * Sets codigo_desbloqueio
     * @param string $codigo_desbloqueio C\u00C3\u00B3digo de desbloqueio do cart\u00C3\u00A3o
     * @return $this
     */
    public function setCodigoDesbloqueio($codigo_desbloqueio)
    {
        
        $this->codigo_desbloqueio = $codigo_desbloqueio;
        return $this;
    }
    
    /**
     * Gets nome_pessoa
     * @return string
     */
    public function getNomePessoa()
    {
        return $this->nome_pessoa;
    }
  
    /**
     * Sets nome_pessoa
     * @param string $nome_pessoa O 'Nome Completo da PF' ou o 'Nome Completo da Raz\u00C3\u00A3o Social (Nome Empresarial)'.
     * @return $this
     */
    public function setNomePessoa($nome_pessoa)
    {
        
        $this->nome_pessoa = $nome_pessoa;
        return $this;
    }
    
    /**
     * Gets tipo_pessoa
     * @return string
     */
    public function getTipoPessoa()
    {
        return $this->tipo_pessoa;
    }
  
    /**
     * Sets tipo_pessoa
     * @param string $tipo_pessoa C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo da Pessoa, sendo: (\"PF\": Pessoa F\u00C3\u00ADsica), (\"PJ\": Pessoa Jur\u00C3\u00ADdica).
     * @return $this
     */
    public function setTipoPessoa($tipo_pessoa)
    {
        
        $this->tipo_pessoa = $tipo_pessoa;
        return $this;
    }
    
    /**
     * Gets data_nascimento
     * @return string
     */
    public function getDataNascimento()
    {
        return $this->data_nascimento;
    }
  
    /**
     * Sets data_nascimento
     * @param string $data_nascimento Data de Nascimento da Pessoa, quando PF, ou a Data de Abertura da Empresa, quando PJ.
     * @return $this
     */
    public function setDataNascimento($data_nascimento)
    {
        
        $this->data_nascimento = $data_nascimento;
        return $this;
    }
    
    /**
     * Gets id_endereco
     * @return int
     */
    public function getIdEndereco()
    {
        return $this->id_endereco;
    }
  
    /**
     * Sets id_endereco
     * @param int $id_endereco Identificador do Endere\u00C3\u00A7o do titular do cart\u00C3\u00A3o
     * @return $this
     */
    public function setIdEndereco($id_endereco)
    {
        
        $this->id_endereco = $id_endereco;
        return $this;
    }
    
    /**
     * Gets id_tipo_endereco
     * @return int
     */
    public function getIdTipoEndereco()
    {
        return $this->id_tipo_endereco;
    }
  
    /**
     * Sets id_tipo_endereco
     * @param int $id_tipo_endereco C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Tipo Endere\u00C3\u00A7o (id)
     * @return $this
     */
    public function setIdTipoEndereco($id_tipo_endereco)
    {
        
        $this->id_tipo_endereco = $id_tipo_endereco;
        return $this;
    }
    
    /**
     * Gets descricao_tipo_endereco
     * @return string
     */
    public function getDescricaoTipoEndereco()
    {
        return $this->descricao_tipo_endereco;
    }
  
    /**
     * Sets descricao_tipo_endereco
     * @param string $descricao_tipo_endereco Descri\u00C3\u00A7\u00C3\u00A3o do Tipo de Endere\u00C3\u00A7o
     * @return $this
     */
    public function setDescricaoTipoEndereco($descricao_tipo_endereco)
    {
        
        $this->descricao_tipo_endereco = $descricao_tipo_endereco;
        return $this;
    }
    
    /**
     * Gets cep
     * @return string
     */
    public function getCep()
    {
        return $this->cep;
    }
  
    /**
     * Sets cep
     * @param string $cep O C\u00C3\u00B3digo de Endere\u00C3\u00A7amento Postal (CEP) no formaro '58800000'
     * @return $this
     */
    public function setCep($cep)
    {
        
        $this->cep = $cep;
        return $this;
    }
    
    /**
     * Gets logradouro
     * @return string
     */
    public function getLogradouro()
    {
        return $this->logradouro;
    }
  
    /**
     * Sets logradouro
     * @param string $logradouro Nome do Logradouro
     * @return $this
     */
    public function setLogradouro($logradouro)
    {
        
        $this->logradouro = $logradouro;
        return $this;
    }
    
    /**
     * Gets numero_endereco
     * @return string
     */
    public function getNumeroEndereco()
    {
        return $this->numero_endereco;
    }
  
    /**
     * Sets numero_endereco
     * @param string $numero_endereco N\u00C3\u00BAmero do endere\u00C3\u00A7o
     * @return $this
     */
    public function setNumeroEndereco($numero_endereco)
    {
        
        $this->numero_endereco = $numero_endereco;
        return $this;
    }
    
    /**
     * Gets complemento_endereco
     * @return string
     */
    public function getComplementoEndereco()
    {
        return $this->complemento_endereco;
    }
  
    /**
     * Sets complemento_endereco
     * @param string $complemento_endereco Descri\u00C3\u00A7oes complementares referente ao endere\u00C3\u00A7o
     * @return $this
     */
    public function setComplementoEndereco($complemento_endereco)
    {
        
        $this->complemento_endereco = $complemento_endereco;
        return $this;
    }
    
    /**
     * Gets bairro
     * @return string
     */
    public function getBairro()
    {
        return $this->bairro;
    }
  
    /**
     * Sets bairro
     * @param string $bairro Nome do bairro
     * @return $this
     */
    public function setBairro($bairro)
    {
        
        $this->bairro = $bairro;
        return $this;
    }
    
    /**
     * Gets cidade
     * @return string
     */
    public function getCidade()
    {
        return $this->cidade;
    }
  
    /**
     * Sets cidade
     * @param string $cidade Nome do cidade
     * @return $this
     */
    public function setCidade($cidade)
    {
        
        $this->cidade = $cidade;
        return $this;
    }
    
    /**
     * Gets uf
     * @return string
     */
    public function getUf()
    {
        return $this->uf;
    }
  
    /**
     * Sets uf
     * @param string $uf Unidade federativa
     * @return $this
     */
    public function setUf($uf)
    {
        
        $this->uf = $uf;
        return $this;
    }
    
    /**
     * Gets pais
     * @return string
     */
    public function getPais()
    {
        return $this->pais;
    }
  
    /**
     * Sets pais
     * @param string $pais Nome do pa\u00C3\u00ADs
     * @return $this
     */
    public function setPais($pais)
    {
        
        $this->pais = $pais;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
