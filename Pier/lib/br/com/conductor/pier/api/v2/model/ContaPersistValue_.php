<?php
/**
 * ContaPersistValue_
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * ContaPersistValue_ Class Doc Comment
 *
 * @category    Class
 * @description {{{conta_persist_description}}}
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ContaPersistValue_ implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id_pessoa' => 'int',
        'id_origem_comercial' => 'int',
        'id_produto' => 'int',
        'dia_vencimento' => 'int',
        'valor_renda' => 'Number',
        'canal_entrada' => 'string',
        'valor_pontuacao' => 'int',
        'id_endereco_correspondencia' => 'int',
        'limite_global' => 'Number',
        'limite_maximo' => 'Number',
        'limite_parcelas' => 'Number',
        'limite_consignado' => 'Number',
        'flag_fatura_por_email' => 'int'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id_pessoa' => 'idPessoa',
        'id_origem_comercial' => 'idOrigemComercial',
        'id_produto' => 'idProduto',
        'dia_vencimento' => 'diaVencimento',
        'valor_renda' => 'valorRenda',
        'canal_entrada' => 'canalEntrada',
        'valor_pontuacao' => 'valorPontuacao',
        'id_endereco_correspondencia' => 'idEnderecoCorrespondencia',
        'limite_global' => 'limiteGlobal',
        'limite_maximo' => 'limiteMaximo',
        'limite_parcelas' => 'limiteParcelas',
        'limite_consignado' => 'limiteConsignado',
        'flag_fatura_por_email' => 'flagFaturaPorEmail'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id_pessoa' => 'setIdPessoa',
        'id_origem_comercial' => 'setIdOrigemComercial',
        'id_produto' => 'setIdProduto',
        'dia_vencimento' => 'setDiaVencimento',
        'valor_renda' => 'setValorRenda',
        'canal_entrada' => 'setCanalEntrada',
        'valor_pontuacao' => 'setValorPontuacao',
        'id_endereco_correspondencia' => 'setIdEnderecoCorrespondencia',
        'limite_global' => 'setLimiteGlobal',
        'limite_maximo' => 'setLimiteMaximo',
        'limite_parcelas' => 'setLimiteParcelas',
        'limite_consignado' => 'setLimiteConsignado',
        'flag_fatura_por_email' => 'setFlagFaturaPorEmail'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id_pessoa' => 'getIdPessoa',
        'id_origem_comercial' => 'getIdOrigemComercial',
        'id_produto' => 'getIdProduto',
        'dia_vencimento' => 'getDiaVencimento',
        'valor_renda' => 'getValorRenda',
        'canal_entrada' => 'getCanalEntrada',
        'valor_pontuacao' => 'getValorPontuacao',
        'id_endereco_correspondencia' => 'getIdEnderecoCorrespondencia',
        'limite_global' => 'getLimiteGlobal',
        'limite_maximo' => 'getLimiteMaximo',
        'limite_parcelas' => 'getLimiteParcelas',
        'limite_consignado' => 'getLimiteConsignado',
        'flag_fatura_por_email' => 'getFlagFaturaPorEmail'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id_pessoa {{{conta_persist_id_pessoa_value}}}
      * @var int
      */
    protected $id_pessoa;
    
    /**
      * $id_origem_comercial {{{conta_persist_id_origem_comercial_value}}}
      * @var int
      */
    protected $id_origem_comercial;
    
    /**
      * $id_produto {{{conta_persist_id_produto_value}}}
      * @var int
      */
    protected $id_produto;
    
    /**
      * $dia_vencimento {{{conta_persist_dia_vencimento_value}}}
      * @var int
      */
    protected $dia_vencimento;
    
    /**
      * $valor_renda {{{conta_persist_valor_renda_value}}}
      * @var Number
      */
    protected $valor_renda;
    
    /**
      * $canal_entrada {{{conta_persist_canal_entrada_value}}}
      * @var string
      */
    protected $canal_entrada;
    
    /**
      * $valor_pontuacao {{{conta_persist_valor_pontuacao_value}}}
      * @var int
      */
    protected $valor_pontuacao;
    
    /**
      * $id_endereco_correspondencia {{{conta_persist_id_endereco_correspondencia_value}}}
      * @var int
      */
    protected $id_endereco_correspondencia;
    
    /**
      * $limite_global {{{conta_persist_limite_global_value}}}
      * @var Number
      */
    protected $limite_global;
    
    /**
      * $limite_maximo {{{conta_persist_limite_maximo_value}}}
      * @var Number
      */
    protected $limite_maximo;
    
    /**
      * $limite_parcelas {{{conta_persist_limite_parcelas_value}}}
      * @var Number
      */
    protected $limite_parcelas;
    
    /**
      * $limite_consignado {{{conta_persist_limite_consignado_value}}}
      * @var Number
      */
    protected $limite_consignado;
    
    /**
      * $flag_fatura_por_email {{{conta_persist_flag_fatura_por_email_value}}}
      * @var int
      */
    protected $flag_fatura_por_email;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id_pessoa = $data["id_pessoa"];
            $this->id_origem_comercial = $data["id_origem_comercial"];
            $this->id_produto = $data["id_produto"];
            $this->dia_vencimento = $data["dia_vencimento"];
            $this->valor_renda = $data["valor_renda"];
            $this->canal_entrada = $data["canal_entrada"];
            $this->valor_pontuacao = $data["valor_pontuacao"];
            $this->id_endereco_correspondencia = $data["id_endereco_correspondencia"];
            $this->limite_global = $data["limite_global"];
            $this->limite_maximo = $data["limite_maximo"];
            $this->limite_parcelas = $data["limite_parcelas"];
            $this->limite_consignado = $data["limite_consignado"];
            $this->flag_fatura_por_email = $data["flag_fatura_por_email"];
        }
    }
    
    /**
     * Gets id_pessoa
     * @return int
     */
    public function getIdPessoa()
    {
        return $this->id_pessoa;
    }
  
    /**
     * Sets id_pessoa
     * @param int $id_pessoa {{{conta_persist_id_pessoa_value}}}
     * @return $this
     */
    public function setIdPessoa($id_pessoa)
    {
        
        $this->id_pessoa = $id_pessoa;
        return $this;
    }
    
    /**
     * Gets id_origem_comercial
     * @return int
     */
    public function getIdOrigemComercial()
    {
        return $this->id_origem_comercial;
    }
  
    /**
     * Sets id_origem_comercial
     * @param int $id_origem_comercial {{{conta_persist_id_origem_comercial_value}}}
     * @return $this
     */
    public function setIdOrigemComercial($id_origem_comercial)
    {
        
        $this->id_origem_comercial = $id_origem_comercial;
        return $this;
    }
    
    /**
     * Gets id_produto
     * @return int
     */
    public function getIdProduto()
    {
        return $this->id_produto;
    }
  
    /**
     * Sets id_produto
     * @param int $id_produto {{{conta_persist_id_produto_value}}}
     * @return $this
     */
    public function setIdProduto($id_produto)
    {
        
        $this->id_produto = $id_produto;
        return $this;
    }
    
    /**
     * Gets dia_vencimento
     * @return int
     */
    public function getDiaVencimento()
    {
        return $this->dia_vencimento;
    }
  
    /**
     * Sets dia_vencimento
     * @param int $dia_vencimento {{{conta_persist_dia_vencimento_value}}}
     * @return $this
     */
    public function setDiaVencimento($dia_vencimento)
    {
        
        $this->dia_vencimento = $dia_vencimento;
        return $this;
    }
    
    /**
     * Gets valor_renda
     * @return Number
     */
    public function getValorRenda()
    {
        return $this->valor_renda;
    }
  
    /**
     * Sets valor_renda
     * @param Number $valor_renda {{{conta_persist_valor_renda_value}}}
     * @return $this
     */
    public function setValorRenda($valor_renda)
    {
        
        $this->valor_renda = $valor_renda;
        return $this;
    }
    
    /**
     * Gets canal_entrada
     * @return string
     */
    public function getCanalEntrada()
    {
        return $this->canal_entrada;
    }
  
    /**
     * Sets canal_entrada
     * @param string $canal_entrada {{{conta_persist_canal_entrada_value}}}
     * @return $this
     */
    public function setCanalEntrada($canal_entrada)
    {
        
        $this->canal_entrada = $canal_entrada;
        return $this;
    }
    
    /**
     * Gets valor_pontuacao
     * @return int
     */
    public function getValorPontuacao()
    {
        return $this->valor_pontuacao;
    }
  
    /**
     * Sets valor_pontuacao
     * @param int $valor_pontuacao {{{conta_persist_valor_pontuacao_value}}}
     * @return $this
     */
    public function setValorPontuacao($valor_pontuacao)
    {
        
        $this->valor_pontuacao = $valor_pontuacao;
        return $this;
    }
    
    /**
     * Gets id_endereco_correspondencia
     * @return int
     */
    public function getIdEnderecoCorrespondencia()
    {
        return $this->id_endereco_correspondencia;
    }
  
    /**
     * Sets id_endereco_correspondencia
     * @param int $id_endereco_correspondencia {{{conta_persist_id_endereco_correspondencia_value}}}
     * @return $this
     */
    public function setIdEnderecoCorrespondencia($id_endereco_correspondencia)
    {
        
        $this->id_endereco_correspondencia = $id_endereco_correspondencia;
        return $this;
    }
    
    /**
     * Gets limite_global
     * @return Number
     */
    public function getLimiteGlobal()
    {
        return $this->limite_global;
    }
  
    /**
     * Sets limite_global
     * @param Number $limite_global {{{conta_persist_limite_global_value}}}
     * @return $this
     */
    public function setLimiteGlobal($limite_global)
    {
        
        $this->limite_global = $limite_global;
        return $this;
    }
    
    /**
     * Gets limite_maximo
     * @return Number
     */
    public function getLimiteMaximo()
    {
        return $this->limite_maximo;
    }
  
    /**
     * Sets limite_maximo
     * @param Number $limite_maximo {{{conta_persist_limite_maximo_value}}}
     * @return $this
     */
    public function setLimiteMaximo($limite_maximo)
    {
        
        $this->limite_maximo = $limite_maximo;
        return $this;
    }
    
    /**
     * Gets limite_parcelas
     * @return Number
     */
    public function getLimiteParcelas()
    {
        return $this->limite_parcelas;
    }
  
    /**
     * Sets limite_parcelas
     * @param Number $limite_parcelas {{{conta_persist_limite_parcelas_value}}}
     * @return $this
     */
    public function setLimiteParcelas($limite_parcelas)
    {
        
        $this->limite_parcelas = $limite_parcelas;
        return $this;
    }
    
    /**
     * Gets limite_consignado
     * @return Number
     */
    public function getLimiteConsignado()
    {
        return $this->limite_consignado;
    }
  
    /**
     * Sets limite_consignado
     * @param Number $limite_consignado {{{conta_persist_limite_consignado_value}}}
     * @return $this
     */
    public function setLimiteConsignado($limite_consignado)
    {
        
        $this->limite_consignado = $limite_consignado;
        return $this;
    }
    
    /**
     * Gets flag_fatura_por_email
     * @return int
     */
    public function getFlagFaturaPorEmail()
    {
        return $this->flag_fatura_por_email;
    }
  
    /**
     * Sets flag_fatura_por_email
     * @param int $flag_fatura_por_email {{{conta_persist_flag_fatura_por_email_value}}}
     * @return $this
     */
    public function setFlagFaturaPorEmail($flag_fatura_por_email)
    {
        
        $this->flag_fatura_por_email = $flag_fatura_por_email;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
