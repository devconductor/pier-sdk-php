<?php
/**
 * VinculoEstabelecimentoAdquirenteResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * VinculoEstabelecimentoAdquirenteResponse Class Doc Comment
 *
 * @category    Class
 * @description Objeto de resposta do VinculoEstabelecimentoAdquirente
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class VinculoEstabelecimentoAdquirenteResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'id_estabelecimento' => 'int',
        'id_adquirente' => 'int',
        'codigo_estabelecimento_adquirente' => 'string',
        'data_hora_cadastro' => 'string',
        'mensagem' => 'string',
        'status' => 'int'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'id_estabelecimento' => 'idEstabelecimento',
        'id_adquirente' => 'idAdquirente',
        'codigo_estabelecimento_adquirente' => 'codigoEstabelecimentoAdquirente',
        'data_hora_cadastro' => 'dataHoraCadastro',
        'mensagem' => 'mensagem',
        'status' => 'status'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'id_estabelecimento' => 'setIdEstabelecimento',
        'id_adquirente' => 'setIdAdquirente',
        'codigo_estabelecimento_adquirente' => 'setCodigoEstabelecimentoAdquirente',
        'data_hora_cadastro' => 'setDataHoraCadastro',
        'mensagem' => 'setMensagem',
        'status' => 'setStatus'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'id_estabelecimento' => 'getIdEstabelecimento',
        'id_adquirente' => 'getIdAdquirente',
        'codigo_estabelecimento_adquirente' => 'getCodigoEstabelecimentoAdquirente',
        'data_hora_cadastro' => 'getDataHoraCadastro',
        'mensagem' => 'getMensagem',
        'status' => 'getStatus'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do VinculoEstabelecimentoAdquirente (id).
      * @var int
      */
    protected $id;
    
    /**
      * $id_estabelecimento C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Estabelecimento (id).
      * @var int
      */
    protected $id_estabelecimento;
    
    /**
      * $id_adquirente C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Adquirente (id).
      * @var int
      */
    protected $id_adquirente;
    
    /**
      * $codigo_estabelecimento_adquirente C\u00C3\u00B3digo do v\u00C3\u00ADnculo entre o estabelecimento e o adquirente.
      * @var string
      */
    protected $codigo_estabelecimento_adquirente;
    
    /**
      * $data_hora_cadastro Data de cadastro do v\u00C3\u00ADnculo.
      * @var string
      */
    protected $data_hora_cadastro;
    
    /**
      * $mensagem Data de cadastro do v\u00C3\u00ADnculo.
      * @var string
      */
    protected $mensagem;
    
    /**
      * $status Data de cadastro do v\u00C3\u00ADnculo.
      * @var int
      */
    protected $status;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->id_estabelecimento = $data["id_estabelecimento"];
            $this->id_adquirente = $data["id_adquirente"];
            $this->codigo_estabelecimento_adquirente = $data["codigo_estabelecimento_adquirente"];
            $this->data_hora_cadastro = $data["data_hora_cadastro"];
            $this->mensagem = $data["mensagem"];
            $this->status = $data["status"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do VinculoEstabelecimentoAdquirente (id).
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets id_estabelecimento
     * @return int
     */
    public function getIdEstabelecimento()
    {
        return $this->id_estabelecimento;
    }
  
    /**
     * Sets id_estabelecimento
     * @param int $id_estabelecimento C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Estabelecimento (id).
     * @return $this
     */
    public function setIdEstabelecimento($id_estabelecimento)
    {
        
        $this->id_estabelecimento = $id_estabelecimento;
        return $this;
    }
    
    /**
     * Gets id_adquirente
     * @return int
     */
    public function getIdAdquirente()
    {
        return $this->id_adquirente;
    }
  
    /**
     * Sets id_adquirente
     * @param int $id_adquirente C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Adquirente (id).
     * @return $this
     */
    public function setIdAdquirente($id_adquirente)
    {
        
        $this->id_adquirente = $id_adquirente;
        return $this;
    }
    
    /**
     * Gets codigo_estabelecimento_adquirente
     * @return string
     */
    public function getCodigoEstabelecimentoAdquirente()
    {
        return $this->codigo_estabelecimento_adquirente;
    }
  
    /**
     * Sets codigo_estabelecimento_adquirente
     * @param string $codigo_estabelecimento_adquirente C\u00C3\u00B3digo do v\u00C3\u00ADnculo entre o estabelecimento e o adquirente.
     * @return $this
     */
    public function setCodigoEstabelecimentoAdquirente($codigo_estabelecimento_adquirente)
    {
        
        $this->codigo_estabelecimento_adquirente = $codigo_estabelecimento_adquirente;
        return $this;
    }
    
    /**
     * Gets data_hora_cadastro
     * @return string
     */
    public function getDataHoraCadastro()
    {
        return $this->data_hora_cadastro;
    }
  
    /**
     * Sets data_hora_cadastro
     * @param string $data_hora_cadastro Data de cadastro do v\u00C3\u00ADnculo.
     * @return $this
     */
    public function setDataHoraCadastro($data_hora_cadastro)
    {
        
        $this->data_hora_cadastro = $data_hora_cadastro;
        return $this;
    }
    
    /**
     * Gets mensagem
     * @return string
     */
    public function getMensagem()
    {
        return $this->mensagem;
    }
  
    /**
     * Sets mensagem
     * @param string $mensagem Data de cadastro do v\u00C3\u00ADnculo.
     * @return $this
     */
    public function setMensagem($mensagem)
    {
        
        $this->mensagem = $mensagem;
        return $this;
    }
    
    /**
     * Gets status
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param int $status Data de cadastro do v\u00C3\u00ADnculo.
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
