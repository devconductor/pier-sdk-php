<?php
/**
 * TransferenciaDetalheResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * TransferenciaDetalheResponse Class Doc Comment
 *
 * @category    Class
 * @description {{{transferencia_detalhe_response_description}}}
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class TransferenciaDetalheResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'data_transferencia' => 'string',
        'id_conta_origem' => 'int',
        'nome_pessoa_origem' => 'string',
        'id_conta_destino' => 'int',
        'nome_pessoa_destino' => 'string',
        'valor_transferencia' => 'Number',
        'valor_tarifa' => 'Number'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'data_transferencia' => 'dataTransferencia',
        'id_conta_origem' => 'idContaOrigem',
        'nome_pessoa_origem' => 'nomePessoaOrigem',
        'id_conta_destino' => 'idContaDestino',
        'nome_pessoa_destino' => 'nomePessoaDestino',
        'valor_transferencia' => 'valorTransferencia',
        'valor_tarifa' => 'valorTarifa'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'data_transferencia' => 'setDataTransferencia',
        'id_conta_origem' => 'setIdContaOrigem',
        'nome_pessoa_origem' => 'setNomePessoaOrigem',
        'id_conta_destino' => 'setIdContaDestino',
        'nome_pessoa_destino' => 'setNomePessoaDestino',
        'valor_transferencia' => 'setValorTransferencia',
        'valor_tarifa' => 'setValorTarifa'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'data_transferencia' => 'getDataTransferencia',
        'id_conta_origem' => 'getIdContaOrigem',
        'nome_pessoa_origem' => 'getNomePessoaOrigem',
        'id_conta_destino' => 'getIdContaDestino',
        'nome_pessoa_destino' => 'getNomePessoaDestino',
        'valor_transferencia' => 'getValorTransferencia',
        'valor_tarifa' => 'getValorTarifa'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id {{{transferencia_detalhe_response_id_value}}}
      * @var int
      */
    protected $id;
    
    /**
      * $data_transferencia {{{transferencia_detalhe_response_data_transferencia_value}}}
      * @var string
      */
    protected $data_transferencia;
    
    /**
      * $id_conta_origem {{{transferencia_detalhe_response_id_conta_origem_value}}}
      * @var int
      */
    protected $id_conta_origem;
    
    /**
      * $nome_pessoa_origem {{{transferencia_detalhe_response_nome_pessoa_origem_value}}}
      * @var string
      */
    protected $nome_pessoa_origem;
    
    /**
      * $id_conta_destino {{{transferencia_detalhe_response_id_conta_destino_value}}}
      * @var int
      */
    protected $id_conta_destino;
    
    /**
      * $nome_pessoa_destino {{{transferencia_detalhe_response_nome_pessoa_destino_value}}}
      * @var string
      */
    protected $nome_pessoa_destino;
    
    /**
      * $valor_transferencia {{{transferencia_detalhe_response_valor_transferencia_value}}}
      * @var Number
      */
    protected $valor_transferencia;
    
    /**
      * $valor_tarifa {{{transferencia_detalhe_response_valor_tarifa_value}}}
      * @var Number
      */
    protected $valor_tarifa;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->data_transferencia = $data["data_transferencia"];
            $this->id_conta_origem = $data["id_conta_origem"];
            $this->nome_pessoa_origem = $data["nome_pessoa_origem"];
            $this->id_conta_destino = $data["id_conta_destino"];
            $this->nome_pessoa_destino = $data["nome_pessoa_destino"];
            $this->valor_transferencia = $data["valor_transferencia"];
            $this->valor_tarifa = $data["valor_tarifa"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id {{{transferencia_detalhe_response_id_value}}}
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets data_transferencia
     * @return string
     */
    public function getDataTransferencia()
    {
        return $this->data_transferencia;
    }
  
    /**
     * Sets data_transferencia
     * @param string $data_transferencia {{{transferencia_detalhe_response_data_transferencia_value}}}
     * @return $this
     */
    public function setDataTransferencia($data_transferencia)
    {
        
        $this->data_transferencia = $data_transferencia;
        return $this;
    }
    
    /**
     * Gets id_conta_origem
     * @return int
     */
    public function getIdContaOrigem()
    {
        return $this->id_conta_origem;
    }
  
    /**
     * Sets id_conta_origem
     * @param int $id_conta_origem {{{transferencia_detalhe_response_id_conta_origem_value}}}
     * @return $this
     */
    public function setIdContaOrigem($id_conta_origem)
    {
        
        $this->id_conta_origem = $id_conta_origem;
        return $this;
    }
    
    /**
     * Gets nome_pessoa_origem
     * @return string
     */
    public function getNomePessoaOrigem()
    {
        return $this->nome_pessoa_origem;
    }
  
    /**
     * Sets nome_pessoa_origem
     * @param string $nome_pessoa_origem {{{transferencia_detalhe_response_nome_pessoa_origem_value}}}
     * @return $this
     */
    public function setNomePessoaOrigem($nome_pessoa_origem)
    {
        
        $this->nome_pessoa_origem = $nome_pessoa_origem;
        return $this;
    }
    
    /**
     * Gets id_conta_destino
     * @return int
     */
    public function getIdContaDestino()
    {
        return $this->id_conta_destino;
    }
  
    /**
     * Sets id_conta_destino
     * @param int $id_conta_destino {{{transferencia_detalhe_response_id_conta_destino_value}}}
     * @return $this
     */
    public function setIdContaDestino($id_conta_destino)
    {
        
        $this->id_conta_destino = $id_conta_destino;
        return $this;
    }
    
    /**
     * Gets nome_pessoa_destino
     * @return string
     */
    public function getNomePessoaDestino()
    {
        return $this->nome_pessoa_destino;
    }
  
    /**
     * Sets nome_pessoa_destino
     * @param string $nome_pessoa_destino {{{transferencia_detalhe_response_nome_pessoa_destino_value}}}
     * @return $this
     */
    public function setNomePessoaDestino($nome_pessoa_destino)
    {
        
        $this->nome_pessoa_destino = $nome_pessoa_destino;
        return $this;
    }
    
    /**
     * Gets valor_transferencia
     * @return Number
     */
    public function getValorTransferencia()
    {
        return $this->valor_transferencia;
    }
  
    /**
     * Sets valor_transferencia
     * @param Number $valor_transferencia {{{transferencia_detalhe_response_valor_transferencia_value}}}
     * @return $this
     */
    public function setValorTransferencia($valor_transferencia)
    {
        
        $this->valor_transferencia = $valor_transferencia;
        return $this;
    }
    
    /**
     * Gets valor_tarifa
     * @return Number
     */
    public function getValorTarifa()
    {
        return $this->valor_tarifa;
    }
  
    /**
     * Sets valor_tarifa
     * @param Number $valor_tarifa {{{transferencia_detalhe_response_valor_tarifa_value}}}
     * @return $this
     */
    public function setValorTarifa($valor_tarifa)
    {
        
        $this->valor_tarifa = $valor_tarifa;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
