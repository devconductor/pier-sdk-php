<?php
/**
 * NotificacaoEmailResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * NotificacaoEmailResponse Class Doc Comment
 *
 * @category    Class
 * @description Notifica\u00C3\u00A7\u00C3\u00A3o do envio do email
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class NotificacaoEmailResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'id_template_notificacao' => 'int',
        'id_documento' => 'int',
        'destinatario' => 'string',
        'remetente' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'id_template_notificacao' => 'idTemplateNotificacao',
        'id_documento' => 'idDocumento',
        'destinatario' => 'destinatario',
        'remetente' => 'remetente'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'id_template_notificacao' => 'setIdTemplateNotificacao',
        'id_documento' => 'setIdDocumento',
        'destinatario' => 'setDestinatario',
        'remetente' => 'setRemetente'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'id_template_notificacao' => 'getIdTemplateNotificacao',
        'id_documento' => 'getIdDocumento',
        'destinatario' => 'getDestinatario',
        'remetente' => 'getRemetente'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da notifica\u00C3\u00A7\u00C3\u00A3o gerada.
      * @var int
      */
    protected $id;
    
    /**
      * $id_template_notificacao C\u00C3\u00B3digo identificador do template da notifica\u00C3\u00A7\u00C3\u00A3o.
      * @var int
      */
    protected $id_template_notificacao;
    
    /**
      * $id_documento C\u00C3\u00B3digo identificador do Documento.
      * @var int
      */
    protected $id_documento;
    
    /**
      * $destinatario Email do destinat\u00C3\u00A1rio da notifica\u00C3\u00A7\u00C3\u00A3o.
      * @var string
      */
    protected $destinatario;
    
    /**
      * $remetente Email do remetente da notifica\u00C3\u00A7\u00C3\u00A3o.
      * @var string
      */
    protected $remetente;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->id_template_notificacao = $data["id_template_notificacao"];
            $this->id_documento = $data["id_documento"];
            $this->destinatario = $data["destinatario"];
            $this->remetente = $data["remetente"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da notifica\u00C3\u00A7\u00C3\u00A3o gerada.
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets id_template_notificacao
     * @return int
     */
    public function getIdTemplateNotificacao()
    {
        return $this->id_template_notificacao;
    }
  
    /**
     * Sets id_template_notificacao
     * @param int $id_template_notificacao C\u00C3\u00B3digo identificador do template da notifica\u00C3\u00A7\u00C3\u00A3o.
     * @return $this
     */
    public function setIdTemplateNotificacao($id_template_notificacao)
    {
        
        $this->id_template_notificacao = $id_template_notificacao;
        return $this;
    }
    
    /**
     * Gets id_documento
     * @return int
     */
    public function getIdDocumento()
    {
        return $this->id_documento;
    }
  
    /**
     * Sets id_documento
     * @param int $id_documento C\u00C3\u00B3digo identificador do Documento.
     * @return $this
     */
    public function setIdDocumento($id_documento)
    {
        
        $this->id_documento = $id_documento;
        return $this;
    }
    
    /**
     * Gets destinatario
     * @return string
     */
    public function getDestinatario()
    {
        return $this->destinatario;
    }
  
    /**
     * Sets destinatario
     * @param string $destinatario Email do destinat\u00C3\u00A1rio da notifica\u00C3\u00A7\u00C3\u00A3o.
     * @return $this
     */
    public function setDestinatario($destinatario)
    {
        
        $this->destinatario = $destinatario;
        return $this;
    }
    
    /**
     * Gets remetente
     * @return string
     */
    public function getRemetente()
    {
        return $this->remetente;
    }
  
    /**
     * Sets remetente
     * @param string $remetente Email do remetente da notifica\u00C3\u00A7\u00C3\u00A3o.
     * @return $this
     */
    public function setRemetente($remetente)
    {
        
        $this->remetente = $remetente;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
