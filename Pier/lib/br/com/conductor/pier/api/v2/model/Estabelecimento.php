<?php
/**
 * Estabelecimento
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * Estabelecimento Class Doc Comment
 *
 * @category    Class
 * @description Objeto Estabelecimento
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Estabelecimento implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'numero_estabelecimento' => 'string',
        'numero_receita_federal' => 'int',
        'nome' => 'string',
        'descricao' => 'string',
        'nome_fantasia' => 'string',
        'cep' => 'string',
        'nome_logradouro' => 'string',
        'numero_endereco' => 'string',
        'complemento' => 'string',
        'bairro' => 'string',
        'cidade' => 'string',
        'uf' => 'string',
        'pais' => 'string',
        'data_cadastramento' => 'string',
        'obs' => 'string',
        'contato' => 'string',
        'email' => 'string',
        'flag_arquivo_secr_fazenda' => 'int',
        'flag_cartao_digitado' => 'int',
        'inativo' => 'int'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'numero_estabelecimento' => 'numeroEstabelecimento',
        'numero_receita_federal' => 'numeroReceitaFederal',
        'nome' => 'nome',
        'descricao' => 'descricao',
        'nome_fantasia' => 'nomeFantasia',
        'cep' => 'cep',
        'nome_logradouro' => 'nomeLogradouro',
        'numero_endereco' => 'numeroEndereco',
        'complemento' => 'complemento',
        'bairro' => 'bairro',
        'cidade' => 'cidade',
        'uf' => 'uf',
        'pais' => 'pais',
        'data_cadastramento' => 'dataCadastramento',
        'obs' => 'obs',
        'contato' => 'contato',
        'email' => 'email',
        'flag_arquivo_secr_fazenda' => 'flagArquivoSecrFazenda',
        'flag_cartao_digitado' => 'flagCartaoDigitado',
        'inativo' => 'inativo'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'numero_estabelecimento' => 'setNumeroEstabelecimento',
        'numero_receita_federal' => 'setNumeroReceitaFederal',
        'nome' => 'setNome',
        'descricao' => 'setDescricao',
        'nome_fantasia' => 'setNomeFantasia',
        'cep' => 'setCep',
        'nome_logradouro' => 'setNomeLogradouro',
        'numero_endereco' => 'setNumeroEndereco',
        'complemento' => 'setComplemento',
        'bairro' => 'setBairro',
        'cidade' => 'setCidade',
        'uf' => 'setUf',
        'pais' => 'setPais',
        'data_cadastramento' => 'setDataCadastramento',
        'obs' => 'setObs',
        'contato' => 'setContato',
        'email' => 'setEmail',
        'flag_arquivo_secr_fazenda' => 'setFlagArquivoSecrFazenda',
        'flag_cartao_digitado' => 'setFlagCartaoDigitado',
        'inativo' => 'setInativo'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'numero_estabelecimento' => 'getNumeroEstabelecimento',
        'numero_receita_federal' => 'getNumeroReceitaFederal',
        'nome' => 'getNome',
        'descricao' => 'getDescricao',
        'nome_fantasia' => 'getNomeFantasia',
        'cep' => 'getCep',
        'nome_logradouro' => 'getNomeLogradouro',
        'numero_endereco' => 'getNumeroEndereco',
        'complemento' => 'getComplemento',
        'bairro' => 'getBairro',
        'cidade' => 'getCidade',
        'uf' => 'getUf',
        'pais' => 'getPais',
        'data_cadastramento' => 'getDataCadastramento',
        'obs' => 'getObs',
        'contato' => 'getContato',
        'email' => 'getEmail',
        'flag_arquivo_secr_fazenda' => 'getFlagArquivoSecrFazenda',
        'flag_cartao_digitado' => 'getFlagCartaoDigitado',
        'inativo' => 'getInativo'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do estabelecimento (id).
      * @var int
      */
    protected $id;
    
    /**
      * $numero_estabelecimento N\u00C3\u00BAmero de identifica\u00C3\u00A7\u00C3\u00A3o do Estabelecimento na Conductor.
      * @var string
      */
    protected $numero_estabelecimento;
    
    /**
      * $numero_receita_federal Apresenta o n\u00C3\u00BAmero de identifica\u00C3\u00A7\u00C3\u00A3o do Estabelecimento na Receita Federal.
      * @var int
      */
    protected $numero_receita_federal;
    
    /**
      * $nome Nome do Estabelecimento.
      * @var string
      */
    protected $nome;
    
    /**
      * $descricao Raz\u00C3\u00A3o Social do Estabelecimento.
      * @var string
      */
    protected $descricao;
    
    /**
      * $nome_fantasia T\u00C3\u00ADtulo Comercial do Estabelecimento.
      * @var string
      */
    protected $nome_fantasia;
    
    /**
      * $cep C\u00C3\u00B3digo de Endere\u00C3\u00A7amento Postal (CEP).
      * @var string
      */
    protected $cep;
    
    /**
      * $nome_logradouro Nome do Logradouro.
      * @var string
      */
    protected $nome_logradouro;
    
    /**
      * $numero_endereco N\u00C3\u00BAmero do endere\u00C3\u00A7o.
      * @var string
      */
    protected $numero_endereco;
    
    /**
      * $complemento Descri\u00C3\u00A7\u00C3\u00B5es complementares referente ao endere\u00C3\u00A7o.
      * @var string
      */
    protected $complemento;
    
    /**
      * $bairro Nome do bairro do endere\u00C3\u00A7o.
      * @var string
      */
    protected $bairro;
    
    /**
      * $cidade Nome da cidade do endere\u00C3\u00A7o.
      * @var string
      */
    protected $cidade;
    
    /**
      * $uf Sigla de identifica\u00C3\u00A7\u00C3\u00A3o da Unidade Federativa do endere\u00C3\u00A7o.
      * @var string
      */
    protected $uf;
    
    /**
      * $pais Nome do pa\u00C3\u00ADs.
      * @var string
      */
    protected $pais;
    
    /**
      * $data_cadastramento Data de Cadastro do Estabelecimento.
      * @var string
      */
    protected $data_cadastramento;
    
    /**
      * $obs Detalhes espec\u00C3\u00ADficos quanto ao Cadastro do Estabelecimento.
      * @var string
      */
    protected $obs;
    
    /**
      * $contato Nome da pessoa para contato com o Estabelecimento.
      * @var string
      */
    protected $contato;
    
    /**
      * $email E-mail da pessoa para contato com o Estabelecimento.
      * @var string
      */
    protected $email;
    
    /**
      * $flag_arquivo_secr_fazenda Indica se o estabelecimento ser\u00C3\u00A1 inclu\u00C3\u00ADdo no arquivo de registro para a Secretaria da Fazenda Estadual.
      * @var int
      */
    protected $flag_arquivo_secr_fazenda;
    
    /**
      * $flag_cartao_digitado Indica se o estabelecimento poder\u00C3\u00A1 originar transa\u00C3\u00A7\u00C3\u00B5es sem a leitura da tarja ou do chip do cart\u00C3\u00A3o.
      * @var int
      */
    protected $flag_cartao_digitado;
    
    /**
      * $inativo Indica se o estabelecimento est\u00C3\u00A1 inativo.
      * @var int
      */
    protected $inativo;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->numero_estabelecimento = $data["numero_estabelecimento"];
            $this->numero_receita_federal = $data["numero_receita_federal"];
            $this->nome = $data["nome"];
            $this->descricao = $data["descricao"];
            $this->nome_fantasia = $data["nome_fantasia"];
            $this->cep = $data["cep"];
            $this->nome_logradouro = $data["nome_logradouro"];
            $this->numero_endereco = $data["numero_endereco"];
            $this->complemento = $data["complemento"];
            $this->bairro = $data["bairro"];
            $this->cidade = $data["cidade"];
            $this->uf = $data["uf"];
            $this->pais = $data["pais"];
            $this->data_cadastramento = $data["data_cadastramento"];
            $this->obs = $data["obs"];
            $this->contato = $data["contato"];
            $this->email = $data["email"];
            $this->flag_arquivo_secr_fazenda = $data["flag_arquivo_secr_fazenda"];
            $this->flag_cartao_digitado = $data["flag_cartao_digitado"];
            $this->inativo = $data["inativo"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do estabelecimento (id).
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets numero_estabelecimento
     * @return string
     */
    public function getNumeroEstabelecimento()
    {
        return $this->numero_estabelecimento;
    }
  
    /**
     * Sets numero_estabelecimento
     * @param string $numero_estabelecimento N\u00C3\u00BAmero de identifica\u00C3\u00A7\u00C3\u00A3o do Estabelecimento na Conductor.
     * @return $this
     */
    public function setNumeroEstabelecimento($numero_estabelecimento)
    {
        
        $this->numero_estabelecimento = $numero_estabelecimento;
        return $this;
    }
    
    /**
     * Gets numero_receita_federal
     * @return int
     */
    public function getNumeroReceitaFederal()
    {
        return $this->numero_receita_federal;
    }
  
    /**
     * Sets numero_receita_federal
     * @param int $numero_receita_federal Apresenta o n\u00C3\u00BAmero de identifica\u00C3\u00A7\u00C3\u00A3o do Estabelecimento na Receita Federal.
     * @return $this
     */
    public function setNumeroReceitaFederal($numero_receita_federal)
    {
        
        $this->numero_receita_federal = $numero_receita_federal;
        return $this;
    }
    
    /**
     * Gets nome
     * @return string
     */
    public function getNome()
    {
        return $this->nome;
    }
  
    /**
     * Sets nome
     * @param string $nome Nome do Estabelecimento.
     * @return $this
     */
    public function setNome($nome)
    {
        
        $this->nome = $nome;
        return $this;
    }
    
    /**
     * Gets descricao
     * @return string
     */
    public function getDescricao()
    {
        return $this->descricao;
    }
  
    /**
     * Sets descricao
     * @param string $descricao Raz\u00C3\u00A3o Social do Estabelecimento.
     * @return $this
     */
    public function setDescricao($descricao)
    {
        
        $this->descricao = $descricao;
        return $this;
    }
    
    /**
     * Gets nome_fantasia
     * @return string
     */
    public function getNomeFantasia()
    {
        return $this->nome_fantasia;
    }
  
    /**
     * Sets nome_fantasia
     * @param string $nome_fantasia T\u00C3\u00ADtulo Comercial do Estabelecimento.
     * @return $this
     */
    public function setNomeFantasia($nome_fantasia)
    {
        
        $this->nome_fantasia = $nome_fantasia;
        return $this;
    }
    
    /**
     * Gets cep
     * @return string
     */
    public function getCep()
    {
        return $this->cep;
    }
  
    /**
     * Sets cep
     * @param string $cep C\u00C3\u00B3digo de Endere\u00C3\u00A7amento Postal (CEP).
     * @return $this
     */
    public function setCep($cep)
    {
        
        $this->cep = $cep;
        return $this;
    }
    
    /**
     * Gets nome_logradouro
     * @return string
     */
    public function getNomeLogradouro()
    {
        return $this->nome_logradouro;
    }
  
    /**
     * Sets nome_logradouro
     * @param string $nome_logradouro Nome do Logradouro.
     * @return $this
     */
    public function setNomeLogradouro($nome_logradouro)
    {
        
        $this->nome_logradouro = $nome_logradouro;
        return $this;
    }
    
    /**
     * Gets numero_endereco
     * @return string
     */
    public function getNumeroEndereco()
    {
        return $this->numero_endereco;
    }
  
    /**
     * Sets numero_endereco
     * @param string $numero_endereco N\u00C3\u00BAmero do endere\u00C3\u00A7o.
     * @return $this
     */
    public function setNumeroEndereco($numero_endereco)
    {
        
        $this->numero_endereco = $numero_endereco;
        return $this;
    }
    
    /**
     * Gets complemento
     * @return string
     */
    public function getComplemento()
    {
        return $this->complemento;
    }
  
    /**
     * Sets complemento
     * @param string $complemento Descri\u00C3\u00A7\u00C3\u00B5es complementares referente ao endere\u00C3\u00A7o.
     * @return $this
     */
    public function setComplemento($complemento)
    {
        
        $this->complemento = $complemento;
        return $this;
    }
    
    /**
     * Gets bairro
     * @return string
     */
    public function getBairro()
    {
        return $this->bairro;
    }
  
    /**
     * Sets bairro
     * @param string $bairro Nome do bairro do endere\u00C3\u00A7o.
     * @return $this
     */
    public function setBairro($bairro)
    {
        
        $this->bairro = $bairro;
        return $this;
    }
    
    /**
     * Gets cidade
     * @return string
     */
    public function getCidade()
    {
        return $this->cidade;
    }
  
    /**
     * Sets cidade
     * @param string $cidade Nome da cidade do endere\u00C3\u00A7o.
     * @return $this
     */
    public function setCidade($cidade)
    {
        
        $this->cidade = $cidade;
        return $this;
    }
    
    /**
     * Gets uf
     * @return string
     */
    public function getUf()
    {
        return $this->uf;
    }
  
    /**
     * Sets uf
     * @param string $uf Sigla de identifica\u00C3\u00A7\u00C3\u00A3o da Unidade Federativa do endere\u00C3\u00A7o.
     * @return $this
     */
    public function setUf($uf)
    {
        
        $this->uf = $uf;
        return $this;
    }
    
    /**
     * Gets pais
     * @return string
     */
    public function getPais()
    {
        return $this->pais;
    }
  
    /**
     * Sets pais
     * @param string $pais Nome do pa\u00C3\u00ADs.
     * @return $this
     */
    public function setPais($pais)
    {
        
        $this->pais = $pais;
        return $this;
    }
    
    /**
     * Gets data_cadastramento
     * @return string
     */
    public function getDataCadastramento()
    {
        return $this->data_cadastramento;
    }
  
    /**
     * Sets data_cadastramento
     * @param string $data_cadastramento Data de Cadastro do Estabelecimento.
     * @return $this
     */
    public function setDataCadastramento($data_cadastramento)
    {
        
        $this->data_cadastramento = $data_cadastramento;
        return $this;
    }
    
    /**
     * Gets obs
     * @return string
     */
    public function getObs()
    {
        return $this->obs;
    }
  
    /**
     * Sets obs
     * @param string $obs Detalhes espec\u00C3\u00ADficos quanto ao Cadastro do Estabelecimento.
     * @return $this
     */
    public function setObs($obs)
    {
        
        $this->obs = $obs;
        return $this;
    }
    
    /**
     * Gets contato
     * @return string
     */
    public function getContato()
    {
        return $this->contato;
    }
  
    /**
     * Sets contato
     * @param string $contato Nome da pessoa para contato com o Estabelecimento.
     * @return $this
     */
    public function setContato($contato)
    {
        
        $this->contato = $contato;
        return $this;
    }
    
    /**
     * Gets email
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }
  
    /**
     * Sets email
     * @param string $email E-mail da pessoa para contato com o Estabelecimento.
     * @return $this
     */
    public function setEmail($email)
    {
        
        $this->email = $email;
        return $this;
    }
    
    /**
     * Gets flag_arquivo_secr_fazenda
     * @return int
     */
    public function getFlagArquivoSecrFazenda()
    {
        return $this->flag_arquivo_secr_fazenda;
    }
  
    /**
     * Sets flag_arquivo_secr_fazenda
     * @param int $flag_arquivo_secr_fazenda Indica se o estabelecimento ser\u00C3\u00A1 inclu\u00C3\u00ADdo no arquivo de registro para a Secretaria da Fazenda Estadual.
     * @return $this
     */
    public function setFlagArquivoSecrFazenda($flag_arquivo_secr_fazenda)
    {
        
        $this->flag_arquivo_secr_fazenda = $flag_arquivo_secr_fazenda;
        return $this;
    }
    
    /**
     * Gets flag_cartao_digitado
     * @return int
     */
    public function getFlagCartaoDigitado()
    {
        return $this->flag_cartao_digitado;
    }
  
    /**
     * Sets flag_cartao_digitado
     * @param int $flag_cartao_digitado Indica se o estabelecimento poder\u00C3\u00A1 originar transa\u00C3\u00A7\u00C3\u00B5es sem a leitura da tarja ou do chip do cart\u00C3\u00A3o.
     * @return $this
     */
    public function setFlagCartaoDigitado($flag_cartao_digitado)
    {
        
        $this->flag_cartao_digitado = $flag_cartao_digitado;
        return $this;
    }
    
    /**
     * Gets inativo
     * @return int
     */
    public function getInativo()
    {
        return $this->inativo;
    }
  
    /**
     * Sets inativo
     * @param int $inativo Indica se o estabelecimento est\u00C3\u00A1 inativo.
     * @return $this
     */
    public function setInativo($inativo)
    {
        
        $this->inativo = $inativo;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
