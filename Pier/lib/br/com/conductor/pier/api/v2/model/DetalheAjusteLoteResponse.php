<?php
/**
 * DetalheAjusteLoteResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * DetalheAjusteLoteResponse Class Doc Comment
 *
 * @category    Class
 * @description {{{detalhe_ajuste_lote_response_description}}}
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class DetalheAjusteLoteResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'arquivo_id' => 'int',
        'tipo_ajuste_descricao' => 'string',
        'id_conta' => 'int',
        'status' => 'string',
        'data_transacao' => '\DateTime',
        'valor_total_transacao' => 'string',
        'tipo_operacao' => 'string',
        'data_processamento' => '\DateTime',
        'numero_linha' => 'int',
        'descricao_status' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'arquivo_id' => 'arquivoId',
        'tipo_ajuste_descricao' => 'tipoAjusteDescricao',
        'id_conta' => 'idConta',
        'status' => 'status',
        'data_transacao' => 'dataTransacao',
        'valor_total_transacao' => 'valorTotalTransacao',
        'tipo_operacao' => 'tipoOperacao',
        'data_processamento' => 'dataProcessamento',
        'numero_linha' => 'numeroLinha',
        'descricao_status' => 'descricaoStatus'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'arquivo_id' => 'setArquivoId',
        'tipo_ajuste_descricao' => 'setTipoAjusteDescricao',
        'id_conta' => 'setIdConta',
        'status' => 'setStatus',
        'data_transacao' => 'setDataTransacao',
        'valor_total_transacao' => 'setValorTotalTransacao',
        'tipo_operacao' => 'setTipoOperacao',
        'data_processamento' => 'setDataProcessamento',
        'numero_linha' => 'setNumeroLinha',
        'descricao_status' => 'setDescricaoStatus'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'arquivo_id' => 'getArquivoId',
        'tipo_ajuste_descricao' => 'getTipoAjusteDescricao',
        'id_conta' => 'getIdConta',
        'status' => 'getStatus',
        'data_transacao' => 'getDataTransacao',
        'valor_total_transacao' => 'getValorTotalTransacao',
        'tipo_operacao' => 'getTipoOperacao',
        'data_processamento' => 'getDataProcessamento',
        'numero_linha' => 'getNumeroLinha',
        'descricao_status' => 'getDescricaoStatus'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id {{{detalhe_ajuste_lote_response_id_value}}}
      * @var int
      */
    protected $id;
    
    /**
      * $arquivo_id {{{detalhe_ajuste_lote_response_arquivoId_value}}}
      * @var int
      */
    protected $arquivo_id;
    
    /**
      * $tipo_ajuste_descricao {{{detalhe_ajuste_lote_response_idTipoAjuste_value}}}
      * @var string
      */
    protected $tipo_ajuste_descricao;
    
    /**
      * $id_conta {{{detalhe_ajuste_lote_response_idConta_value}}}
      * @var int
      */
    protected $id_conta;
    
    /**
      * $status {{{detalhe_ajuste_lote_response_Status_value}}}
      * @var string
      */
    protected $status;
    
    /**
      * $data_transacao {{{detalhe_ajuste_lote_response_dataTransacao_value}}}
      * @var \DateTime
      */
    protected $data_transacao;
    
    /**
      * $valor_total_transacao {{{detalhe_ajuste_lote_response_valorTransacao_value}}}
      * @var string
      */
    protected $valor_total_transacao;
    
    /**
      * $tipo_operacao {{{detalhe_ajuste_lote_response_tipoRegistro_value}}}
      * @var string
      */
    protected $tipo_operacao;
    
    /**
      * $data_processamento {{{detalhe_ajuste_lote_response_dataProcessamento_value}}}
      * @var \DateTime
      */
    protected $data_processamento;
    
    /**
      * $numero_linha {{{detalhe_ajuste_lote_response_numeroLinha_value}}}
      * @var int
      */
    protected $numero_linha;
    
    /**
      * $descricao_status {{{detalhe_ajuste_lote_response_descricaoStatus_value}}}
      * @var string
      */
    protected $descricao_status;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->arquivo_id = $data["arquivo_id"];
            $this->tipo_ajuste_descricao = $data["tipo_ajuste_descricao"];
            $this->id_conta = $data["id_conta"];
            $this->status = $data["status"];
            $this->data_transacao = $data["data_transacao"];
            $this->valor_total_transacao = $data["valor_total_transacao"];
            $this->tipo_operacao = $data["tipo_operacao"];
            $this->data_processamento = $data["data_processamento"];
            $this->numero_linha = $data["numero_linha"];
            $this->descricao_status = $data["descricao_status"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id {{{detalhe_ajuste_lote_response_id_value}}}
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets arquivo_id
     * @return int
     */
    public function getArquivoId()
    {
        return $this->arquivo_id;
    }
  
    /**
     * Sets arquivo_id
     * @param int $arquivo_id {{{detalhe_ajuste_lote_response_arquivoId_value}}}
     * @return $this
     */
    public function setArquivoId($arquivo_id)
    {
        
        $this->arquivo_id = $arquivo_id;
        return $this;
    }
    
    /**
     * Gets tipo_ajuste_descricao
     * @return string
     */
    public function getTipoAjusteDescricao()
    {
        return $this->tipo_ajuste_descricao;
    }
  
    /**
     * Sets tipo_ajuste_descricao
     * @param string $tipo_ajuste_descricao {{{detalhe_ajuste_lote_response_idTipoAjuste_value}}}
     * @return $this
     */
    public function setTipoAjusteDescricao($tipo_ajuste_descricao)
    {
        
        $this->tipo_ajuste_descricao = $tipo_ajuste_descricao;
        return $this;
    }
    
    /**
     * Gets id_conta
     * @return int
     */
    public function getIdConta()
    {
        return $this->id_conta;
    }
  
    /**
     * Sets id_conta
     * @param int $id_conta {{{detalhe_ajuste_lote_response_idConta_value}}}
     * @return $this
     */
    public function setIdConta($id_conta)
    {
        
        $this->id_conta = $id_conta;
        return $this;
    }
    
    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param string $status {{{detalhe_ajuste_lote_response_Status_value}}}
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Gets data_transacao
     * @return \DateTime
     */
    public function getDataTransacao()
    {
        return $this->data_transacao;
    }
  
    /**
     * Sets data_transacao
     * @param \DateTime $data_transacao {{{detalhe_ajuste_lote_response_dataTransacao_value}}}
     * @return $this
     */
    public function setDataTransacao($data_transacao)
    {
        
        $this->data_transacao = $data_transacao;
        return $this;
    }
    
    /**
     * Gets valor_total_transacao
     * @return string
     */
    public function getValorTotalTransacao()
    {
        return $this->valor_total_transacao;
    }
  
    /**
     * Sets valor_total_transacao
     * @param string $valor_total_transacao {{{detalhe_ajuste_lote_response_valorTransacao_value}}}
     * @return $this
     */
    public function setValorTotalTransacao($valor_total_transacao)
    {
        
        $this->valor_total_transacao = $valor_total_transacao;
        return $this;
    }
    
    /**
     * Gets tipo_operacao
     * @return string
     */
    public function getTipoOperacao()
    {
        return $this->tipo_operacao;
    }
  
    /**
     * Sets tipo_operacao
     * @param string $tipo_operacao {{{detalhe_ajuste_lote_response_tipoRegistro_value}}}
     * @return $this
     */
    public function setTipoOperacao($tipo_operacao)
    {
        
        $this->tipo_operacao = $tipo_operacao;
        return $this;
    }
    
    /**
     * Gets data_processamento
     * @return \DateTime
     */
    public function getDataProcessamento()
    {
        return $this->data_processamento;
    }
  
    /**
     * Sets data_processamento
     * @param \DateTime $data_processamento {{{detalhe_ajuste_lote_response_dataProcessamento_value}}}
     * @return $this
     */
    public function setDataProcessamento($data_processamento)
    {
        
        $this->data_processamento = $data_processamento;
        return $this;
    }
    
    /**
     * Gets numero_linha
     * @return int
     */
    public function getNumeroLinha()
    {
        return $this->numero_linha;
    }
  
    /**
     * Sets numero_linha
     * @param int $numero_linha {{{detalhe_ajuste_lote_response_numeroLinha_value}}}
     * @return $this
     */
    public function setNumeroLinha($numero_linha)
    {
        
        $this->numero_linha = $numero_linha;
        return $this;
    }
    
    /**
     * Gets descricao_status
     * @return string
     */
    public function getDescricaoStatus()
    {
        return $this->descricao_status;
    }
  
    /**
     * Sets descricao_status
     * @param string $descricao_status {{{detalhe_ajuste_lote_response_descricaoStatus_value}}}
     * @return $this
     */
    public function setDescricaoStatus($descricao_status)
    {
        
        $this->descricao_status = $descricao_status;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
