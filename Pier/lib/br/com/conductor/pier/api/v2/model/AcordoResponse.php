<?php
/**
 * AcordoResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * AcordoResponse Class Doc Comment
 *
 * @category    Class
 * @description Objeto Acordo
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class AcordoResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'id_conta' => 'int',
        'status_acordo' => 'int',
        'valor_acordo' => 'Number',
        'data_acordo' => 'string',
        'quantidade_parcelas' => 'int',
        'saldo_atual_final' => 'Number',
        'dias_em_atraso' => 'int'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'id_conta' => 'idConta',
        'status_acordo' => 'statusAcordo',
        'valor_acordo' => 'valorAcordo',
        'data_acordo' => 'dataAcordo',
        'quantidade_parcelas' => 'quantidadeParcelas',
        'saldo_atual_final' => 'saldoAtualFinal',
        'dias_em_atraso' => 'diasEmAtraso'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'id_conta' => 'setIdConta',
        'status_acordo' => 'setStatusAcordo',
        'valor_acordo' => 'setValorAcordo',
        'data_acordo' => 'setDataAcordo',
        'quantidade_parcelas' => 'setQuantidadeParcelas',
        'saldo_atual_final' => 'setSaldoAtualFinal',
        'dias_em_atraso' => 'setDiasEmAtraso'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'id_conta' => 'getIdConta',
        'status_acordo' => 'getStatusAcordo',
        'valor_acordo' => 'getValorAcordo',
        'data_acordo' => 'getDataAcordo',
        'quantidade_parcelas' => 'getQuantidadeParcelas',
        'saldo_atual_final' => 'getSaldoAtualFinal',
        'dias_em_atraso' => 'getDiasEmAtraso'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id C\u00F3digo de Identifica\u00E7\u00E3o do acordo (id).
      * @var int
      */
    protected $id;
    
    /**
      * $id_conta C\u00F3digo de Identifica\u00E7\u00E3o da conta.
      * @var int
      */
    protected $id_conta;
    
    /**
      * $status_acordo Status do acordo.
      * @var int
      */
    protected $status_acordo;
    
    /**
      * $valor_acordo Valor do Acordo.
      * @var Number
      */
    protected $valor_acordo;
    
    /**
      * $data_acordo Data e Hora do acordo.
      * @var string
      */
    protected $data_acordo;
    
    /**
      * $quantidade_parcelas Quantidade de parcelas do acordo.
      * @var int
      */
    protected $quantidade_parcelas;
    
    /**
      * $saldo_atual_final Saldo atual final.
      * @var Number
      */
    protected $saldo_atual_final;
    
    /**
      * $dias_em_atraso Dias em atraso.
      * @var int
      */
    protected $dias_em_atraso;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->id_conta = $data["id_conta"];
            $this->status_acordo = $data["status_acordo"];
            $this->valor_acordo = $data["valor_acordo"];
            $this->data_acordo = $data["data_acordo"];
            $this->quantidade_parcelas = $data["quantidade_parcelas"];
            $this->saldo_atual_final = $data["saldo_atual_final"];
            $this->dias_em_atraso = $data["dias_em_atraso"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id C\u00F3digo de Identifica\u00E7\u00E3o do acordo (id).
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets id_conta
     * @return int
     */
    public function getIdConta()
    {
        return $this->id_conta;
    }
  
    /**
     * Sets id_conta
     * @param int $id_conta C\u00F3digo de Identifica\u00E7\u00E3o da conta.
     * @return $this
     */
    public function setIdConta($id_conta)
    {
        
        $this->id_conta = $id_conta;
        return $this;
    }
    
    /**
     * Gets status_acordo
     * @return int
     */
    public function getStatusAcordo()
    {
        return $this->status_acordo;
    }
  
    /**
     * Sets status_acordo
     * @param int $status_acordo Status do acordo.
     * @return $this
     */
    public function setStatusAcordo($status_acordo)
    {
        
        $this->status_acordo = $status_acordo;
        return $this;
    }
    
    /**
     * Gets valor_acordo
     * @return Number
     */
    public function getValorAcordo()
    {
        return $this->valor_acordo;
    }
  
    /**
     * Sets valor_acordo
     * @param Number $valor_acordo Valor do Acordo.
     * @return $this
     */
    public function setValorAcordo($valor_acordo)
    {
        
        $this->valor_acordo = $valor_acordo;
        return $this;
    }
    
    /**
     * Gets data_acordo
     * @return string
     */
    public function getDataAcordo()
    {
        return $this->data_acordo;
    }
  
    /**
     * Sets data_acordo
     * @param string $data_acordo Data e Hora do acordo.
     * @return $this
     */
    public function setDataAcordo($data_acordo)
    {
        
        $this->data_acordo = $data_acordo;
        return $this;
    }
    
    /**
     * Gets quantidade_parcelas
     * @return int
     */
    public function getQuantidadeParcelas()
    {
        return $this->quantidade_parcelas;
    }
  
    /**
     * Sets quantidade_parcelas
     * @param int $quantidade_parcelas Quantidade de parcelas do acordo.
     * @return $this
     */
    public function setQuantidadeParcelas($quantidade_parcelas)
    {
        
        $this->quantidade_parcelas = $quantidade_parcelas;
        return $this;
    }
    
    /**
     * Gets saldo_atual_final
     * @return Number
     */
    public function getSaldoAtualFinal()
    {
        return $this->saldo_atual_final;
    }
  
    /**
     * Sets saldo_atual_final
     * @param Number $saldo_atual_final Saldo atual final.
     * @return $this
     */
    public function setSaldoAtualFinal($saldo_atual_final)
    {
        
        $this->saldo_atual_final = $saldo_atual_final;
        return $this;
    }
    
    /**
     * Gets dias_em_atraso
     * @return int
     */
    public function getDiasEmAtraso()
    {
        return $this->dias_em_atraso;
    }
  
    /**
     * Sets dias_em_atraso
     * @param int $dias_em_atraso Dias em atraso.
     * @return $this
     */
    public function setDiasEmAtraso($dias_em_atraso)
    {
        
        $this->dias_em_atraso = $dias_em_atraso;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
