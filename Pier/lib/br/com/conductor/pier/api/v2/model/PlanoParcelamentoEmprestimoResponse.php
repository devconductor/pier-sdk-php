<?php
/**
 * PlanoParcelamentoEmprestimoResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * PlanoParcelamentoEmprestimoResponse Class Doc Comment
 *
 * @category    Class
 * @description Detalhe da resposta do recurso de simular empr\u00C3\u00A9stimos/financiamentos
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PlanoParcelamentoEmprestimoResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'numero_parcelas' => 'int',
        'valor_parcelas' => 'Number',
        'taxa_juros' => 'Number',
        'valor_tributos_iof' => 'Number',
        'valor_percentual_cet' => 'Number'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'numero_parcelas' => 'numeroParcelas',
        'valor_parcelas' => 'valorParcelas',
        'taxa_juros' => 'taxaJuros',
        'valor_tributos_iof' => 'valorTributosIOF',
        'valor_percentual_cet' => 'valorPercentualCET'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'numero_parcelas' => 'setNumeroParcelas',
        'valor_parcelas' => 'setValorParcelas',
        'taxa_juros' => 'setTaxaJuros',
        'valor_tributos_iof' => 'setValorTributosIof',
        'valor_percentual_cet' => 'setValorPercentualCet'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'numero_parcelas' => 'getNumeroParcelas',
        'valor_parcelas' => 'getValorParcelas',
        'taxa_juros' => 'getTaxaJuros',
        'valor_tributos_iof' => 'getValorTributosIof',
        'valor_percentual_cet' => 'getValorPercentualCet'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $numero_parcelas N\u00C3\u00BAmeros de parcelas do empr\u00C3\u00A9stimo/financiamento
      * @var int
      */
    protected $numero_parcelas;
    
    /**
      * $valor_parcelas Valor da parcela
      * @var Number
      */
    protected $valor_parcelas;
    
    /**
      * $taxa_juros Taxa de juros aplicado no empr\u00C3\u00A9stimo/financiamento
      * @var Number
      */
    protected $taxa_juros;
    
    /**
      * $valor_tributos_iof valor total estimado dos tributos do Imposto sobre Opera\u00C3\u00A7\u00C3\u00B5es Financeiras
      * @var Number
      */
    protected $valor_tributos_iof;
    
    /**
      * $valor_percentual_cet valor percentual do Custo Efetivo Total, ao ano, do empr\u00C3\u00A9stimo / financiamento
      * @var Number
      */
    protected $valor_percentual_cet;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->numero_parcelas = $data["numero_parcelas"];
            $this->valor_parcelas = $data["valor_parcelas"];
            $this->taxa_juros = $data["taxa_juros"];
            $this->valor_tributos_iof = $data["valor_tributos_iof"];
            $this->valor_percentual_cet = $data["valor_percentual_cet"];
        }
    }
    
    /**
     * Gets numero_parcelas
     * @return int
     */
    public function getNumeroParcelas()
    {
        return $this->numero_parcelas;
    }
  
    /**
     * Sets numero_parcelas
     * @param int $numero_parcelas N\u00C3\u00BAmeros de parcelas do empr\u00C3\u00A9stimo/financiamento
     * @return $this
     */
    public function setNumeroParcelas($numero_parcelas)
    {
        
        $this->numero_parcelas = $numero_parcelas;
        return $this;
    }
    
    /**
     * Gets valor_parcelas
     * @return Number
     */
    public function getValorParcelas()
    {
        return $this->valor_parcelas;
    }
  
    /**
     * Sets valor_parcelas
     * @param Number $valor_parcelas Valor da parcela
     * @return $this
     */
    public function setValorParcelas($valor_parcelas)
    {
        
        $this->valor_parcelas = $valor_parcelas;
        return $this;
    }
    
    /**
     * Gets taxa_juros
     * @return Number
     */
    public function getTaxaJuros()
    {
        return $this->taxa_juros;
    }
  
    /**
     * Sets taxa_juros
     * @param Number $taxa_juros Taxa de juros aplicado no empr\u00C3\u00A9stimo/financiamento
     * @return $this
     */
    public function setTaxaJuros($taxa_juros)
    {
        
        $this->taxa_juros = $taxa_juros;
        return $this;
    }
    
    /**
     * Gets valor_tributos_iof
     * @return Number
     */
    public function getValorTributosIof()
    {
        return $this->valor_tributos_iof;
    }
  
    /**
     * Sets valor_tributos_iof
     * @param Number $valor_tributos_iof valor total estimado dos tributos do Imposto sobre Opera\u00C3\u00A7\u00C3\u00B5es Financeiras
     * @return $this
     */
    public function setValorTributosIof($valor_tributos_iof)
    {
        
        $this->valor_tributos_iof = $valor_tributos_iof;
        return $this;
    }
    
    /**
     * Gets valor_percentual_cet
     * @return Number
     */
    public function getValorPercentualCet()
    {
        return $this->valor_percentual_cet;
    }
  
    /**
     * Sets valor_percentual_cet
     * @param Number $valor_percentual_cet valor percentual do Custo Efetivo Total, ao ano, do empr\u00C3\u00A9stimo / financiamento
     * @return $this
     */
    public function setValorPercentualCet($valor_percentual_cet)
    {
        
        $this->valor_percentual_cet = $valor_percentual_cet;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
