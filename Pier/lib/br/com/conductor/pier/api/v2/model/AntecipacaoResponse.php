<?php
/**
 * AntecipacaoResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * AntecipacaoResponse Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class AntecipacaoResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'id_conta' => 'int',
        'id_compra' => 'int',
        'quantidade_parcelas_total' => 'int',
        'quantidade_parcelas_antecipadas' => 'int',
        'valor_parcela' => 'Number',
        'valor_desconto_total' => 'Number',
        'valor_total_com_desconto' => 'Number',
        'taxa_desconto' => 'Number'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'id_conta' => 'idConta',
        'id_compra' => 'idCompra',
        'quantidade_parcelas_total' => 'quantidadeParcelasTotal',
        'quantidade_parcelas_antecipadas' => 'quantidadeParcelasAntecipadas',
        'valor_parcela' => 'valorParcela',
        'valor_desconto_total' => 'valorDescontoTotal',
        'valor_total_com_desconto' => 'valorTotalComDesconto',
        'taxa_desconto' => 'taxaDesconto'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'id_conta' => 'setIdConta',
        'id_compra' => 'setIdCompra',
        'quantidade_parcelas_total' => 'setQuantidadeParcelasTotal',
        'quantidade_parcelas_antecipadas' => 'setQuantidadeParcelasAntecipadas',
        'valor_parcela' => 'setValorParcela',
        'valor_desconto_total' => 'setValorDescontoTotal',
        'valor_total_com_desconto' => 'setValorTotalComDesconto',
        'taxa_desconto' => 'setTaxaDesconto'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'id_conta' => 'getIdConta',
        'id_compra' => 'getIdCompra',
        'quantidade_parcelas_total' => 'getQuantidadeParcelasTotal',
        'quantidade_parcelas_antecipadas' => 'getQuantidadeParcelasAntecipadas',
        'valor_parcela' => 'getValorParcela',
        'valor_desconto_total' => 'getValorDescontoTotal',
        'valor_total_com_desconto' => 'getValorTotalComDesconto',
        'taxa_desconto' => 'getTaxaDesconto'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da antecipa\u00C3\u00A7\u00C3\u00A3o
      * @var int
      */
    protected $id;
    
    /**
      * $id_conta C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta
      * @var int
      */
    protected $id_conta;
    
    /**
      * $id_compra C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da compra
      * @var int
      */
    protected $id_compra;
    
    /**
      * $quantidade_parcelas_total Apresenta o numero total de parcelas da compra
      * @var int
      */
    protected $quantidade_parcelas_total;
    
    /**
      * $quantidade_parcelas_antecipadas Apresenta o numero de parcelas antecipadas
      * @var int
      */
    protected $quantidade_parcelas_antecipadas;
    
    /**
      * $valor_parcela Apresenta o valor de cada parcela antecipadas
      * @var Number
      */
    protected $valor_parcela;
    
    /**
      * $valor_desconto_total Apresenta o valor total do desconto
      * @var Number
      */
    protected $valor_desconto_total;
    
    /**
      * $valor_total_com_desconto Apresenta o valor total com desconto
      * @var Number
      */
    protected $valor_total_com_desconto;
    
    /**
      * $taxa_desconto Apresenta a taxa de desconto
      * @var Number
      */
    protected $taxa_desconto;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->id_conta = $data["id_conta"];
            $this->id_compra = $data["id_compra"];
            $this->quantidade_parcelas_total = $data["quantidade_parcelas_total"];
            $this->quantidade_parcelas_antecipadas = $data["quantidade_parcelas_antecipadas"];
            $this->valor_parcela = $data["valor_parcela"];
            $this->valor_desconto_total = $data["valor_desconto_total"];
            $this->valor_total_com_desconto = $data["valor_total_com_desconto"];
            $this->taxa_desconto = $data["taxa_desconto"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da antecipa\u00C3\u00A7\u00C3\u00A3o
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets id_conta
     * @return int
     */
    public function getIdConta()
    {
        return $this->id_conta;
    }
  
    /**
     * Sets id_conta
     * @param int $id_conta C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta
     * @return $this
     */
    public function setIdConta($id_conta)
    {
        
        $this->id_conta = $id_conta;
        return $this;
    }
    
    /**
     * Gets id_compra
     * @return int
     */
    public function getIdCompra()
    {
        return $this->id_compra;
    }
  
    /**
     * Sets id_compra
     * @param int $id_compra C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da compra
     * @return $this
     */
    public function setIdCompra($id_compra)
    {
        
        $this->id_compra = $id_compra;
        return $this;
    }
    
    /**
     * Gets quantidade_parcelas_total
     * @return int
     */
    public function getQuantidadeParcelasTotal()
    {
        return $this->quantidade_parcelas_total;
    }
  
    /**
     * Sets quantidade_parcelas_total
     * @param int $quantidade_parcelas_total Apresenta o numero total de parcelas da compra
     * @return $this
     */
    public function setQuantidadeParcelasTotal($quantidade_parcelas_total)
    {
        
        $this->quantidade_parcelas_total = $quantidade_parcelas_total;
        return $this;
    }
    
    /**
     * Gets quantidade_parcelas_antecipadas
     * @return int
     */
    public function getQuantidadeParcelasAntecipadas()
    {
        return $this->quantidade_parcelas_antecipadas;
    }
  
    /**
     * Sets quantidade_parcelas_antecipadas
     * @param int $quantidade_parcelas_antecipadas Apresenta o numero de parcelas antecipadas
     * @return $this
     */
    public function setQuantidadeParcelasAntecipadas($quantidade_parcelas_antecipadas)
    {
        
        $this->quantidade_parcelas_antecipadas = $quantidade_parcelas_antecipadas;
        return $this;
    }
    
    /**
     * Gets valor_parcela
     * @return Number
     */
    public function getValorParcela()
    {
        return $this->valor_parcela;
    }
  
    /**
     * Sets valor_parcela
     * @param Number $valor_parcela Apresenta o valor de cada parcela antecipadas
     * @return $this
     */
    public function setValorParcela($valor_parcela)
    {
        
        $this->valor_parcela = $valor_parcela;
        return $this;
    }
    
    /**
     * Gets valor_desconto_total
     * @return Number
     */
    public function getValorDescontoTotal()
    {
        return $this->valor_desconto_total;
    }
  
    /**
     * Sets valor_desconto_total
     * @param Number $valor_desconto_total Apresenta o valor total do desconto
     * @return $this
     */
    public function setValorDescontoTotal($valor_desconto_total)
    {
        
        $this->valor_desconto_total = $valor_desconto_total;
        return $this;
    }
    
    /**
     * Gets valor_total_com_desconto
     * @return Number
     */
    public function getValorTotalComDesconto()
    {
        return $this->valor_total_com_desconto;
    }
  
    /**
     * Sets valor_total_com_desconto
     * @param Number $valor_total_com_desconto Apresenta o valor total com desconto
     * @return $this
     */
    public function setValorTotalComDesconto($valor_total_com_desconto)
    {
        
        $this->valor_total_com_desconto = $valor_total_com_desconto;
        return $this;
    }
    
    /**
     * Gets taxa_desconto
     * @return Number
     */
    public function getTaxaDesconto()
    {
        return $this->taxa_desconto;
    }
  
    /**
     * Sets taxa_desconto
     * @param Number $taxa_desconto Apresenta a taxa de desconto
     * @return $this
     */
    public function setTaxaDesconto($taxa_desconto)
    {
        
        $this->taxa_desconto = $taxa_desconto;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
