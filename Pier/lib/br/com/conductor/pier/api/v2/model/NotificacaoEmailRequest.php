<?php
/**
 * NotificacaoEmailRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * NotificacaoEmailRequest Class Doc Comment
 *
 * @category    Class
 * @description {{{notificacao_email_request_description}}}
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class NotificacaoEmailRequest implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id_template_notificacao' => 'int',
        'destinatarios' => 'string[]',
        'anexos' => '\br.com.conductor.pier.api.v2.model\AnexoNotificacaoEmailRequest[]',
        'parametros_conteudo' => 'map[string,object]'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id_template_notificacao' => 'idTemplateNotificacao',
        'destinatarios' => 'destinatarios',
        'anexos' => 'anexos',
        'parametros_conteudo' => 'parametrosConteudo'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id_template_notificacao' => 'setIdTemplateNotificacao',
        'destinatarios' => 'setDestinatarios',
        'anexos' => 'setAnexos',
        'parametros_conteudo' => 'setParametrosConteudo'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id_template_notificacao' => 'getIdTemplateNotificacao',
        'destinatarios' => 'getDestinatarios',
        'anexos' => 'getAnexos',
        'parametros_conteudo' => 'getParametrosConteudo'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id_template_notificacao {{{notificacao_email_request_id_template_notificacao_value}}}
      * @var int
      */
    protected $id_template_notificacao;
    
    /**
      * $destinatarios {{{notificacao_email_request_destinatarios_value}}}
      * @var string[]
      */
    protected $destinatarios;
    
    /**
      * $anexos {{{notificacao_email_request_anexos_value}}}
      * @var \br.com.conductor.pier.api.v2.model\AnexoNotificacaoEmailRequest[]
      */
    protected $anexos;
    
    /**
      * $parametros_conteudo {{{notificacao_email_request_parametros_conteudo_value}}}
      * @var map[string,object]
      */
    protected $parametros_conteudo;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id_template_notificacao = $data["id_template_notificacao"];
            $this->destinatarios = $data["destinatarios"];
            $this->anexos = $data["anexos"];
            $this->parametros_conteudo = $data["parametros_conteudo"];
        }
    }
    
    /**
     * Gets id_template_notificacao
     * @return int
     */
    public function getIdTemplateNotificacao()
    {
        return $this->id_template_notificacao;
    }
  
    /**
     * Sets id_template_notificacao
     * @param int $id_template_notificacao {{{notificacao_email_request_id_template_notificacao_value}}}
     * @return $this
     */
    public function setIdTemplateNotificacao($id_template_notificacao)
    {
        
        $this->id_template_notificacao = $id_template_notificacao;
        return $this;
    }
    
    /**
     * Gets destinatarios
     * @return string[]
     */
    public function getDestinatarios()
    {
        return $this->destinatarios;
    }
  
    /**
     * Sets destinatarios
     * @param string[] $destinatarios {{{notificacao_email_request_destinatarios_value}}}
     * @return $this
     */
    public function setDestinatarios($destinatarios)
    {
        
        $this->destinatarios = $destinatarios;
        return $this;
    }
    
    /**
     * Gets anexos
     * @return \br.com.conductor.pier.api.v2.model\AnexoNotificacaoEmailRequest[]
     */
    public function getAnexos()
    {
        return $this->anexos;
    }
  
    /**
     * Sets anexos
     * @param \br.com.conductor.pier.api.v2.model\AnexoNotificacaoEmailRequest[] $anexos {{{notificacao_email_request_anexos_value}}}
     * @return $this
     */
    public function setAnexos($anexos)
    {
        
        $this->anexos = $anexos;
        return $this;
    }
    
    /**
     * Gets parametros_conteudo
     * @return map[string,object]
     */
    public function getParametrosConteudo()
    {
        return $this->parametros_conteudo;
    }
  
    /**
     * Sets parametros_conteudo
     * @param map[string,object] $parametros_conteudo {{{notificacao_email_request_parametros_conteudo_value}}}
     * @return $this
     */
    public function setParametrosConteudo($parametros_conteudo)
    {
        
        $this->parametros_conteudo = $parametros_conteudo;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
