<?php
/**
 * DetalheOperacaoResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  br.com.conductor.pier.api.v2.invoker
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace br.com.conductor.pier.api.v2.model;

use \ArrayAccess;
/**
 * DetalheOperacaoResponse Class Doc Comment
 *
 * @category    Class
 * @description {{{detalhe_operacao_response_description}}}
 * @package     br.com.conductor.pier.api.v2.invoker
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class DetalheOperacaoResponse implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id_operacao' => 'int',
        'codigo_processamento' => 'string',
        'codigo_processamento_cancelamento' => 'string',
        'nome_operacao' => 'string',
        'descricao_operacao' => 'string',
        'plano_minimo' => 'int',
        'plano_maximo' => 'int',
        'valor_minimo' => 'Number',
        'valor_maximo' => 'Number',
        'flag_cobra_juros' => 'bool',
        'taxa_juros' => 'Number',
        'flag_cobra_tarifa' => 'bool',
        'taxa_tarifa' => 'Number',
        'valor_tac' => 'Number',
        'percentual_tac' => 'Number',
        'valor_operacao' => 'Number',
        'carencia' => 'int',
        'excedente_permitido' => 'Number',
        'flag_permitir_parcelamento' => 'bool'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id_operacao' => 'idOperacao',
        'codigo_processamento' => 'codigoProcessamento',
        'codigo_processamento_cancelamento' => 'codigoProcessamentoCancelamento',
        'nome_operacao' => 'nomeOperacao',
        'descricao_operacao' => 'descricaoOperacao',
        'plano_minimo' => 'planoMinimo',
        'plano_maximo' => 'planoMaximo',
        'valor_minimo' => 'valorMinimo',
        'valor_maximo' => 'valorMaximo',
        'flag_cobra_juros' => 'flagCobraJuros',
        'taxa_juros' => 'taxaJuros',
        'flag_cobra_tarifa' => 'flagCobraTarifa',
        'taxa_tarifa' => 'taxaTarifa',
        'valor_tac' => 'valorTac',
        'percentual_tac' => 'percentualTac',
        'valor_operacao' => 'valorOperacao',
        'carencia' => 'carencia',
        'excedente_permitido' => 'excedentePermitido',
        'flag_permitir_parcelamento' => 'flagPermitirParcelamento'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id_operacao' => 'setIdOperacao',
        'codigo_processamento' => 'setCodigoProcessamento',
        'codigo_processamento_cancelamento' => 'setCodigoProcessamentoCancelamento',
        'nome_operacao' => 'setNomeOperacao',
        'descricao_operacao' => 'setDescricaoOperacao',
        'plano_minimo' => 'setPlanoMinimo',
        'plano_maximo' => 'setPlanoMaximo',
        'valor_minimo' => 'setValorMinimo',
        'valor_maximo' => 'setValorMaximo',
        'flag_cobra_juros' => 'setFlagCobraJuros',
        'taxa_juros' => 'setTaxaJuros',
        'flag_cobra_tarifa' => 'setFlagCobraTarifa',
        'taxa_tarifa' => 'setTaxaTarifa',
        'valor_tac' => 'setValorTac',
        'percentual_tac' => 'setPercentualTac',
        'valor_operacao' => 'setValorOperacao',
        'carencia' => 'setCarencia',
        'excedente_permitido' => 'setExcedentePermitido',
        'flag_permitir_parcelamento' => 'setFlagPermitirParcelamento'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id_operacao' => 'getIdOperacao',
        'codigo_processamento' => 'getCodigoProcessamento',
        'codigo_processamento_cancelamento' => 'getCodigoProcessamentoCancelamento',
        'nome_operacao' => 'getNomeOperacao',
        'descricao_operacao' => 'getDescricaoOperacao',
        'plano_minimo' => 'getPlanoMinimo',
        'plano_maximo' => 'getPlanoMaximo',
        'valor_minimo' => 'getValorMinimo',
        'valor_maximo' => 'getValorMaximo',
        'flag_cobra_juros' => 'getFlagCobraJuros',
        'taxa_juros' => 'getTaxaJuros',
        'flag_cobra_tarifa' => 'getFlagCobraTarifa',
        'taxa_tarifa' => 'getTaxaTarifa',
        'valor_tac' => 'getValorTac',
        'percentual_tac' => 'getPercentualTac',
        'valor_operacao' => 'getValorOperacao',
        'carencia' => 'getCarencia',
        'excedente_permitido' => 'getExcedentePermitido',
        'flag_permitir_parcelamento' => 'getFlagPermitirParcelamento'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id_operacao {{{detalhe_operacao_response_id_operacao_value}}}
      * @var int
      */
    protected $id_operacao;
    
    /**
      * $codigo_processamento {{{detalhe_operacao_response_codigo_processamento_value}}}
      * @var string
      */
    protected $codigo_processamento;
    
    /**
      * $codigo_processamento_cancelamento {{{detalhe_operacao_response_codigo_processamento_cancelamento_value}}}
      * @var string
      */
    protected $codigo_processamento_cancelamento;
    
    /**
      * $nome_operacao {{{detalhe_operacao_response_nome_operacao_value}}}
      * @var string
      */
    protected $nome_operacao;
    
    /**
      * $descricao_operacao {{{detalhe_operacao_response_descricao_operacao_value}}}
      * @var string
      */
    protected $descricao_operacao;
    
    /**
      * $plano_minimo {{{detalhe_operacao_response_plano_minimo_value}}}
      * @var int
      */
    protected $plano_minimo;
    
    /**
      * $plano_maximo {{{detalhe_operacao_response_plano_maximo_value}}}
      * @var int
      */
    protected $plano_maximo;
    
    /**
      * $valor_minimo {{{detalhe_operacao_response_valor_minimo_value}}}
      * @var Number
      */
    protected $valor_minimo;
    
    /**
      * $valor_maximo {{{detalhe_operacao_response_valor_maximo_value}}}
      * @var Number
      */
    protected $valor_maximo;
    
    /**
      * $flag_cobra_juros {{{detalhe_operacao_response_flag_cobra_juros_value}}}
      * @var bool
      */
    protected $flag_cobra_juros;
    
    /**
      * $taxa_juros {{{detalhe_operacao_response_taxa_juros_value}}}
      * @var Number
      */
    protected $taxa_juros;
    
    /**
      * $flag_cobra_tarifa {{{detalhe_operacao_response_flag_cobra_tarifa_value}}}
      * @var bool
      */
    protected $flag_cobra_tarifa;
    
    /**
      * $taxa_tarifa {{{detalhe_operacao_response_taxa_tarifa_value}}}
      * @var Number
      */
    protected $taxa_tarifa;
    
    /**
      * $valor_tac {{{detalhe_operacao_response_valor_tac_value}}}
      * @var Number
      */
    protected $valor_tac;
    
    /**
      * $percentual_tac {{{detalhe_operacao_response_percentual_tac_value}}}
      * @var Number
      */
    protected $percentual_tac;
    
    /**
      * $valor_operacao {{{detalhe_operacao_response_valor_operacao_value}}}
      * @var Number
      */
    protected $valor_operacao;
    
    /**
      * $carencia {{{detalhe_operacao_response_carencia_value}}}
      * @var int
      */
    protected $carencia;
    
    /**
      * $excedente_permitido {{{detalhe_operacao_response_excedente_permitido_value}}}
      * @var Number
      */
    protected $excedente_permitido;
    
    /**
      * $flag_permitir_parcelamento {{{detalhe_operacao_response_flag_permitir_parcelamento_value}}}
      * @var bool
      */
    protected $flag_permitir_parcelamento;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id_operacao = $data["id_operacao"];
            $this->codigo_processamento = $data["codigo_processamento"];
            $this->codigo_processamento_cancelamento = $data["codigo_processamento_cancelamento"];
            $this->nome_operacao = $data["nome_operacao"];
            $this->descricao_operacao = $data["descricao_operacao"];
            $this->plano_minimo = $data["plano_minimo"];
            $this->plano_maximo = $data["plano_maximo"];
            $this->valor_minimo = $data["valor_minimo"];
            $this->valor_maximo = $data["valor_maximo"];
            $this->flag_cobra_juros = $data["flag_cobra_juros"];
            $this->taxa_juros = $data["taxa_juros"];
            $this->flag_cobra_tarifa = $data["flag_cobra_tarifa"];
            $this->taxa_tarifa = $data["taxa_tarifa"];
            $this->valor_tac = $data["valor_tac"];
            $this->percentual_tac = $data["percentual_tac"];
            $this->valor_operacao = $data["valor_operacao"];
            $this->carencia = $data["carencia"];
            $this->excedente_permitido = $data["excedente_permitido"];
            $this->flag_permitir_parcelamento = $data["flag_permitir_parcelamento"];
        }
    }
    
    /**
     * Gets id_operacao
     * @return int
     */
    public function getIdOperacao()
    {
        return $this->id_operacao;
    }
  
    /**
     * Sets id_operacao
     * @param int $id_operacao {{{detalhe_operacao_response_id_operacao_value}}}
     * @return $this
     */
    public function setIdOperacao($id_operacao)
    {
        
        $this->id_operacao = $id_operacao;
        return $this;
    }
    
    /**
     * Gets codigo_processamento
     * @return string
     */
    public function getCodigoProcessamento()
    {
        return $this->codigo_processamento;
    }
  
    /**
     * Sets codigo_processamento
     * @param string $codigo_processamento {{{detalhe_operacao_response_codigo_processamento_value}}}
     * @return $this
     */
    public function setCodigoProcessamento($codigo_processamento)
    {
        
        $this->codigo_processamento = $codigo_processamento;
        return $this;
    }
    
    /**
     * Gets codigo_processamento_cancelamento
     * @return string
     */
    public function getCodigoProcessamentoCancelamento()
    {
        return $this->codigo_processamento_cancelamento;
    }
  
    /**
     * Sets codigo_processamento_cancelamento
     * @param string $codigo_processamento_cancelamento {{{detalhe_operacao_response_codigo_processamento_cancelamento_value}}}
     * @return $this
     */
    public function setCodigoProcessamentoCancelamento($codigo_processamento_cancelamento)
    {
        
        $this->codigo_processamento_cancelamento = $codigo_processamento_cancelamento;
        return $this;
    }
    
    /**
     * Gets nome_operacao
     * @return string
     */
    public function getNomeOperacao()
    {
        return $this->nome_operacao;
    }
  
    /**
     * Sets nome_operacao
     * @param string $nome_operacao {{{detalhe_operacao_response_nome_operacao_value}}}
     * @return $this
     */
    public function setNomeOperacao($nome_operacao)
    {
        
        $this->nome_operacao = $nome_operacao;
        return $this;
    }
    
    /**
     * Gets descricao_operacao
     * @return string
     */
    public function getDescricaoOperacao()
    {
        return $this->descricao_operacao;
    }
  
    /**
     * Sets descricao_operacao
     * @param string $descricao_operacao {{{detalhe_operacao_response_descricao_operacao_value}}}
     * @return $this
     */
    public function setDescricaoOperacao($descricao_operacao)
    {
        
        $this->descricao_operacao = $descricao_operacao;
        return $this;
    }
    
    /**
     * Gets plano_minimo
     * @return int
     */
    public function getPlanoMinimo()
    {
        return $this->plano_minimo;
    }
  
    /**
     * Sets plano_minimo
     * @param int $plano_minimo {{{detalhe_operacao_response_plano_minimo_value}}}
     * @return $this
     */
    public function setPlanoMinimo($plano_minimo)
    {
        
        $this->plano_minimo = $plano_minimo;
        return $this;
    }
    
    /**
     * Gets plano_maximo
     * @return int
     */
    public function getPlanoMaximo()
    {
        return $this->plano_maximo;
    }
  
    /**
     * Sets plano_maximo
     * @param int $plano_maximo {{{detalhe_operacao_response_plano_maximo_value}}}
     * @return $this
     */
    public function setPlanoMaximo($plano_maximo)
    {
        
        $this->plano_maximo = $plano_maximo;
        return $this;
    }
    
    /**
     * Gets valor_minimo
     * @return Number
     */
    public function getValorMinimo()
    {
        return $this->valor_minimo;
    }
  
    /**
     * Sets valor_minimo
     * @param Number $valor_minimo {{{detalhe_operacao_response_valor_minimo_value}}}
     * @return $this
     */
    public function setValorMinimo($valor_minimo)
    {
        
        $this->valor_minimo = $valor_minimo;
        return $this;
    }
    
    /**
     * Gets valor_maximo
     * @return Number
     */
    public function getValorMaximo()
    {
        return $this->valor_maximo;
    }
  
    /**
     * Sets valor_maximo
     * @param Number $valor_maximo {{{detalhe_operacao_response_valor_maximo_value}}}
     * @return $this
     */
    public function setValorMaximo($valor_maximo)
    {
        
        $this->valor_maximo = $valor_maximo;
        return $this;
    }
    
    /**
     * Gets flag_cobra_juros
     * @return bool
     */
    public function getFlagCobraJuros()
    {
        return $this->flag_cobra_juros;
    }
  
    /**
     * Sets flag_cobra_juros
     * @param bool $flag_cobra_juros {{{detalhe_operacao_response_flag_cobra_juros_value}}}
     * @return $this
     */
    public function setFlagCobraJuros($flag_cobra_juros)
    {
        
        $this->flag_cobra_juros = $flag_cobra_juros;
        return $this;
    }
    
    /**
     * Gets taxa_juros
     * @return Number
     */
    public function getTaxaJuros()
    {
        return $this->taxa_juros;
    }
  
    /**
     * Sets taxa_juros
     * @param Number $taxa_juros {{{detalhe_operacao_response_taxa_juros_value}}}
     * @return $this
     */
    public function setTaxaJuros($taxa_juros)
    {
        
        $this->taxa_juros = $taxa_juros;
        return $this;
    }
    
    /**
     * Gets flag_cobra_tarifa
     * @return bool
     */
    public function getFlagCobraTarifa()
    {
        return $this->flag_cobra_tarifa;
    }
  
    /**
     * Sets flag_cobra_tarifa
     * @param bool $flag_cobra_tarifa {{{detalhe_operacao_response_flag_cobra_tarifa_value}}}
     * @return $this
     */
    public function setFlagCobraTarifa($flag_cobra_tarifa)
    {
        
        $this->flag_cobra_tarifa = $flag_cobra_tarifa;
        return $this;
    }
    
    /**
     * Gets taxa_tarifa
     * @return Number
     */
    public function getTaxaTarifa()
    {
        return $this->taxa_tarifa;
    }
  
    /**
     * Sets taxa_tarifa
     * @param Number $taxa_tarifa {{{detalhe_operacao_response_taxa_tarifa_value}}}
     * @return $this
     */
    public function setTaxaTarifa($taxa_tarifa)
    {
        
        $this->taxa_tarifa = $taxa_tarifa;
        return $this;
    }
    
    /**
     * Gets valor_tac
     * @return Number
     */
    public function getValorTac()
    {
        return $this->valor_tac;
    }
  
    /**
     * Sets valor_tac
     * @param Number $valor_tac {{{detalhe_operacao_response_valor_tac_value}}}
     * @return $this
     */
    public function setValorTac($valor_tac)
    {
        
        $this->valor_tac = $valor_tac;
        return $this;
    }
    
    /**
     * Gets percentual_tac
     * @return Number
     */
    public function getPercentualTac()
    {
        return $this->percentual_tac;
    }
  
    /**
     * Sets percentual_tac
     * @param Number $percentual_tac {{{detalhe_operacao_response_percentual_tac_value}}}
     * @return $this
     */
    public function setPercentualTac($percentual_tac)
    {
        
        $this->percentual_tac = $percentual_tac;
        return $this;
    }
    
    /**
     * Gets valor_operacao
     * @return Number
     */
    public function getValorOperacao()
    {
        return $this->valor_operacao;
    }
  
    /**
     * Sets valor_operacao
     * @param Number $valor_operacao {{{detalhe_operacao_response_valor_operacao_value}}}
     * @return $this
     */
    public function setValorOperacao($valor_operacao)
    {
        
        $this->valor_operacao = $valor_operacao;
        return $this;
    }
    
    /**
     * Gets carencia
     * @return int
     */
    public function getCarencia()
    {
        return $this->carencia;
    }
  
    /**
     * Sets carencia
     * @param int $carencia {{{detalhe_operacao_response_carencia_value}}}
     * @return $this
     */
    public function setCarencia($carencia)
    {
        
        $this->carencia = $carencia;
        return $this;
    }
    
    /**
     * Gets excedente_permitido
     * @return Number
     */
    public function getExcedentePermitido()
    {
        return $this->excedente_permitido;
    }
  
    /**
     * Sets excedente_permitido
     * @param Number $excedente_permitido {{{detalhe_operacao_response_excedente_permitido_value}}}
     * @return $this
     */
    public function setExcedentePermitido($excedente_permitido)
    {
        
        $this->excedente_permitido = $excedente_permitido;
        return $this;
    }
    
    /**
     * Gets flag_permitir_parcelamento
     * @return bool
     */
    public function getFlagPermitirParcelamento()
    {
        return $this->flag_permitir_parcelamento;
    }
  
    /**
     * Sets flag_permitir_parcelamento
     * @param bool $flag_permitir_parcelamento {{{detalhe_operacao_response_flag_permitir_parcelamento_value}}}
     * @return $this
     */
    public function setFlagPermitirParcelamento($flag_permitir_parcelamento)
    {
        
        $this->flag_permitir_parcelamento = $flag_permitir_parcelamento;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\br.com.conductor.pier.api.v2.invoker\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
